MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005 ;***************************************
                      00006 ; DEFINITIONS
                      00007 ;***************************************
                      00008     #define     RS      PORTD,2
                      00009         #define E       PORTD,3
                      00010 
                      00011 
                      00012 ;***************************************
                      00013 ; VARIABLES
                      00014 ;***************************************
                      00015     cblock      0x20
                      00016         ; for use purely in code
  00000020            00017         keytemp
  00000021            00018         statustemp
  00000022            00019                 Table_Counter
  00000023            00020                 com
  00000024            00021                 dat
  00000025            00022         lcd_d1
  00000026            00023         lcd_d2
  00000027            00024         COUNTH
  00000028            00025         COUNTM
  00000029            00026         COUNTL
  0000002A            00027         op_time_save
  0000002B            00028         huns
  0000002C            00029         tens
  0000002D            00030         ones
  0000002E            00031         count
                      00032         ; values generated by main machine code
  0000002F            00033         op_time     ;in seconds
  00000030            00034         status1     ;where   0 = none      1 = pass
  00000031            00035         status2     ;        2 = led fail  3 = flicker fail
  00000032            00036         status3
  00000033            00037         status4
  00000034            00038         status5
  00000035            00039         status6
  00000036            00040         status7
  00000037            00041         status8
  00000038            00042         status9
  00000039            00043         num_def
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003A            00044         num_tot
                      00045         
                      00046         endc
                      00047 
                      00048 
                      00049 ;***************************************
                      00050 ; MACROS
                      00051 ;***************************************
                      00052 
                      00053 ;LCD Delay
                      00054 LCD_DELAY   macro
                      00055             movlw   0xFF
                      00056             movwf   lcd_d1
                      00057             decfsz  lcd_d1,f
                      00058             goto    $-1
                      00059             endm
                      00060 
                      00061 ; Display a msg on LCD
                      00062 Display macro   Message
                      00063                 local   loop_
                      00064                 local   end_
                      00065                 clrf    Table_Counter
                      00066                 clrw
                      00067 loop_   movf    Table_Counter,W
                      00068                 call    Message
                      00069                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00070                 btfsc   STATUS,Z
                      00071                 goto    end_
                      00072                 call    WR_DATA
                      00073                 incf    Table_Counter,F
                      00074                 goto    loop_
                      00075 end_
                      00076                 endm
                      00077 
                      00078 ;move cursor one to the right
                      00079 spacebar    macro
                      00080             movlw   B'00010100'
                      00081             call    WR_INS
                      00082             endm
                      00083 
                      00084 ;Shortcuts for moving
                      00085 movlf   macro   l, f
                      00086         movlw   l
                      00087         movwf   f
                      00088         endm
                      00089 
                      00090 movff   macro   source, dest
                      00091         movf    source, W
                      00092         movwf   dest
                      00093         endm
                      00094 
                      00095 ; Display a single digit number on LCD (literal or from a reg)
                      00096 writenum    macro   number
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097             movlw    number
                      00098             addlw   B'00110000'
                      00099             movwf   dat
                      00100             call WR_DATA
                      00101             endm
                      00102 
                      00103 writenum_reg    macro   reg
                      00104             movfw    reg
                      00105             addlw   B'00110000'
                      00106             movwf   dat
                      00107             call WR_DATA
                      00108             endm
                      00109 
                      00110 
                      00111 ;***************************************
                      00112 ; VECTORS
                      00113 ;***************************************
                      00114 
                      00115     ORG       0x000             ;RESET vector must always be at 0x00
0000   2???           00116          goto      init          ;Just jump to the main code section.
                      00117 
                      00118 
                      00119 ;***************************************
                      00120 ; LOOK UP TABLE (MESSAGES)
                      00121 ;***************************************
0001                  00122 Standby_Msg
0001   0782           00123                 addwf   PCL,F
0002   3453 3454 3441 00124                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000A                  00125 Start_Msg
000A   0782           00126         addwf   PCL,F
000B   3449 346E 3473 00127         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
001C                  00128 End_Msg
001C   0782           00129         addwf   PCL,F
001D   3443 346F 346D 00130         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
0026                  00131 Time_Msg
0026   0782           00132                 addwf   PCL,F
0027   344F 3470 3465 00133                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
0037                  00134 Seconds
0037   0782           00135         addwf   PCL,F
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0038   3420 3473 3465 00136         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0041                  00137 Not_present
0041   0782           00138         addwf   PCL,F
0042   343A 3420 346E 00139         dt      ": not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0050                  00140 Pass
0050   0782           00141                 addwf   PCL,F
0051   343A 3420 3470 00142                 dt              ": pass",0
       3461 3473 3473 
       3400 
0058                  00143 LED_fail
0058   0782           00144                 addwf   PCL,F
0059   343A 3420 344C 00145                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0064                  00146 Flick_fail
0064   0782           00147                 addwf   PCL,F
0065   343A 3420 3466 00148                 dt              ": flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0074                  00149 Total_Msg
0074   0782           00150         addwf   PCL,F
0075   3454 346F 3474 00151         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0085                  00152 Defective
0085   0782           00153         addwf   PCL,F
0086   3444 3465 3466 00154         dt      "Defective: ",0
       3465 3463 3474 
       3469 3476 3465 
       343A 3420 3400 
0092                  00155 None
0092   0782           00156         addwf   PCL,F
0093   3420 3420 3420 00157         dt      "      none", 0
       3420 3420 3420 
       346E 346F 346E 
       3465 3400 
                      00158 ;Spacebar
                      00159 ;        addwf   PCL,F
                      00160 ;        dt      " ",0
009E                  00161 Emergency_Msg
009E   0782           00162         addwf   PCL,F
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009F   3445 344D 3445 00163         dt      "EMERGENCY STOP", 0
       3452 3447 3445 
       344E 3443 3459 
       3420 3453 3454 
       344F 3450 3400 
00AE                  00164 Export_Msg
00AE   0782           00165         addwf   PCL,F
00AF   3445 3478 3470 00166         dt      "Exporting . . .",0
       346F 3472 3474 
       3469 346E 3467 
       3420 342E 3420 
       342E 3420 342E 
       3400 
                      00167 
                      00168 ;***************************************
                      00169 ; MAIN PROGRAM
                      00170 ;***************************************
                      00171 
00BF                  00172 init
00BF   018B           00173          clrf      INTCON         ; No interrupts
                      00174 
00C0   1683           00175          bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C1   0185           00176          clrf      TRISA          ; All port A is output
00C2   30F2           00177          movlw     b'11110010'    ; Set required keypad inputs
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C3   0086           00178          movwf     TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C4   0187           00179          clrf      TRISC          ; All port C is output
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   0188           00180          clrf      TRISD          ; All port D is output
                      00181 
00C6   1283           00182          bcf       STATUS,RP0     ; select bank 0
00C7   0185           00183          clrf      PORTA
00C8   0186           00184          clrf      PORTB
00C9   0187           00185          clrf      PORTC
00CA   0188           00186          clrf      PORTD
                      00187 
00CB   2???           00188          call      InitLCD    ;Initialize the LCD
                      00189         Display   Standby_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
00CC   01A2               M                 clrf    Table_Counter
00CD   0103               M                 clrw
00CE   0822               M loop_   movf    Table_Counter,W
00CF   2???               M                 call    Standby_Msg
00D0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00D1   1903               M                 btfsc   STATUS,Z
00D2   2???               M                 goto    end_
00D3   2???               M                 call    WR_DATA
00D4   0AA2               M                 incf    Table_Counter,F
00D5   2???               M                 goto    loop_
00D6                      M end_
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00190 
                      00191  ;--------------------------------------------------
                      00192  ; This is standby mode. I would like to display real date and time here
                      00193  ; eventually.
                      00194 
Warning[207]: Found label after column 1. (waiting)
00D6                  00195   waiting
00D6   1C86           00196         btfss           PORTB,1     ;Wait until data is available from the keypad
00D7   2???           00197          goto           $-1
                      00198 
00D8   0E06           00199          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
00D9   390F           00200          andlw          0x0F
00DA   3A0D           00201          xorlw      0xD         ;will be all zeros if its "START:
00DB   1903           00202          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
00DC   2???           00203          goto       start
                      00204 
00DD   1886           00205          btfsc          PORTB,1     ;Wait until key is released
00DE   2???           00206          goto           $-1
00DF   2???           00207          goto       waiting
                      00208 
                      00209 ;-----------------------------------------------------------
                      00210 ;       ACTUAL OPERATION (im just adding values manually now)
                      00211 
00E0                  00212 start
                      00213         ;code to start the timer should go here
00E0   2???           00214         call        Clear_Display
                      00215         Display     Start_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E1   01A2               M                 clrf    Table_Counter
00E2   0103               M                 clrw
00E3   0822               M loop_   movf    Table_Counter,W
00E4   2???               M                 call    Start_Msg
00E5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E6   1903               M                 btfsc   STATUS,Z
00E7   2???               M                 goto    end_
00E8   2???               M                 call    WR_DATA
00E9   0AA2               M                 incf    Table_Counter,F
00EA   2???               M                 goto    loop_
00EB                      M end_
                      00216 
                      00217         ; just shitting around for now
00EB   2???           00218         call        HalfS
00EC   2???           00219         call        Clear_Display
                      00220         writenum    0x5
00ED   3005               M             movlw    0x5
00EE   3E30               M             addlw   B'00110000'
00EF   00A4               M             movwf   dat
00F0   2???               M             call WR_DATA
00F1   2???           00221         call        HalfS
00F2   2???           00222         call        Clear_Display
                      00223         writenum    0x4
00F3   3004               M             movlw    0x4
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F4   3E30               M             addlw   B'00110000'
00F5   00A4               M             movwf   dat
00F6   2???               M             call WR_DATA
00F7   2???           00224         call        HalfS
00F8   2???           00225         call        Clear_Display
                      00226         writenum    0x3
00F9   3003               M             movlw    0x3
00FA   3E30               M             addlw   B'00110000'
00FB   00A4               M             movwf   dat
00FC   2???               M             call WR_DATA
00FD   2???           00227         call        HalfS
00FE   2???           00228         call        Clear_Display
                      00229         writenum    0x2
00FF   3002               M             movlw    0x2
0100   3E30               M             addlw   B'00110000'
0101   00A4               M             movwf   dat
0102   2???               M             call WR_DATA
0103   2???           00230         call        HalfS
0104   2???           00231         call        Clear_Display
                      00232         writenum    0x1
0105   3001               M             movlw    0x1
0106   3E30               M             addlw   B'00110000'
0107   00A4               M             movwf   dat
0108   2???               M             call WR_DATA
0109   2???           00233         call        HalfS
                      00234 
                      00235         ; Putting values in manually. This will be done automatically in main program
                      00236         movlf     D'74', op_time
010A   304A               M         movlw   D'74'
010B   00AF               M         movwf   op_time
                      00237         movlf     B'00', status1
010C   3000               M         movlw   B'00'
010D   00B0               M         movwf   status1
                      00238         movlf     B'01', status2
010E   3001               M         movlw   B'01'
010F   00B1               M         movwf   status2
                      00239         movlf     B'10', status3
0110   3002               M         movlw   B'10'
0111   00B2               M         movwf   status3
                      00240         movlf     B'11', status4
0112   3003               M         movlw   B'11'
0113   00B3               M         movwf   status4
                      00241         movlf     B'01', status5
0114   3001               M         movlw   B'01'
0115   00B4               M         movwf   status5
                      00242         movlf     B'01', status6
0116   3001               M         movlw   B'01'
0117   00B5               M         movwf   status6
                      00243         movlf     B'01', status7
0118   3001               M         movlw   B'01'
0119   00B6               M         movwf   status7
                      00244         movlf     B'11', status8
011A   3003               M         movlw   B'11'
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011B   00B7               M         movwf   status8
                      00245         movlf     B'00', status9
011C   3000               M         movlw   B'00'
011D   00B8               M         movwf   status9
                      00246         movlf     D'3', num_def
011E   3003               M         movlw   D'3'
011F   00B9               M         movwf   num_def
                      00247         movlf     D'7', num_tot
0120   3007               M         movlw   D'7'
0121   00BA               M         movwf   num_tot
                      00248 
                      00249         ;code to stop the timer should go here
0122   2???           00250         call       Clear_Display
                      00251         Display    End_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0123   01A2               M                 clrf    Table_Counter
0124   0103               M                 clrw
0125   0822               M loop_   movf    Table_Counter,W
0126   2???               M                 call    End_Msg
0127   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0128   1903               M                 btfsc   STATUS,Z
0129   2???               M                 goto    end_
012A   2???               M                 call    WR_DATA
012B   0AA2               M                 incf    Table_Counter,F
012C   2???               M                 goto    loop_
012D                      M end_
012D   2???           00252         call       HalfS
012E   2???           00253         call       time
012F   2???           00254         call       HalfS
0130   2???           00255         call       HalfS
0131   2???           00256         call       summary
0132   2???           00257         call       HalfS
0133   2???           00258         call       HalfS
0134   2???           00259         call       defective
                      00260 ;-----------------------------------------------------------------------
                      00261 ; Data display interface
                      00262 
0135   1C86           00263 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
0136   2???           00264          goto           $-1
                      00265 
0137   0E06           00266          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0138   390F           00267          andlw          0x0F
0139   2???           00268          call       information
                      00269 
013A   1886           00270          btfsc          PORTB,1     ;Wait until key is released
013B   2???           00271          goto           $-1
013C   2???           00272          goto       poll
                      00273 
                      00274 ; END OF MAIN PROGRAM
                      00275 ;-------------------------------------------------------------------------
                      00276 
                      00277 
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00278 
                      00279 ;***************************************
                      00280 ; DATA DISPLAY ROUTINE (written by me)
                      00281 ;***************************************
013D                  00282 information
013D   00A0           00283     movwf   keytemp             ; save value of W in msgtemp
                      00284 
013E                  00285 check_1
013E   3A00           00286     xorlw   0x0         ;will be all zeros if its 1
013F   1D03           00287     btfss   STATUS,Z    ;and Z will be high, so skip 
0140   2???           00288     goto    check_2
0141   2???           00289     call    Clear_Display
                      00290     writenum 0x1
0142   3001               M             movlw    0x1
0143   3E30               M             addlw   B'00110000'
0144   00A4               M             movwf   dat
0145   2???               M             call WR_DATA
0146   0830           00291     movf    status1, W
0147   2???           00292     call    display_status
0148   0008           00293     return
                      00294 
0149                  00295 check_2
0149   0820           00296     movf    keytemp, W
014A   3A01           00297     xorlw   0x1         
014B   1D03           00298     btfss   STATUS,Z    
014C   2???           00299     goto    check_3
014D   2???           00300     call    Clear_Display
                      00301     writenum 0x2
014E   3002               M             movlw    0x2
014F   3E30               M             addlw   B'00110000'
0150   00A4               M             movwf   dat
0151   2???               M             call WR_DATA
0152   0831           00302     movf    status2, W
0153   2???           00303     call    display_status
0154   0008           00304     return
                      00305 
0155                  00306 check_3
0155   0820           00307     movf    keytemp, W
0156   3A02           00308     xorlw   0x2
0157   1D03           00309     btfss   STATUS,Z
0158   2???           00310     goto    check_4
0159   2???           00311     call    Clear_Display
                      00312     writenum 0x3
015A   3003               M             movlw    0x3
015B   3E30               M             addlw   B'00110000'
015C   00A4               M             movwf   dat
015D   2???               M             call WR_DATA
015E   0832           00313     movf    status3, W
015F   2???           00314     call    display_status
0160   0008           00315     return
                      00316 
0161                  00317 check_4
0161   0820           00318     movf    keytemp, W
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0162   3A04           00319     xorlw   0x4
0163   1D03           00320     btfss   STATUS,Z
0164   2???           00321     goto    check_5
0165   2???           00322     call    Clear_Display
                      00323     writenum 0x4
0166   3004               M             movlw    0x4
0167   3E30               M             addlw   B'00110000'
0168   00A4               M             movwf   dat
0169   2???               M             call WR_DATA
016A   0833           00324     movf    status4, W
016B   2???           00325     call    display_status
016C   0008           00326     return
                      00327 
016D                  00328 check_5
016D   0820           00329     movf    keytemp, W
016E   3A05           00330     xorlw   0x5
016F   1D03           00331     btfss   STATUS,Z
0170   2???           00332     goto    check_6
0171   2???           00333     call    Clear_Display
                      00334     writenum 0x5
0172   3005               M             movlw    0x5
0173   3E30               M             addlw   B'00110000'
0174   00A4               M             movwf   dat
0175   2???               M             call WR_DATA
0176   0834           00335     movf    status5, W
0177   2???           00336     call    display_status
0178   0008           00337     return
                      00338 
0179                  00339 check_6
0179   0820           00340     movf    keytemp, W
017A   3A06           00341     xorlw   0x6
017B   1D03           00342     btfss   STATUS,Z
017C   2???           00343     goto    check_7
017D   2???           00344     call    Clear_Display
                      00345     writenum 0x6
017E   3006               M             movlw    0x6
017F   3E30               M             addlw   B'00110000'
0180   00A4               M             movwf   dat
0181   2???               M             call WR_DATA
0182   0835           00346     movf    status6, W
0183   2???           00347     call    display_status
0184   0008           00348     return
                      00349 
0185                  00350 check_7
0185   0820           00351     movf    keytemp, W
0186   3A08           00352     xorlw   0x8
0187   1D03           00353     btfss   STATUS,Z
0188   2???           00354     goto    check_8
0189   2???           00355     call    Clear_Display
                      00356     writenum 0x7
018A   3007               M             movlw    0x7
018B   3E30               M             addlw   B'00110000'
018C   00A4               M             movwf   dat
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018D   2???               M             call WR_DATA
018E   0836           00357     movf    status7, W
018F   2???           00358     call    display_status
0190   0008           00359     return
                      00360 
0191                  00361 check_8
0191   0820           00362     movf    keytemp, W
0192   3A09           00363     xorlw   0x9
0193   1D03           00364     btfss   STATUS,Z
0194   2???           00365     goto    check_9
0195   2???           00366     call    Clear_Display
                      00367     writenum 0x8
0196   3008               M             movlw    0x8
0197   3E30               M             addlw   B'00110000'
0198   00A4               M             movwf   dat
0199   2???               M             call WR_DATA
019A   0837           00368     movf    status8, W
019B   2???           00369     call    display_status
019C   0008           00370     return
                      00371 
019D                  00372 check_9
019D   0820           00373     movf    keytemp, W
019E   3A0A           00374     xorlw   0xA
019F   1D03           00375     btfss   STATUS,Z
01A0   2???           00376     goto    check_summary
01A1   2???           00377     call    Clear_Display
                      00378     writenum 0x9
01A2   3009               M             movlw    0x9
01A3   3E30               M             addlw   B'00110000'
01A4   00A4               M             movwf   dat
01A5   2???               M             call WR_DATA
01A6   0838           00379     movf    status9, W
01A7   2???           00380     call    display_status
01A8   0008           00381     return
                      00382 
01A9                  00383 check_summary           
01A9   0820           00384     movf    keytemp, W
01AA   3A03           00385     xorlw   0x3
01AB   1D03           00386     btfss   STATUS,Z
01AC   2???           00387     goto    check_defective
01AD   2???           00388     call    summary
01AE   0008           00389     return
                      00390 
01AF                  00391 check_defective
01AF   0820           00392     movf    keytemp, W
01B0   3A07           00393     xorlw   0x7
01B1   1D03           00394     btfss   STATUS,Z
01B2   2???           00395     goto    check_time
01B3   2???           00396     call    defective
01B4   0008           00397     return
                      00398 
01B5                  00399 check_time
01B5   0820           00400     movf    keytemp, W
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B6   3A0B           00401     xorlw   0xB
01B7   1D03           00402     btfss   STATUS,Z
01B8   2???           00403     goto    check_export
01B9   2???           00404     call    time
01BA   0008           00405     return
                      00406 
01BB                  00407 check_export                ;doesn't actually export yet
01BB   0820           00408     movf    keytemp, W
01BC   3A0F           00409     xorlw   0xF
01BD   1D03           00410     btfss   STATUS,Z
01BE   2???           00411     goto    check_start
01BF   2???           00412     call    export
01C0   0008           00413     return
                      00414 
01C1                  00415 check_start
01C1   0820           00416     movf    keytemp, W
01C2   3A0D           00417     xorlw   0xD
01C3   1D03           00418     btfss   STATUS,Z
01C4   2???           00419     goto    check_standby
01C5   2???           00420     goto    start
                      00421 
01C6                  00422 check_standby
01C6   0820           00423     movf    keytemp, W
01C7   3A0E           00424     xorlw   0xE
01C8   1D03           00425     btfss   STATUS,Z
01C9   2???           00426     goto    default_key
01CA   2???           00427     call    Clear_Display
                      00428     Display Standby_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
01CB   01A2               M                 clrf    Table_Counter
01CC   0103               M                 clrw
01CD   0822               M loop_   movf    Table_Counter,W
01CE   2???               M                 call    Standby_Msg
01CF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D0   1903               M                 btfsc   STATUS,Z
01D1   2???               M                 goto    end_
01D2   2???               M                 call    WR_DATA
01D3   0AA2               M                 incf    Table_Counter,F
01D4   2???               M                 goto    loop_
01D5                      M end_
01D5   2???           00429     goto    waiting
                      00430 
01D6                  00431 default_key
01D6   0008           00432     return
                      00433 
                      00434 
                      00435 ;Display status subroutine
01D7                  00436 display_status
01D7   00A1           00437     movwf  statustemp
                      00438 
01D8                  00439 check_none
01D8   3A00           00440     xorlw   0x0
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D9   1D03           00441     btfss   STATUS,Z
01DA   2???           00442     goto    check_pass
                      00443     Display Not_present
  0000                    M                 local   loop_
  0000                    M                 local   end_
01DB   01A2               M                 clrf    Table_Counter
01DC   0103               M                 clrw
01DD   0822               M loop_   movf    Table_Counter,W
01DE   2???               M                 call    Not_present
01DF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E0   1903               M                 btfsc   STATUS,Z
01E1   2???               M                 goto    end_
01E2   2???               M                 call    WR_DATA
01E3   0AA2               M                 incf    Table_Counter,F
01E4   2???               M                 goto    loop_
01E5                      M end_
01E5   0008           00444     return
                      00445 
01E6                  00446 check_pass
01E6   0821           00447     movf    statustemp, W
01E7   3A01           00448     xorlw   0x1
01E8   1D03           00449     btfss   STATUS,Z
01E9   2???           00450     goto    check_LED
                      00451     Display Pass
  0000                    M                 local   loop_
  0000                    M                 local   end_
01EA   01A2               M                 clrf    Table_Counter
01EB   0103               M                 clrw
01EC   0822               M loop_   movf    Table_Counter,W
01ED   2???               M                 call    Pass
01EE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01EF   1903               M                 btfsc   STATUS,Z
01F0   2???               M                 goto    end_
01F1   2???               M                 call    WR_DATA
01F2   0AA2               M                 incf    Table_Counter,F
01F3   2???               M                 goto    loop_
01F4                      M end_
01F4   0008           00452     return
                      00453 
01F5                  00454 check_LED
01F5   0821           00455     movf    statustemp, W
01F6   3A02           00456     xorlw   0x2
01F7   1D03           00457     btfss   STATUS,Z
01F8   2???           00458     goto    check_flick
                      00459     Display LED_fail
  0000                    M                 local   loop_
  0000                    M                 local   end_
01F9   01A2               M                 clrf    Table_Counter
01FA   0103               M                 clrw
01FB   0822               M loop_   movf    Table_Counter,W
01FC   2???               M                 call    LED_fail
01FD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FE   1903               M                 btfsc   STATUS,Z
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FF   2???               M                 goto    end_
0200   2???               M                 call    WR_DATA
0201   0AA2               M                 incf    Table_Counter,F
0202   2???               M                 goto    loop_
0203                      M end_
0203   0008           00460     return
                      00461 
0204                  00462 check_flick
0204   0821           00463     movf    statustemp, W
0205   3A03           00464     xorlw   0x3
0206   1D03           00465     btfss   STATUS,Z
0207   2???           00466     goto    default_status
                      00467     Display Flick_fail
  0000                    M                 local   loop_
  0000                    M                 local   end_
0208   01A2               M                 clrf    Table_Counter
0209   0103               M                 clrw
020A   0822               M loop_   movf    Table_Counter,W
020B   2???               M                 call    Flick_fail
020C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
020D   1903               M                 btfsc   STATUS,Z
020E   2???               M                 goto    end_
020F   2???               M                 call    WR_DATA
0210   0AA2               M                 incf    Table_Counter,F
0211   2???               M                 goto    loop_
0212                      M end_
0212   0008           00468     return
                      00469 
0213                  00470 default_status
0213   0008           00471     return
                      00472 
                      00473 ; Summary Subroutine
0214                  00474 summary
0214   2???           00475     call            Clear_Display
                      00476     Display         Total_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0215   01A2               M                 clrf    Table_Counter
0216   0103               M                 clrw
0217   0822               M loop_   movf    Table_Counter,W
0218   2???               M                 call    Total_Msg
0219   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
021A   1903               M                 btfsc   STATUS,Z
021B   2???               M                 goto    end_
021C   2???               M                 call    WR_DATA
021D   0AA2               M                 incf    Table_Counter,F
021E   2???               M                 goto    loop_
021F                      M end_
                      00477     writenum_reg    num_tot
021F   083A               M             movfw    num_tot
0220   3E30               M             addlw   B'00110000'
0221   00A4               M             movwf   dat
0222   2???               M             call WR_DATA
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0223   2???           00478     call            Switch_Lines
                      00479     Display         Defective
  0000                    M                 local   loop_
  0000                    M                 local   end_
0224   01A2               M                 clrf    Table_Counter
0225   0103               M                 clrw
0226   0822               M loop_   movf    Table_Counter,W
0227   2???               M                 call    Defective
0228   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0229   1903               M                 btfsc   STATUS,Z
022A   2???               M                 goto    end_
022B   2???               M                 call    WR_DATA
022C   0AA2               M                 incf    Table_Counter,F
022D   2???               M                 goto    loop_
022E                      M end_
                      00480     writenum_reg    num_def
022E   0839               M             movfw    num_def
022F   3E30               M             addlw   B'00110000'
0230   00A4               M             movwf   dat
0231   2???               M             call WR_DATA
0232   0008           00481     return
                      00482 
                      00483 ; Defective candles Subroutine
0233                  00484 defective
0233   2???           00485     call            Clear_Display
                      00486     Display         Defective
  0000                    M                 local   loop_
  0000                    M                 local   end_
0234   01A2               M                 clrf    Table_Counter
0235   0103               M                 clrw
0236   0822               M loop_   movf    Table_Counter,W
0237   2???               M                 call    Defective
0238   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0239   1903               M                 btfsc   STATUS,Z
023A   2???               M                 goto    end_
023B   2???               M                 call    WR_DATA
023C   0AA2               M                 incf    Table_Counter,F
023D   2???               M                 goto    loop_
023E                      M end_
023E   2???           00487     call            Switch_Lines
023F   08B9           00488     movf            num_def, F
0240   1D03           00489     btfss           STATUS,Z         ;if none defective, just say "none"
0241   2???           00490     goto            one
                      00491     Display         None
  0000                    M                 local   loop_
  0000                    M                 local   end_
0242   01A2               M                 clrf    Table_Counter
0243   0103               M                 clrw
0244   0822               M loop_   movf    Table_Counter,W
0245   2???               M                 call    None
0246   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0247   1903               M                 btfsc   STATUS,Z
0248   2???               M                 goto    end_
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0249   2???               M                 call    WR_DATA
024A   0AA2               M                 incf    Table_Counter,F
024B   2???               M                 goto    loop_
024C                      M end_
024C   0008           00492     return
024D                  00493 one
024D   1CB0           00494     btfss           status1, 1          ;defective if status is 10 or 11
024E   2???           00495     goto            two
                      00496     writenum        0x1
024F   3001               M             movlw    0x1
0250   3E30               M             addlw   B'00110000'
0251   00A4               M             movwf   dat
0252   2???               M             call WR_DATA
                      00497     spacebar
0253   3014               M             movlw   B'00010100'
0254   2???               M             call    WR_INS
0255                  00498 two
0255   1CB1           00499     btfss           status2, 1          ;defective if status is 10 or 11
0256   2???           00500     goto            three
                      00501     writenum        0x2
0257   3002               M             movlw    0x2
0258   3E30               M             addlw   B'00110000'
0259   00A4               M             movwf   dat
025A   2???               M             call WR_DATA
                      00502     spacebar
025B   3014               M             movlw   B'00010100'
025C   2???               M             call    WR_INS
025D                  00503 three
025D   1CB2           00504     btfss           status3, 1          ;defective if status is 10 or 11
025E   2???           00505     goto            four
                      00506     writenum        0x3
025F   3003               M             movlw    0x3
0260   3E30               M             addlw   B'00110000'
0261   00A4               M             movwf   dat
0262   2???               M             call WR_DATA
                      00507     spacebar
0263   3014               M             movlw   B'00010100'
0264   2???               M             call    WR_INS
0265                  00508 four
0265   1CB3           00509     btfss           status4, 1          ;defective if status is 10 or 11
0266   2???           00510     goto            five
                      00511     writenum        0x4
0267   3004               M             movlw    0x4
0268   3E30               M             addlw   B'00110000'
0269   00A4               M             movwf   dat
026A   2???               M             call WR_DATA
                      00512     spacebar
026B   3014               M             movlw   B'00010100'
026C   2???               M             call    WR_INS
026D                  00513 five
026D   1CB4           00514     btfss           status5, 1          ;defective if status is 10 or 11
026E   2???           00515     goto            six
                      00516     writenum        0x5
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

026F   3005               M             movlw    0x5
0270   3E30               M             addlw   B'00110000'
0271   00A4               M             movwf   dat
0272   2???               M             call WR_DATA
                      00517     spacebar
0273   3014               M             movlw   B'00010100'
0274   2???               M             call    WR_INS
0275                  00518 six
0275   1CB5           00519     btfss           status6, 1          ;defective if status is 10 or 11
0276   2???           00520     goto            seven
                      00521     writenum        0x6
0277   3006               M             movlw    0x6
0278   3E30               M             addlw   B'00110000'
0279   00A4               M             movwf   dat
027A   2???               M             call WR_DATA
                      00522     spacebar
027B   3014               M             movlw   B'00010100'
027C   2???               M             call    WR_INS
027D                  00523 seven
027D   1CB6           00524     btfss           status7, 1          ;defective if status is 10 or 11
027E   2???           00525     goto            eight
                      00526     writenum        0x7
027F   3007               M             movlw    0x7
0280   3E30               M             addlw   B'00110000'
0281   00A4               M             movwf   dat
0282   2???               M             call WR_DATA
                      00527     spacebar
0283   3014               M             movlw   B'00010100'
0284   2???               M             call    WR_INS
0285                  00528 eight
0285   1CB7           00529     btfss           status8, 1          ;defective if status is 10 or 11
0286   2???           00530     goto            nine
                      00531     writenum        0x8
0287   3008               M             movlw    0x8
0288   3E30               M             addlw   B'00110000'
0289   00A4               M             movwf   dat
028A   2???               M             call WR_DATA
                      00532     spacebar
028B   3014               M             movlw   B'00010100'
028C   2???               M             call    WR_INS
028D                  00533 nine
028D   1CB8           00534     btfss           status9, 1          ;defective if status is 10 or 11
028E   2???           00535     goto            end_defective
                      00536     writenum        0x9
028F   3009               M             movlw    0x9
0290   3E30               M             addlw   B'00110000'
0291   00A4               M             movwf   dat
0292   2???               M             call WR_DATA
0293                  00537 end_defective
0293   0008           00538     return
                      00539 
                      00540 ; Time subroutine
                      00541 ; Right now this takes the time in seconds as a binary number in op_time
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00542 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00543 ; incremented every second. However I may just take the stop time - start time
                      00544 ; from the RTC data so this might change a lot.
0294                  00545 time
0294   2???           00546     call    Clear_Display
                      00547     Display Time_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0295   01A2               M                 clrf    Table_Counter
0296   0103               M                 clrw
0297   0822               M loop_   movf    Table_Counter,W
0298   2???               M                 call    Time_Msg
0299   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
029A   1903               M                 btfsc   STATUS,Z
029B   2???               M                 goto    end_
029C   2???               M                 call    WR_DATA
029D   0AA2               M                 incf    Table_Counter,F
029E   2???               M                 goto    loop_
029F                      M end_
029F   2???           00548     call    Switch_Lines
02A0   082F           00549     movf    op_time, W
02A1   2???           00550     call    big_number
02A2   082B           00551     movf    huns, W
02A3   1903           00552     btfsc   STATUS,Z        ;if huns is zero don't display it
02A4   2???           00553     goto    no_huns
                      00554     writenum_reg    huns
02A5   082B               M             movfw    huns
02A6   3E30               M             addlw   B'00110000'
02A7   00A4               M             movwf   dat
02A8   2???               M             call WR_DATA
02A9                  00555 no_huns
02A9   082C           00556     movf    tens, W
02AA   1903           00557     btfsc   STATUS,Z        ;if tens is zero don't display it
02AB   2???           00558     goto    no_tens
                      00559     writenum_reg    tens
02AC   082C               M             movfw    tens
02AD   3E30               M             addlw   B'00110000'
02AE   00A4               M             movwf   dat
02AF   2???               M             call WR_DATA
02B0                  00560 no_tens
                      00561     writenum_reg    ones
02B0   082D               M             movfw    ones
02B1   3E30               M             addlw   B'00110000'
02B2   00A4               M             movwf   dat
02B3   2???               M             call WR_DATA
                      00562     Display Seconds
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B4   01A2               M                 clrf    Table_Counter
02B5   0103               M                 clrw
02B6   0822               M loop_   movf    Table_Counter,W
02B7   2???               M                 call    Seconds
02B8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B9   1903               M                 btfsc   STATUS,Z
02BA   2???               M                 goto    end_
02BB   2???               M                 call    WR_DATA
02BC   0AA2               M                 incf    Table_Counter,F
02BD   2???               M                 goto    loop_
02BE                      M end_
02BE   0008           00563     return
                      00564 
                      00565 ; Export subroutine         (DOESNT ACTUALLY EXPORT YET!)
02BF                  00566 export
02BF   2???           00567     call    Clear_Display
                      00568     Display Export_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C0   01A2               M                 clrf    Table_Counter
02C1   0103               M                 clrw
02C2   0822               M loop_   movf    Table_Counter,W
02C3   2???               M                 call    Export_Msg
02C4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C5   1903               M                 btfsc   STATUS,Z
02C6   2???               M                 goto    end_
02C7   2???               M                 call    WR_DATA
02C8   0AA2               M                 incf    Table_Counter,F
02C9   2???               M                 goto    loop_
02CA                      M end_
02CA   2???           00569     call    HalfS
02CB   2???           00570     call    HalfS
02CC   2???           00571     call    Clear_Display
                      00572     Display End_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
02CD   01A2               M                 clrf    Table_Counter
02CE   0103               M                 clrw
02CF   0822               M loop_   movf    Table_Counter,W
02D0   2???               M                 call    End_Msg
02D1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D2   1903               M                 btfsc   STATUS,Z
02D3   2???               M                 goto    end_
02D4   2???               M                 call    WR_DATA
02D5   0AA2               M                 incf    Table_Counter,F
02D6   2???               M                 goto    loop_
02D7                      M end_
02D7   0008           00573     return
                      00574 
                      00575 
                      00576 ;***************************************
                      00577 ; DISPLAY BIG NUMBER ROUTINE
                      00578 ; modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00579 ; converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00580 ; uses "shift and add 3" algorithm
                      00581 ;***************************************
                      00582 
02D8                  00583 big_number      
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00584     movff   op_time, op_time_save         ;save the original op_time
02D8   082F               M         movf    op_time, W
02D9   00AA               M         movwf   op_time_save
                      00585     movlf   8, count                      ;will shift 8 times
02DA   3008               M         movlw   8
02DB   00AE               M         movwf   count
02DC   01AB           00586     clrf    huns
02DD   01AC           00587     clrf    tens
02DE   01AD           00588     clrf    ones
                      00589 
02DF                  00590 BCDadd3                             ; if any digit > 5, add3
02DF   3005           00591     movlw   0x5
02E0   022B           00592     subwf   huns, W
02E1   1803           00593     btfsc   STATUS, C       
02E2   2???           00594     call    add3huns
                      00595     
02E3   3005           00596     movlw   0x5
02E4   022C           00597     subwf   tens, W
02E5   1803           00598     btfsc   STATUS, C
02E6   2???           00599     call    add3tens
                      00600 
02E7   3005           00601     movlw   0x5
02E8   022D           00602     subwf   ones, W
02E9   1803           00603     btfsc   STATUS, C
02EA   2???           00604     call    add3ones
                      00605 
02EB   03AE           00606     decf    count, 1
02EC   1003           00607     bcf     STATUS, C
02ED   0DAF           00608     rlf     op_time, 1              ; shift
02EE   0DAD           00609     rlf     ones, 1
02EF   1A2D           00610     btfsc   ones,4 ;
02F0   2???           00611     call    carryones               ; carry if too large
02F1   0DAC           00612     rlf     tens, 1
                      00613 
02F2   1A2C           00614     btfsc   tens,4 ;
02F3   2???           00615     call    carrytens
02F4   0DAB           00616     rlf     huns,1
02F5   1003           00617     bcf     STATUS, C
                      00618 
02F6   082E           00619     movf    count, W
02F7   1D03           00620     btfss   STATUS, Z
02F8   2???           00621     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00622 
                      00623     movff    op_time_save, op_time     ;restore the original op_time
02F9   082A               M         movf    op_time_save, W
02FA   00AF               M         movwf   op_time
02FB   0008           00624     return
                      00625 
02FC                  00626 add3huns
02FC   3003           00627     movlw 0x3
02FD   07AB           00628     addwf huns,F
02FE   0008           00629     return
02FF                  00630 add3tens
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FF   3003           00631     movlw 0x3
0300   07AC           00632     addwf tens,F
0301   0008           00633     return
0302                  00634 add3ones
0302   3003           00635     movlw 0x3
0303   07AD           00636     addwf ones,F
0304   0008           00637     return
0305                  00638 carryones
0305   122D           00639     bcf ones, 4
0306   1403           00640     bsf STATUS, C
0307   0008           00641     return
0308                  00642 carrytens
0308   122C           00643     bcf tens, 4
0309   1403           00644     bsf STATUS, C
030A   0008           00645     return
                      00646     
                      00647 
                      00648 ;***************************************
                      00649 ; LCD ROUTINES (from sample code)
                      00650 ;***************************************
                      00651 
030B                  00652 InitLCD
030B   1283           00653         bcf STATUS,RP0
030C   1588           00654         bsf E     ;E default high
                      00655 
                      00656         ;Wait for LCD POR to finish (~15ms)
030D   2???           00657         call lcdLongDelay
030E   2???           00658         call lcdLongDelay
030F   2???           00659         call lcdLongDelay
                      00660 
                      00661         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00662         ; -> Send b'0011' 3 times
0310   3033           00663         movlw   b'00110011'
0311   2???           00664         call    WR_INS
0312   2???           00665         call lcdLongDelay
0313   2???           00666         call lcdLongDelay
0314   3032           00667         movlw   b'00110010'
0315   2???           00668         call    WR_INS
0316   2???           00669         call lcdLongDelay
0317   2???           00670         call lcdLongDelay
                      00671 
                      00672         ; 4 bits, 2 lines, 5x7 dots
0318   3028           00673         movlw   b'00101000'
0319   2???           00674         call    WR_INS
031A   2???           00675         call lcdLongDelay
031B   2???           00676         call lcdLongDelay
                      00677 
                      00678         ; display on/off
031C   300C           00679         movlw   b'00001100'
031D   2???           00680         call    WR_INS
031E   2???           00681         call lcdLongDelay
031F   2???           00682         call lcdLongDelay
                      00683 
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00684         ; Entry mode
0320   3006           00685         movlw   b'00000110'
0321   2???           00686         call    WR_INS
0322   2???           00687         call lcdLongDelay
0323   2???           00688         call lcdLongDelay
                      00689 
                      00690         ; Clear ram
0324   3001           00691         movlw   b'00000001'
0325   2???           00692         call    WR_INS
0326   2???           00693         call lcdLongDelay
0327   2???           00694         call lcdLongDelay
0328   0008           00695         return
                      00696 
                      00697 
0329                  00698 Clear_Display
0329   3001           00699                 movlw   B'00000001'
032A   2???           00700                 call    WR_INS
032B   0008           00701                 return
                      00702 
032C                  00703 Switch_Lines
032C   30C0           00704                 movlw   B'11000000'
032D   2???           00705                 call    WR_INS
032E   0008           00706                 return
                      00707 
032F                  00708 WR_INS
032F   1108           00709         bcf             RS                              ;clear RS
0330   00A3           00710         movwf   com                             ;W --> com
0331   39F0           00711         andlw   0xF0                    ;mask 4 bits MSB w = X0
0332   0088           00712         movwf   PORTD                   ;Send 4 bits MSB
0333   1588           00713         bsf             E                               ;
0334   2???           00714         call    lcdLongDelay    ;__    __
0335   1188           00715         bcf             E                               ;  |__|
0336   0E23           00716         swapf   com,w
0337   39F0           00717         andlw   0xF0                    ;1111 0010
0338   0088           00718         movwf   PORTD                   ;send 4 bits LSB
0339   1588           00719         bsf             E                               ;
033A   2???           00720         call    lcdLongDelay    ;__    __
033B   1188           00721         bcf             E                               ;  |__|
033C   2???           00722         call    lcdLongDelay
033D   0008           00723         return
                      00724 
                      00725 
033E                  00726 WR_DATA
033E   1508           00727         bsf             RS
033F   00A4           00728         movwf   dat
0340   0824           00729         movf    dat,w
0341   39F0           00730         andlw   0xF0
0342   3E04           00731         addlw   4
0343   0088           00732         movwf   PORTD
0344   1588           00733         bsf             E                               ;
0345   2???           00734         call    lcdLongDelay    ;__    __
0346   1188           00735         bcf             E                               ;  |__|
0347   0E24           00736         swapf   dat,w
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0348   39F0           00737         andlw   0xF0
0349   3E04           00738         addlw   4
034A   0088           00739         movwf   PORTD
034B   1588           00740         bsf             E                               ;
034C   2???           00741         call    lcdLongDelay    ;__    __
034D   1188           00742         bcf             E                               ;  |__|
034E   0008           00743         return
                      00744 
034F                  00745 lcdLongDelay
034F   3014           00746     movlw d'20'
0350   00A6           00747     movwf lcd_d2
0351                  00748 LLD_LOOP
                      00749     LCD_DELAY
0351   30FF               M             movlw   0xFF
0352   00A5               M             movwf   lcd_d1
0353   0BA5               M             decfsz  lcd_d1,f
0354   2???               M             goto    $-1
0355   0BA6           00750     decfsz lcd_d2,f
0356   2???           00751     goto LLD_LOOP
0357   0008           00752     return
                      00753     
                      00754 
                      00755 
                      00756 ;***************************************
                      00757 ; DELAY 0.5S ROUTINE (from sample code)
                      00758 ;***************************************
0358                  00759 HalfS
  0000                00760         local   HalfS_0
0358   3088           00761       movlw 0x88
0359   00A7           00762       movwf COUNTH
035A   30BD           00763       movlw 0xBD
035B   00A8           00764       movwf COUNTM
035C   3003           00765       movlw 0x03
035D   00A9           00766       movwf COUNTL
                      00767 
035E                  00768 HalfS_0
035E   0BA7           00769       decfsz COUNTH, f
035F   2???           00770       goto   $+2
0360   0BA8           00771       decfsz COUNTM, f
0361   2???           00772       goto   $+2
0362   0BA9           00773       decfsz COUNTL, f
0363   2???           00774       goto   HalfS_0
                      00775 
0364   2???           00776       goto $+1
0365   0000           00777       nop
0366   0000           00778       nop
0367   0008           00779                 return
                      00780 
3F72                  00781     END
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           000002DF
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000027
COUNTL                            00000029
COUNTM                            00000028
CREN                              00000004
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

CSRC                              00000007
Clear_Display                     00000329
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Defective                         00000085
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
Emergency_Msg                     0000009E
End_Msg                           0000001C
Export_Msg                        000000AE
F                                 00000001
FERR                              00000002
FSR                               00000004
Flick_fail                        00000064
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000358
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           0000030B
LCD_DELAY                         
LED_fail                          00000058
LLD_LOOP                          00000351
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000092
Not_present                       00000041
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000050
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           00000037
Standby_Msg                       00000001
Start_Msg                         0000000A
Switch_Lines                      0000032C
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000022
Time_Msg                          00000026
Total_Msg                         00000074
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           0000033E
WR_INS                            0000032F
Z                                 00000002
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_.org_0_00D7                      000000D7
_.org_0_00DE                      000000DE
_.org_0_0136                      00000136
_.org_0_013B                      0000013B
_.org_0_0354                      00000354
_.org_0_035F                      0000035F
_.org_0_0361                      00000361
_.org_0_0364                      00000364
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          000002FC
add3ones                          00000302
add3tens                          000002FF
big_number                        000002D8
carryones                         00000305
carrytens                         00000308
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

check_1                           0000013E
check_2                           00000149
check_3                           00000155
check_4                           00000161
check_5                           0000016D
check_6                           00000179
check_7                           00000185
check_8                           00000191
check_9                           0000019D
check_LED                         000001F5
check_defective                   000001AF
check_export                      000001BB
check_flick                       00000204
check_none                        000001D8
check_pass                        000001E6
check_standby                     000001C6
check_start                       000001C1
check_summary                     000001A9
check_time                        000001B5
com                               00000023
count                             0000002E
dat                               00000024
default_key                       000001D6
default_status                    00000213
defective                         00000233
display_status                    000001D7
eight                             00000285
end_defective                     00000293
export                            000002BF
five                              0000026D
four                              00000265
huns                              0000002B
information                       0000013D
init                              000000BF
keytemp                           00000020
lcdLongDelay                      0000034F
lcd_d1                            00000025
lcd_d2                            00000026
movff                             
movlf                             
nine                              0000028D
no_huns                           000002A9
no_tens                           000002B0
num_def                           00000039
num_tot                           0000003A
one                               0000024D
ones                              0000002D
op_time                           0000002F
op_time_save                      0000002A
poll                              00000135
seven                             0000027D
six                               00000275
spacebar                          
MPASM 5.54                     INTERFACE.ASM   2-3-2014  20:13:59         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

start                             000000E0
status1                           00000030
status2                           00000031
status3                           00000032
status4                           00000033
status5                           00000034
status6                           00000035
status7                           00000036
status8                           00000037
status9                           00000038
statustemp                        00000021
summary                           00000214
tens                              0000002C
three                             0000025D
time                              00000294
two                               00000255
waiting                           000000D6
writenum                          
writenum_reg                      

Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :     4 reported,     0 suppressed

