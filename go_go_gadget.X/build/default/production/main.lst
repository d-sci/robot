MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013     #define threshold1  D'7'
                      00014     #define threshold2  D'69'
                      00015     #define IRDATA     PORTE, 0
                      00016     #define PHOTODATA  PORTE, 1
                      00017 
                      00018 
                      00019 ;***************************************
                      00020 ; VARIABLES
                      00021 ;***************************************
                      00022 
                      00023 ; Also see i2c_commmon.asm -> has stuff at 0x71-0x78 on for RTC!
                      00024 
                      00025     cblock      0x20
                      00026     ; Important information (will be displayed)
  00000020            00027         state1     ;where   0 = none      1 = pass
  00000021            00028         state2     ;        2 = led fail  3 = flicker fail
  00000022            00029         state3
  00000023            00030         state4
  00000024            00031         state5
  00000025            00032         state6
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000026            00033         state7
  00000027            00034         state8
  00000028            00035         state9
  00000029            00036         start_year10    ;starting time (for log)
  0000002A            00037         start_year1     ; note: these are all ALREADY ASCII!
  0000002B            00038         start_month10
  0000002C            00039         start_month1
  0000002D            00040         start_date10
  0000002E            00041         start_date1
  0000002F            00042         start_hour10
  00000030            00043         start_hour1
  00000031            00044         start_min10
  00000032            00045         start_min1
  00000033            00046         op_time     ;BCD in seconds
  00000034            00047         num_tot     ;BCD
  00000035            00048         num_LF      ;BCD
  00000036            00049         num_FF      ;BCD
                      00050 ; For general program / interface: temps, counters, etc.
  00000037            00051         keytemp         ; for data display mode
  00000038            00052         statetemp
  00000039            00053                 Table_Counter   ; for LCD stuff
  0000003A            00054                 com
  0000003B            00055                 dat
  0000003C            00056         delH          ;for delay 0.5s routine
  0000003D            00057         delM
  0000003E            00058         delL
  0000003F            00059         op_time_save    ;for operation time
  00000040            00060         huns
  00000041            00061         tens
  00000042            00062         ones
  00000043            00063         bignumcount
  00000044            00064         count38         ;for isr
                      00065 ; For machine program: temps, counters, etc.
  00000045            00066         candle_index
  00000046            00067         photocount      ;for testing candle
  00000047            00068         photoval
  00000048            00069         motor_count     ;for rotate
                      00070     endc
                      00071 
                      00072     cblock  0x79        ;stuff that needs to be in all registers
  00000079            00073         w_isr
  0000007A            00074         status_isr
                      00075         endc
                      00076 
                      00077 
                      00078 ;***************************************
                      00079 ; MACROS
                      00080 ;***************************************
                      00081 
                      00082 ; Display a msg on LCD
                      00083 Display macro   Message
                      00084                 local   loop_disp
                      00085                 local   end_disp
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086                 clrf    Table_Counter
                      00087                 clrw
                      00088 loop_disp
                      00089         movf    Table_Counter,W
                      00090                 call    Message
                      00091                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00092                 btfsc   STATUS,Z
                      00093                 goto    end_disp
                      00094                 call    WR_DATA
                      00095                 incf    Table_Counter,F
                      00096                 goto    loop_disp
                      00097 end_disp
                      00098                 endm
                      00099 
                      00100 
                      00101 ;Shortcuts for moving literals / registers
                      00102 movlf   macro   l, f
                      00103         movlw   l
                      00104         movwf   f
                      00105         endm
                      00106 
                      00107 movff   macro   source, dest
                      00108         movf    source, W
                      00109         movwf   dest
                      00110         endm
                      00111 
                      00112 ; Write to LCD (all in bank0 please)
                      00113 writeBCD    macro   reg         ; from a register containing BCD
                      00114             movf    reg, W
                      00115             addlw   B'00110000'
                      00116             call WR_DATA
                      00117             endm
                      00118 
                      00119 writechar   macro   asc             ;ASCII code literal (or in "")
                      00120             movlw   asc
                      00121             call    WR_DATA
                      00122             endm
                      00123 
                      00124 writeASC        macro   reg         ;from a register containing ASCII
                      00125             movf    reg, W
                      00126             call WR_DATA
                      00127             endm
                      00128 
                      00129 spacebar    macro
                      00130             movlw   B'00010100'
                      00131             call    WR_INS
                      00132             endm
                      00133 
                      00134 ;Print to PC (hyperterminal)
                      00135 printchar   macro   char            ;direct ASCII code literal (or in "")
                      00136             movlw   char
                      00137             call    writetoPC
                      00138             endm
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139 
                      00140 printASC    macro   reg            ;ASCII code inside a register
                      00141             banksel reg
                      00142             movf    reg,W
                      00143             call    writetoPC
                      00144             endm
                      00145 
                      00146 printBCD    macro   BCD            ;BCD inside a register
                      00147             banksel BCD
                      00148             movf    BCD, W
                      00149             addlw   0x30
                      00150             call    writetoPC
                      00151             endm
                      00152 
                      00153 newline     macro
                      00154             printchar   0xA ;changes line
                      00155             printchar   0xD ;goes back to left
                      00156             endm
                      00157 ;***************************************
                      00158 ; VECTORS
                      00159 ;***************************************
                      00160 
                      00161     ORG       0x000
0000   2???           00162          goto      init
                      00163     ORG       0x004
0004   2???           00164         goto    isr
                      00165 
                      00166 
                      00167 ;***************************************
                      00168 ; TABLES (MESSAGES)
                      00169 ;***************************************
0005                  00170 Standby_Msg
0005   0782           00171                 addwf   PCL,F
0006   3453 3454 3441 00172                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00173 Start_Msg
000E   0782           00174         addwf   PCL,F
000F   3449 346E 3473 00175         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00176 End_Msg
0020   0782           00177         addwf   PCL,F
0021   3443 346F 346D 00178         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00179 Time_Msg
002A   0782           00180                 addwf   PCL,F
002B   344F 3470 3465 00181                 dt              "Operation time:",0
       3472 3461 3474 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
003B                  00182 Seconds
003B   0782           00183         addwf   PCL,F
003C   3420 3473 3465 00184         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00185 Not_present
0045   0782           00186         addwf   PCL,F
0046   343A 3420 344E 00187         dt      ": Not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00188 Pass
0054   0782           00189                 addwf   PCL,F
0055   343A 3420 3450 00190                 dt              ": Pass",0
       3461 3473 3473 
       3400 
005C                  00191 LED_fail
005C   0782           00192                 addwf   PCL,F
005D   343A 3420 344C 00193                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0068                  00194 Flick_fail
0068   0782           00195                 addwf   PCL,F
0069   343A 3420 3446 00196                 dt              ": Flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00197 Total_Msg
0078   0782           00198         addwf   PCL,F
0079   3454 346F 3474 00199         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00200 LF
0089   0782           00201         addwf   PCL,F
008A   344C 3446 343A 00202         dt      "LF: ",0
       3420 3400 
008F                  00203 FF
008F   0782           00204         addwf   PCL,F
0090   3446 3446 343A 00205         dt      "FF: ",0
       3420 3400 
0095                  00206 None
0095   0782           00207         addwf   PCL,F
0096   343C 346E 346F 00208         dt      "<none>", 0
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       346E 3465 343E 
       3400 
009D                  00209 Logs_Msg1
009D   0782           00210         addwf   PCL,F
009E   3431 342D 3439 00211         dt      "1-9 to see logs",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3473 
       3400 
00AE                  00212 Logs_Msg2
00AE   0782           00213         addwf   PCL,F
00AF   3453 3454 3441 00214         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
       3400 
00BF                  00215 Logs_Msg3
00BF   0782           00216         addwf   PCL,F
00C0   3445 3478 3470 00217         dt      "Export?",0
       346F 3472 3474 
       343F 3400 
00C8                  00218 Logs_Msg4
00C8   0782           00219         addwf   PCL,F
00C9   344C 344F 3447 00220         dt      "LOGS to return",0
       3453 3420 3474 
       346F 3420 3472 
       3465 3474 3475 
       3472 346E 3400 
00D8                  00221 Op_at
00D8   0782           00222         addwf   PCL,F
00D9   344F 3470 3465 00223         dt      "Operation at:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3461 3474 
       343A 3400 
                      00224 
                      00225 ;***************************************
                      00226 ; MAIN PROGRAM
                      00227 ;***************************************
                      00228 
00E7                  00229 init
                      00230         movlf     b'00100000', INTCON   ;no interrupts yet, but Timer0 ready one GIE enabled
00E7   3020               M         movlw   b'00100000'
00E8   008B               M         movwf   INTCON
                      00231 
00E9   1683 1303      00232         banksel   TRISA                 ; bank 1
                      00233         movlf     b'11000111', OPTION_REG ; 1:256 prescaler for timer
00EB   30C7               M         movlw   b'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   0081               M         movwf   OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00ED   0185           00234         clrf      TRISA                 ; PortA[3:0] used for motor
                      00235         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs
00EE   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EF   0086               M         movwf   TRISB
                      00236         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC; [7:6] is RS-232
00F0   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F1   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F2   0188           00237         clrf      TRISD                 ; PortD[2:7] is LCD output
                      00238         movlf     b'011', TRISE         ; PortE is ir and photodata
00F3   3003               M         movlw   b'011'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F4   0089               M         movwf   TRISE
                      00239         movlf   0x07, ADCON1            ; digital input
00F5   3007               M         movlw   0x07
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F6   009F               M         movwf   ADCON1
                      00240 
00F7   1283           00241         bcf       STATUS,RP0        ; select bank 0
00F8   0185           00242         clrf      PORTA
00F9   0186           00243         clrf      PORTB
00FA   0187           00244         clrf      PORTC
00FB   0188           00245         clrf      PORTD
00FC   0189           00246         clrf      PORTE
                      00247 
00FD   2???           00248         call      i2c_common_setup  ;Set up I2C for communication. End in bank 1
00FE   2???           00249         call      InitLCD           ;Initialize the LCD. End in bank0
00FF   2???           00250         call      InitUSART         ;Set up USART for RS232. End in bank1
                      00251 
0100   1283           00252         bcf       STATUS,RP0        ;Back to bank0
                      00253 
                      00254         Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0101   01B9               M                 clrf    Table_Counter
0102   0103               M                 clrw
0103                      M loop_disp
0103   0839               M         movf    Table_Counter,W
0104   2???               M                 call    Standby_Msg
0105   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0106   1903               M                 btfsc   STATUS,Z
0107   2???               M                 goto    end_disp
0108   2???               M                 call    WR_DATA
0109   0AB9               M                 incf    Table_Counter,F
010A   2???               M                 goto    loop_disp
010B                      M end_disp
010B   2???           00255         call    Switch_Lines
                      00256 
                      00257  ;--------------------------------------------------
                      00258  ;      STANDBY MODE
                      00259 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010C                  00260 waiting
                      00261         ; Display date and time.
                      00262         ; Also save starting time for log (will stop updating once we start)
                      00263         writechar "2"       ;First line shows 20**/**/**
010C   3032               M             movlw   "2"
010D   2???               M             call    WR_DATA
                      00264         writechar "0"
010E   3030               M             movlw   "0"
010F   2???               M             call    WR_DATA
                      00265         rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0110   3006               M         movlw   0x06
0111   1283 1303          M         banksel 0x73
0113   00F3               M         movwf   0x73
0114   2???               M         call    read_rtc
0115   1283 1303          M         banksel 0x75
0117   0875               M         movf    0x75,w
0118   2???               M         call    rtc_convert   
0119   0877           00266                 movf    0x77,W
011A   00A9           00267         movwf    start_year10    ;Save starting year dig10
011B   2???           00268                 call    WR_DATA
011C   0878           00269                 movf    0x78,W
011D   00AA           00270         movwf    start_year1    ;Save starting year dig1
011E   2???           00271                 call    WR_DATA
                      00272                 writechar "/"
011F   302F               M             movlw   "/"
0120   2???               M             call    WR_DATA
                      00273                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0121   3005               M         movlw   0x05
0122   1283 1303          M         banksel 0x73
0124   00F3               M         movwf   0x73
0125   2???               M         call    read_rtc
0126   1283 1303          M         banksel 0x75
0128   0875               M         movf    0x75,w
0129   2???               M         call    rtc_convert   
012A   0877           00274                 movf    0x77,W
012B   00AB           00275         movwf    start_month10    ;Save starting month dig10
012C   2???           00276                 call    WR_DATA
012D   0878           00277                 movf    0x78,W
012E   00AC           00278         movwf    start_month1    ;Save starting month dig1
012F   2???           00279                 call    WR_DATA
                      00280                 writechar       "/"
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0130   302F               M             movlw   "/"
0131   2???               M             call    WR_DATA
                      00281                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0132   3004               M         movlw   0x04
0133   1283 1303          M         banksel 0x73
0135   00F3               M         movwf   0x73
0136   2???               M         call    read_rtc
0137   1283 1303          M         banksel 0x75
0139   0875               M         movf    0x75,w
013A   2???               M         call    rtc_convert   
013B   0877           00282                 movf    0x77,W
013C   00AD           00283         movwf    start_date10    ;Save starting date dig10
013D   2???           00284                 call    WR_DATA
013E   0878           00285                 movf    0x78,W
013F   00AE           00286         movwf    start_date1    ;Save starting date dig1
0140   2???           00287                 call    WR_DATA
                      00288                 spacebar
0141   3014               M             movlw   B'00010100'
0142   2???               M             call    WR_INS
                      00289                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0143   3002               M         movlw   0x02
0144   1283 1303          M         banksel 0x73
0146   00F3               M         movwf   0x73
0147   2???               M         call    read_rtc
0148   1283 1303          M         banksel 0x75
014A   0875               M         movf    0x75,w
014B   2???               M         call    rtc_convert   
014C   0877           00290                 movf    0x77,W
014D   00AF           00291         movwf    start_hour10    ;Save starting hour dig10
014E   2???           00292                 call    WR_DATA
014F   0878           00293                 movf    0x78,W
0150   00B0           00294         movwf    start_hour1    ;Save starting hour dig1
0151   2???           00295                 call    WR_DATA
                      00296                 writechar ":"
0152   303A               M             movlw   ":"
0153   2???               M             call    WR_DATA
                      00297                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0154   3001               M         movlw   0x01
0155   1283 1303          M         banksel 0x73
0157   00F3               M         movwf   0x73
0158   2???               M         call    read_rtc
0159   1283 1303          M         banksel 0x75
015B   0875               M         movf    0x75,w
015C   2???               M         call    rtc_convert   
015D   0877           00298                 movf    0x77,W
015E   00B1           00299         movwf    start_min10    ;Save starting min dig10
015F   2???           00300                 call    WR_DATA
0160   0878           00301                 movf    0x78,W
0161   00B2           00302         movwf    start_min1    ;Save starting min dig1
0162   2???           00303                 call    WR_DATA
                      00304 
                      00305         ; Move cursor back to start of second line
                      00306         ; We will update displayed time but not the word "STANDBY"
0163   30C0           00307         movlw   B'11000000'
0164   2???           00308         call    WR_INS
                      00309 
                      00310         ;Poll to start (will have to hold key for ~0.5sec)
0165   1C86           00311          btfss          PORTB,1     ;Wait until data is available from the keypad
0166   2???           00312          goto           waiting
                      00313 
0167   0E06           00314          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0168   390F           00315          andlw          0x0F
0169   00B7           00316          movwf      keytemp
016A   3A0C           00317          xorlw      0xC         ;Will be all zeros if its "START"
016B   1903           00318          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
016C   2???           00319          goto       start
                      00320 
016D   0837           00321          movf       keytemp,W     ;Go to log interface
016E   3A0E           00322          xorlw      0xE
016F   1903           00323          btfsc      STATUS,Z
0170   2???           00324          goto       logs
                      00325 
0171   1886           00326          btfsc          PORTB,1     ;Wait until key is released
0172   2???           00327          goto           $-1
0173   2???           00328          goto       waiting
                      00329 
                      00330 ;-----------------------------------------------------------
                      00331 ;       ACTUAL OPERATION
                      00332 
0174                  00333 start
                      00334         ;clear numbers
0174   01B6           00335         clrf    num_FF
0175   01B4           00336         clrf    num_tot
0176   01B5           00337         clrf    num_LF
                      00338 
                      00339         ;Start the timer
                      00340         movlf       D'38', count38
0177   3026               M         movlw   D'38'
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0178   00C4               M         movwf   count38
0179   01B3           00341         clrf        op_time
017A   0181           00342         clrf        TMR0
017B   178B           00343         bsf         INTCON, GIE     ;enable interrupts
                      00344 
                      00345         ;Display starting message
017C   2???           00346         call        Clear_Display
                      00347         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
017D   01B9               M                 clrf    Table_Counter
017E   0103               M                 clrw
017F                      M loop_disp
017F   0839               M         movf    Table_Counter,W
0180   2???               M                 call    Start_Msg
0181   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0182   1903               M                 btfsc   STATUS,Z
0183   2???               M                 goto    end_disp
0184   2???               M                 call    WR_DATA
0185   0AB9               M                 incf    Table_Counter,F
0186   2???               M                 goto    loop_disp
0187                      M end_disp
                      00348 
                      00349 
                      00350 ;****FAKE CODE for easy testing **************************
                      00351 ;        ; Just delaying
                      00352 ;        call        HalfS
                      00353 ;        call        HalfS
                      00354 ;
                      00355 ;       ; Putting values in manually.
                      00356 ;        movlf     B'01', state1     ;pass
                      00357 ;        movlf     B'01', state2     ;pass
                      00358 ;        movlf     B'10', state3     ;LED fail
                      00359 ;        movlf     B'01', state4     ;pass
                      00360 ;        movlf     B'01', state5     ;pass
                      00361 ;        movlf     B'01', state6     ;pass
                      00362 ;        movlf     B'01', state7     ;pass
                      00363 ;        movlf     B'11', state8     ;flicker fail
                      00364 ;        movlf     B'01', state9     ;pass
                      00365 ;        movlf     D'1', num_LF
                      00366 ;        movlf     D'1', num_FF
                      00367 ;        movlf     D'9', num_tot
                      00368 ;*******************************************************
                      00369 
                      00370 ; choose fake or real!
                      00371 
                      00372 ;******REAL CODE ******************************************
0187   01C5           00373     clrf    candle_index     ; n = 0
0188   1383           00374     bcf STATUS, IRP
                      00375     movlf   0x1F, FSR        ;pointing at right before state1
0189   301F               M         movlw   0x1F
018A   0084               M         movwf   FSR
                      00376 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

018B                  00377 rotate
018B   3009           00378    movlw   d'9'               ; done inspecting once n=9
018C   0245           00379    subwf   candle_index,W     ; candle_index (n) is # you've already tested before rotating
018D   1903           00380    btfsc   STATUS,Z
018E   2???           00381    goto    end_operation
018F   2???           00382    call    ROTATEMOTOR
0190   0AC5           00383    incf    candle_index, F
0191   0A84           00384    incf    FSR, F
                      00385 
0192                  00386 detect_candle
0192   1809           00387    btfsc   IRDATA
0193   2???           00388    goto    test_candle     ;yes candle, go test it
                      00389    movlf   D'0', INDF      ;no candle, state = not present
0194   3000               M         movlw   D'0'
0195   0080               M         movwf   INDF
0196   2???           00390    goto    rotate                 ;and go try next
                      00391 
0197                  00392 test_candle
0197   0AB4           00393    incf    num_tot, F                   ; keeping track of total number of candles
0198   01C6           00394    clrf    photocount
0199   2???           00395    call    HalfS                ; delay 2 sec or whatever
019A   2???           00396    call    HalfS
019B   2???           00397    call    HalfS
019C   2???           00398    call    HalfS
                      00399    movff   photocount, photoval        ;to ensure it wont change again
019D   0846               M         movf    photocount, W
019E   00C7               M         movwf   photoval
019F                  00400 check_threshold1
019F   3007           00401     movlw    threshold1
01A0   0247           00402     subwf   photoval, W
01A1   1803           00403     btfsc   STATUS, C       ;if  photoval < threshold 1, C = 0
01A2   2???           00404     goto check_threshold2
                      00405     movlf   D'2', INDF      ; < threshold 1 means led fail
01A3   3002               M         movlw   D'2'
01A4   0080               M         movwf   INDF
01A5   0AB5           00406         incf    num_LF, F
01A6   2???           00407     goto    rotate
01A7                  00408 check_threshold2
01A7   3045           00409     movlw    threshold2
01A8   0247           00410     subwf   photoval, W
01A9   1803           00411     btfsc   STATUS, C       ;if  photoval < threshold 2, C = 0
01AA   2???           00412     goto aboveboth
                      00413     movlf   D'1', INDF      ; < threshold 2 means pass
01AB   3001               M         movlw   D'1'
01AC   0080               M         movwf   INDF
01AD   2???           00414     goto    rotate
01AE                  00415 aboveboth
                      00416     movlf   D'3', INDF       ;else flicker fail
01AE   3003               M         movlw   D'3'
01AF   0080               M         movwf   INDF
01B0   0AB6           00417     incf    num_FF, F
01B1   2???           00418     goto    rotate
                      00419  ;****************************************************
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00420 
01B2                  00421 end_operation
                      00422 
01B2   2???           00423         call    ROTATEMOTOR ; rotate once more  back to starting position
01B3   138B           00424         bcf         INTCON, GIE  ;disable interrupts to stop timer
                      00425 
                      00426         ;Display "complete"
01B4   2???           00427         call       Clear_Display
                      00428         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01B5   01B9               M                 clrf    Table_Counter
01B6   0103               M                 clrw
01B7                      M loop_disp
01B7   0839               M         movf    Table_Counter,W
01B8   2???               M                 call    End_Msg
01B9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01BA   1903               M                 btfsc   STATUS,Z
01BB   2???               M                 goto    end_disp
01BC   2???               M                 call    WR_DATA
01BD   0AB9               M                 incf    Table_Counter,F
01BE   2???               M                 goto    loop_disp
01BF                      M end_disp
                      00429 
                      00430         ; Shift logs 1-8 -> 2-9
                      00431         ; Then store current run as log 1
01BF                  00432 shiftlogs
01BF   1283 1703      00433         banksel     EEADR               ; bank 2
                      00434         movlf       D'111', EEADR        ; start shifting from 111->125
01C1   306F               M         movlw   D'111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01C2   008D               M         movwf   EEADR
                      00435 
01C3                  00436 shiftlogs_0
01C3   1683 1703      00437         banksel     EECON1              ;bank 3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01C5   138C           00438         bcf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01C6   140C           00439         bsf         EECON1, RD          ;read (EEADR) to EEDATA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01C7   188C           00440         btfsc       EECON1, WR          ; ensure a write is not in progress (??)
01C8   2???           00441         goto        $-1
01C9   1283 1703      00442         banksel     EEADR               ;bank 2
01CB   300E           00443         movlw       D'14'               ;add 14 to EEADR to shift 14 places
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01CC   078D           00444         addwf       EEADR, F
01CD   1683 1703      00445         banksel     EECON1              ;bank 3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01CF   138C           00446         bcf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D0   150C           00447         bsf         EECON1, WREN
01D1   3055           00448         movlw       0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D2   008D           00449         movwf       EECON2
01D3   30AA           00450         movlw       0xAA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D4   008D           00451         movwf       EECON2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D5   148C           00452         bsf         EECON1, WR          ; write EEDATA to (EEADR+14)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D6   110C           00453         bcf         EECON1, WREN
01D7   1283 1703      00454         banksel     EEADR               ;bank 2
01D9   300E           00455         movlw       D'14'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01DA   020D           00456         subwf       EEADR, W
01DB   1903           00457         btfsc       STATUS, Z
01DC   2???           00458         goto        write_log1          ; if EEADR = 14 we're done (just shifted 0->14)
                      00459 
01DD   1283 1303      00460         banksel op_time             ; for some reason I need to delay here
01DF   2???           00461         call   delay5ms             ; or else I get an infinite loop
01E0   1283 1703      00462         banksel EEADR
                      00463 
01E2   300F           00464         movlw       D'15'               ;else EEADR -= 15 to shift next byte
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01E3   028D           00465         subwf       EEADR, F
01E4   2???           00466         goto        shiftlogs_0
                      00467 
01E5                  00468 write_log1
01E5   1283 1703      00469         banksel     EEADR
01E7   1383           00470         bcf         STATUS, IRP
                      00471         movlf       0x37, FSR           ;points to one after last important data
01E8   3037               M         movlw   0x37
01E9   0084               M         movwf   FSR
                      00472         movlf       D'14', EEADR        ;points to one after last place to write to
01EA   300E               M         movlw   D'14'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01EB   008D               M         movwf   EEADR
01EC                  00473 write_log1_0
01EC   1683 1703      00474         banksel     EECON1              ;bank3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01EE   188C           00475         btfsc       EECON1, WR          ;ensure a write is not in progress (??)
01EF   2???           00476         goto        $-1
01F0   1283 1703      00477         banksel     EEADR               ;bank 2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F2   038D           00478         decf        EEADR, F            ;writing backwords
01F3   0384           00479         decf        FSR, F
                      00480         movff       INDF, EEDATA
01F4   0800               M         movf    INDF,   W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F5   008C               M         movwf   EEDATA
01F6   1683 1703      00481         banksel     EECON1              ;bank 3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F8   138C           00482         bcf         EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F9   150C           00483         bsf         EECON1, WREN
01FA   3055           00484         movlw       0x55
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01FB   008D           00485         movwf       EECON2
01FC   30AA           00486         movlw       0xAA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01FD   008D           00487         movwf       EECON2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01FE   148C           00488         bsf         EECON1, WR          ; write (INDF) to EEADR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01FF   110C           00489         bcf         EECON1, WREN
0200   1283 1703      00490         banksel     EEADR               ;bank 2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0202   088D           00491         movf        EEADR, F
0203   1D03           00492         btfss       STATUS, Z           ;if EEADR = 0 we're done
0204   2???           00493         goto        write_log1_0
0205   1283           00494         bcf         STATUS, RP0         ;so go back to bank 0 and continue
0206   1303           00495         bcf         STATUS, RP1
                      00496 
                      00497         ; Display info screens
0207   2???           00498         call       time             ; "Operation time: X sec"
0208   2???           00499         call       HalfS
0209   2???           00500         call       HalfS
020A   2???           00501         call       summary          ; "Total candles: X. Defective: Y"
020B   2???           00502         call       HalfS
020C   2???           00503         call       HalfS
020D   2???           00504         call       defective        ; "FF: a b c. LF: d e f"
                      00505 ;-----------------------------------------------------------------------
                      00506 ; Data display interface
                      00507 
020E   1C86           00508 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
020F   2???           00509          goto           $-1
                      00510 
0210   0E06           00511          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0211   390F           00512          andlw          0x0F
0212   2???           00513          call       information ;Do the right thing
                      00514 
0213   1886           00515          btfsc          PORTB,1     ;Wait until key is released
0214   2???           00516          goto           $-1
0215   2???           00517          goto       poll
                      00518 
                      00519 
                      00520 ;-------------------------------------------------------------------------
                      00521 ; LOGS INTERFACE
                      00522 ; Shows last runs of last 9 logs
                      00523 ; Access from STANDBY and return to STANDBY
                      00524 
0216                  00525 logs
0216   2???           00526     call    Clear_Display
                      00527     Display Logs_Msg1
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0217   01B9               M                 clrf    Table_Counter
0218   0103               M                 clrw
0219                      M loop_disp
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0219   0839               M         movf    Table_Counter,W
021A   2???               M                 call    Logs_Msg1
021B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
021C   1903               M                 btfsc   STATUS,Z
021D   2???               M                 goto    end_disp
021E   2???               M                 call    WR_DATA
021F   0AB9               M                 incf    Table_Counter,F
0220   2???               M                 goto    loop_disp
0221                      M end_disp
0221   2???           00528     call    Switch_Lines
                      00529     Display Logs_Msg2
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0222   01B9               M                 clrf    Table_Counter
0223   0103               M                 clrw
0224                      M loop_disp
0224   0839               M         movf    Table_Counter,W
0225   2???               M                 call    Logs_Msg2
0226   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0227   1903               M                 btfsc   STATUS,Z
0228   2???               M                 goto    end_disp
0229   2???               M                 call    WR_DATA
022A   0AB9               M                 incf    Table_Counter,F
022B   2???               M                 goto    loop_disp
022C                      M end_disp
                      00530 
022C                  00531 polling
022C   1C86           00532     btfss               PORTB,1     ;Wait until data is available from the keypad
022D   2???           00533     goto                $-1
                      00534 
022E   0E06           00535     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
022F   390F           00536     andlw               0x0F
0230   00B7           00537     movwf       keytemp     ; Save which key was pressed
                      00538 
0231                  00539 check_log1
0231   3A00           00540     xorlw   0x0         ;will be all zeros if its 1
0232   1D03           00541     btfss   STATUS,Z    ;and Z will be high, so skip
0233   2???           00542     goto    check_log2
0234   1283 1703      00543     banksel EEADR
                      00544     movlf   d'0', EEADR
0236   3000               M         movlw   d'0'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0237   008D               M         movwf   EEADR
0238   2???           00545     goto    display_log
                      00546 
0239                  00547 check_log2
0239   0837           00548     movf    keytemp, W
023A   3A01           00549     xorlw   0x1
023B   1D03           00550     btfss   STATUS,Z
023C   2???           00551     goto    check_log3
023D   1283 1703      00552     banksel EEADR
                      00553     movlf   d'14', EEADR
023F   300E               M         movlw   d'14'
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0240   008D               M         movwf   EEADR
0241   2???           00554     goto    display_log
                      00555 
0242                  00556 check_log3
0242   0837           00557     movf    keytemp, W
0243   3A02           00558     xorlw   0x2
0244   1D03           00559     btfss   STATUS,Z
0245   2???           00560     goto    check_log4
0246   1283 1703      00561     banksel EEADR
                      00562     movlf   d'28', EEADR
0248   301C               M         movlw   d'28'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0249   008D               M         movwf   EEADR
024A   2???           00563     goto    display_log
                      00564 
024B                  00565 check_log4
024B   0837           00566     movf    keytemp, W
024C   3A04           00567     xorlw   0x4
024D   1D03           00568     btfss   STATUS,Z
024E   2???           00569     goto    check_log5
024F   1283 1703      00570     banksel EEADR
                      00571     movlf   d'42', EEADR
0251   302A               M         movlw   d'42'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0252   008D               M         movwf   EEADR
0253   2???           00572     goto    display_log
                      00573 
0254                  00574 check_log5
0254   0837           00575     movf    keytemp, W
0255   3A05           00576     xorlw   0x5
0256   1D03           00577     btfss   STATUS,Z
0257   2???           00578     goto    check_log6
0258   1283 1703      00579     banksel EEADR
                      00580     movlf   d'56', EEADR
025A   3038               M         movlw   d'56'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
025B   008D               M         movwf   EEADR
025C   2???           00581     goto    display_log
                      00582 
025D                  00583 check_log6
025D   0837           00584     movf    keytemp, W
025E   3A06           00585     xorlw   0x6
025F   1D03           00586     btfss   STATUS,Z
0260   2???           00587     goto    check_log7
0261   1283 1703      00588     banksel EEADR
                      00589     movlf   d'70', EEADR
0263   3046               M         movlw   d'70'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0264   008D               M         movwf   EEADR
0265   2???           00590     goto    display_log
                      00591 
0266                  00592 check_log7
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0266   0837           00593     movf    keytemp, W
0267   3A08           00594     xorlw   0x8
0268   1D03           00595     btfss   STATUS,Z
0269   2???           00596     goto    check_log8
026A   1283 1703      00597     banksel EEADR
                      00598     movlf   d'84', EEADR
026C   3054               M         movlw   d'84'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
026D   008D               M         movwf   EEADR
026E   2???           00599     goto    display_log
                      00600 
026F                  00601 check_log8
026F   0837           00602     movf    keytemp, W
0270   3A09           00603     xorlw   0x9
0271   1D03           00604     btfss   STATUS,Z
0272   2???           00605     goto    check_log9
0273   1283 1703      00606     banksel EEADR
                      00607     movlf   d'98', EEADR
0275   3062               M         movlw   d'98'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0276   008D               M         movwf   EEADR
0277   2???           00608     goto    display_log
                      00609 
0278                  00610 check_log9
0278   0837           00611     movf    keytemp, W
0279   3A0A           00612     xorlw   0xA
027A   1D03           00613     btfss   STATUS,Z
027B   2???           00614     goto    check_done
027C   1283 1703      00615     banksel EEADR
                      00616     movlf   d'112', EEADR
027E   3070               M         movlw   d'112'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
027F   008D               M         movwf   EEADR
0280   2???           00617     goto    display_log
                      00618 
0281                  00619 check_done
0281   0837           00620     movf    keytemp, W
0282   3A0D           00621     xorlw   0xD
0283   1D03           00622     btfss   STATUS,Z
0284   2???           00623     goto    badkey
0285   2???           00624     call    Clear_Display
                      00625     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0286   01B9               M                 clrf    Table_Counter
0287   0103               M                 clrw
0288                      M loop_disp
0288   0839               M         movf    Table_Counter,W
0289   2???               M                 call    Standby_Msg
028A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
028B   1903               M                 btfsc   STATUS,Z
028C   2???               M                 goto    end_disp
028D   2???               M                 call    WR_DATA
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

028E   0AB9               M                 incf    Table_Counter,F
028F   2???               M                 goto    loop_disp
0290                      M end_disp
0290   2???           00626     call    Switch_Lines
0291   2???           00627     goto    waiting
                      00628 
0292                  00629 badkey
0292   1886           00630     btfsc               PORTB,1     ;Wait until key is released
0293   2???           00631     goto                $-1
0294   2???           00632     goto        polling
                      00633 
                      00634 
0295                  00635 display_log                 ;start in bank2
                      00636     ; move EEPROM data back to "current" data
0295   1383           00637     bcf STATUS, IRP
                      00638     movlf   0x29, FSR
0296   3029               M         movlw   0x29
0297   0084               M         movwf   FSR
0298                  00639 read_EEPROM
0298   1683 1703      00640     banksel EECON1          ;bank3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
029A   138C           00641     bcf EECON1, EEPGD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
029B   140C           00642     bsf EECON1, RD          ; read EEPROM
029C   1283 1703      00643     banksel EEDATA          ;bank 2
                      00644     movff   EEDATA, INDF    ; move EEDATA to "current" data
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
029E   080C               M         movf    EEDATA, W
029F   0080               M         movwf   INDF
02A0   0A84           00645     incf    FSR, F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
02A1   0A8D           00646     incf    EEADR, F
02A2   3037           00647     movlw   0x37            ;done if FSR = 0x37
02A3   0204           00648     subwf   FSR, W
02A4   1D03           00649     btfss   STATUS, Z
02A5   2???           00650     goto    read_EEPROM
                      00651 
                      00652     ;display that shit
02A6   1283 1303      00653     banksel Table_Counter   ; bank0
02A8   2???           00654     call    Clear_Display
                      00655     ;if first data is 0xFF (no log) just display "none"
02A9   30FF           00656     movlw   0xFF
02AA   0229           00657     subwf   start_year10, W
02AB   1D03           00658     btfss   STATUS, Z
02AC   2???           00659     goto yes_log
02AD                  00660 no_log
                      00661     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02AD   01B9               M                 clrf    Table_Counter
02AE   0103               M                 clrw
02AF                      M loop_disp
02AF   0839               M         movf    Table_Counter,W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B0   2???               M                 call    None
02B1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B2   1903               M                 btfsc   STATUS,Z
02B3   2???               M                 goto    end_disp
02B4   2???               M                 call    WR_DATA
02B5   0AB9               M                 incf    Table_Counter,F
02B6   2???               M                 goto    loop_disp
02B7                      M end_disp
02B7   2???           00662     call    HalfS
02B8   2???           00663     goto    logs
                      00664     ;else display the log
02B9                  00665 yes_log
                      00666     Display Op_at
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02B9   01B9               M                 clrf    Table_Counter
02BA   0103               M                 clrw
02BB                      M loop_disp
02BB   0839               M         movf    Table_Counter,W
02BC   2???               M                 call    Op_at
02BD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02BE   1903               M                 btfsc   STATUS,Z
02BF   2???               M                 goto    end_disp
02C0   2???               M                 call    WR_DATA
02C1   0AB9               M                 incf    Table_Counter,F
02C2   2???               M                 goto    loop_disp
02C3                      M end_disp
02C3   2???           00667     call    Switch_Lines
                      00668     writechar    "2"
02C4   3032               M             movlw   "2"
02C5   2???               M             call    WR_DATA
                      00669     writechar    "0"
02C6   3030               M             movlw   "0"
02C7   2???               M             call    WR_DATA
                      00670     writeASC   start_year10
02C8   0829               M             movf    start_year10, W
02C9   2???               M             call WR_DATA
                      00671     writeASC   start_year1
02CA   082A               M             movf    start_year1, W
02CB   2???               M             call WR_DATA
                      00672     writechar   "/"
02CC   302F               M             movlw   "/"
02CD   2???               M             call    WR_DATA
                      00673     writeASC   start_month10
02CE   082B               M             movf    start_month10, W
02CF   2???               M             call WR_DATA
                      00674     writeASC   start_month1
02D0   082C               M             movf    start_month1, W
02D1   2???               M             call WR_DATA
                      00675     writechar   "/"
02D2   302F               M             movlw   "/"
02D3   2???               M             call    WR_DATA
                      00676     writeASC   start_date10
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02D4   082D               M             movf    start_date10, W
02D5   2???               M             call WR_DATA
                      00677     writeASC   start_date1
02D6   082E               M             movf    start_date1, W
02D7   2???               M             call WR_DATA
                      00678     writechar   " "
02D8   3020               M             movlw   " "
02D9   2???               M             call    WR_DATA
                      00679     writeASC   start_hour10
02DA   082F               M             movf    start_hour10, W
02DB   2???               M             call WR_DATA
                      00680     writeASC   start_hour1
02DC   0830               M             movf    start_hour1, W
02DD   2???               M             call WR_DATA
                      00681     writechar   ":"
02DE   303A               M             movlw   ":"
02DF   2???               M             call    WR_DATA
                      00682     writeASC  start_min10
02E0   0831               M             movf    start_min10, W
02E1   2???               M             call WR_DATA
                      00683     writeASC   start_min1
02E2   0832               M             movf    start_min1, W
02E3   2???               M             call WR_DATA
02E4   2???           00684     call    HalfS
02E5   2???           00685     call    HalfS
02E6   2???           00686     call    time
02E7   2???           00687     call    HalfS
02E8   2???           00688     call    HalfS
02E9   2???           00689     call    summary
02EA   2???           00690     call    HalfS
02EB   2???           00691     call    HalfS
                      00692     ;option to Export
02EC   2???           00693     call    Clear_Display
                      00694     Display Logs_Msg3
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02ED   01B9               M                 clrf    Table_Counter
02EE   0103               M                 clrw
02EF                      M loop_disp
02EF   0839               M         movf    Table_Counter,W
02F0   2???               M                 call    Logs_Msg3
02F1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F2   1903               M                 btfsc   STATUS,Z
02F3   2???               M                 goto    end_disp
02F4   2???               M                 call    WR_DATA
02F5   0AB9               M                 incf    Table_Counter,F
02F6   2???               M                 goto    loop_disp
02F7                      M end_disp
02F7   2???           00695     call    Switch_Lines
                      00696     Display Logs_Msg4
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02F8   01B9               M                 clrf    Table_Counter
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02F9   0103               M                 clrw
02FA                      M loop_disp
02FA   0839               M         movf    Table_Counter,W
02FB   2???               M                 call    Logs_Msg4
02FC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FD   1903               M                 btfsc   STATUS,Z
02FE   2???               M                 goto    end_disp
02FF   2???               M                 call    WR_DATA
0300   0AB9               M                 incf    Table_Counter,F
0301   2???               M                 goto    loop_disp
0302                      M end_disp
                      00697 
0302                  00698 wanna_export
0302   1C86           00699     btfss               PORTB,1     ;Wait until data is available from the keypad
0303   2???           00700     goto                $-1
                      00701 
0304   0E06           00702     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
0305   390F           00703     andlw               0x0F
0306   00B7           00704     movwf       keytemp     ; Save which key was pressed
                      00705 
0307                  00706 check_wanna
0307   0837           00707     movf    keytemp, W
0308   3A0F           00708     xorlw   0xF
0309   1D03           00709     btfss   STATUS,Z
030A   2???           00710     goto    check_nothx
030B   2???           00711     call    export
030C   2???           00712     goto    logs
                      00713 
030D                  00714 check_nothx
030D   0837           00715     movf    keytemp, W
030E   3A0E           00716     xorlw   0xE
030F   1D03           00717     btfss   STATUS,Z
0310   2???           00718     goto    check_immapeace
0311   2???           00719     goto    logs
                      00720 
0312                  00721 check_immapeace
0312   0837           00722     movf    keytemp, W
0313   3A0D           00723     xorlw   0xD
0314   1D03           00724     btfss   STATUS,Z
0315   2???           00725     goto    badkeyagain
0316   2???           00726     call    Clear_Display
                      00727     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0317   01B9               M                 clrf    Table_Counter
0318   0103               M                 clrw
0319                      M loop_disp
0319   0839               M         movf    Table_Counter,W
031A   2???               M                 call    Standby_Msg
031B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031C   1903               M                 btfsc   STATUS,Z
031D   2???               M                 goto    end_disp
031E   2???               M                 call    WR_DATA
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   0AB9               M                 incf    Table_Counter,F
0320   2???               M                 goto    loop_disp
0321                      M end_disp
0321   2???           00728     call    Switch_Lines
0322   2???           00729     goto    waiting
                      00730 
0323                  00731 badkeyagain
0323   1886           00732     btfsc               PORTB,1     ;Wait until key is released
0324   2???           00733     goto                $-1
0325   2???           00734     goto        wanna_export
                      00735 
                      00736 ; END OF MAIN PROGRAM
                      00737 ;------------------------------------------------------------
                      00738 
                      00739 ;***************************************
                      00740 ; ROTATE MOTOR ROUTINE
                      00741 ; Rotates motor 36deg. (20 steps)
                      00742 ;***************************************
                      00743 
0326                  00744 ROTATEMOTOR
                      00745     movlf   d'5', motor_count
0326   3005               M         movlw   d'5'
0327   00C8               M         movwf   motor_count
0328                  00746 start_rot
                      00747     movlf   b'1001', PORTA
0328   3009               M         movlw   b'1001'
0329   0085               M         movwf   PORTA
032A   2???           00748     call    motor_del
                      00749     movlf   b'1000', PORTA
032B   3008               M         movlw   b'1000'
032C   0085               M         movwf   PORTA
032D   2???           00750     call    motor_del
                      00751     movlf   b'1010', PORTA
032E   300A               M         movlw   b'1010'
032F   0085               M         movwf   PORTA
0330   2???           00752     call    motor_del
                      00753     movlf   b'0010', PORTA
0331   3002               M         movlw   b'0010'
0332   0085               M         movwf   PORTA
0333   2???           00754     call    motor_del
                      00755     movlf   b'0110', PORTA
0334   3006               M         movlw   b'0110'
0335   0085               M         movwf   PORTA
0336   2???           00756     call    motor_del
                      00757     movlf   b'0100', PORTA
0337   3004               M         movlw   b'0100'
0338   0085               M         movwf   PORTA
0339   2???           00758     call    motor_del
                      00759     movlf   b'0101', PORTA
033A   3005               M         movlw   b'0101'
033B   0085               M         movwf   PORTA
033C   2???           00760     call    motor_del
                      00761     movlf   b'0001', PORTA
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

033D   3001               M         movlw   b'0001'
033E   0085               M         movwf   PORTA
033F   2???           00762     call    motor_del
                      00763 
Message[305]: Using default destination of 1 (file).
0340   0BC8           00764     decfsz  motor_count
0341   2???           00765     goto    start_rot
0342   0185           00766     clrf    PORTA
0343   0008           00767     return
                      00768 
                      00769 ;***************************************
                      00770 ; DATA DISPLAY ROUTINE
                      00771 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00772 ; Determines which key it was and displays appropriate info / branch
                      00773 ;***************************************
                      00774 
0344                  00775 information
0344   00B7           00776     movwf   keytemp             ; Save which key was pressed
                      00777 
0345                  00778 check_1
0345   3A00           00779     xorlw   0x0         ;will be all zeros if its 1
0346   1D03           00780     btfss   STATUS,Z    ;and Z will be high, so skip
0347   2???           00781     goto    check_2
0348   2???           00782     call    Clear_Display
                      00783     writechar "1"
0349   3031               M             movlw   "1"
034A   2???               M             call    WR_DATA
034B   0820           00784     movf    state1, W
034C   2???           00785     call    display_state
034D   0008           00786     return
                      00787 
034E                  00788 check_2
034E   0837           00789     movf    keytemp, W
034F   3A01           00790     xorlw   0x1
0350   1D03           00791     btfss   STATUS,Z
0351   2???           00792     goto    check_3
0352   2???           00793     call    Clear_Display
                      00794     writechar "2"
0353   3032               M             movlw   "2"
0354   2???               M             call    WR_DATA
0355   0821           00795     movf    state2, W
0356   2???           00796     call    display_state
0357   0008           00797     return
                      00798 
0358                  00799 check_3
0358   0837           00800     movf    keytemp, W
0359   3A02           00801     xorlw   0x2
035A   1D03           00802     btfss   STATUS,Z
035B   2???           00803     goto    check_4
035C   2???           00804     call    Clear_Display
                      00805     writechar "3"
035D   3033               M             movlw   "3"
035E   2???               M             call    WR_DATA
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035F   0822           00806     movf    state3, W
0360   2???           00807     call    display_state
0361   0008           00808     return
                      00809 
0362                  00810 check_4
0362   0837           00811     movf    keytemp, W
0363   3A04           00812     xorlw   0x4
0364   1D03           00813     btfss   STATUS,Z
0365   2???           00814     goto    check_5
0366   2???           00815     call    Clear_Display
                      00816     writechar "4"
0367   3034               M             movlw   "4"
0368   2???               M             call    WR_DATA
0369   0823           00817     movf    state4, W
036A   2???           00818     call    display_state
036B   0008           00819     return
                      00820 
036C                  00821 check_5
036C   0837           00822     movf    keytemp, W
036D   3A05           00823     xorlw   0x5
036E   1D03           00824     btfss   STATUS,Z
036F   2???           00825     goto    check_6
0370   2???           00826     call    Clear_Display
                      00827     writechar "5"
0371   3035               M             movlw   "5"
0372   2???               M             call    WR_DATA
0373   0824           00828     movf    state5, W
0374   2???           00829     call    display_state
0375   0008           00830     return
                      00831 
0376                  00832 check_6
0376   0837           00833     movf    keytemp, W
0377   3A06           00834     xorlw   0x6
0378   1D03           00835     btfss   STATUS,Z
0379   2???           00836     goto    check_7
037A   2???           00837     call    Clear_Display
                      00838     writechar "6"
037B   3036               M             movlw   "6"
037C   2???               M             call    WR_DATA
037D   0825           00839     movf    state6, W
037E   2???           00840     call    display_state
037F   0008           00841     return
                      00842 
0380                  00843 check_7
0380   0837           00844     movf    keytemp, W
0381   3A08           00845     xorlw   0x8
0382   1D03           00846     btfss   STATUS,Z
0383   2???           00847     goto    check_8
0384   2???           00848     call    Clear_Display
                      00849     writechar "7"
0385   3037               M             movlw   "7"
0386   2???               M             call    WR_DATA
0387   0826           00850     movf    state7, W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0388   2???           00851     call    display_state
0389   0008           00852     return
                      00853 
038A                  00854 check_8
038A   0837           00855     movf    keytemp, W
038B   3A09           00856     xorlw   0x9
038C   1D03           00857     btfss   STATUS,Z
038D   2???           00858     goto    check_9
038E   2???           00859     call    Clear_Display
                      00860     writechar "8"
038F   3038               M             movlw   "8"
0390   2???               M             call    WR_DATA
0391   0827           00861     movf    state8, W
0392   2???           00862     call    display_state
0393   0008           00863     return
                      00864 
0394                  00865 check_9
0394   0837           00866     movf    keytemp, W
0395   3A0A           00867     xorlw   0xA
0396   1D03           00868     btfss   STATUS,Z
0397   2???           00869     goto    check_summary
0398   2???           00870     call    Clear_Display
                      00871     writechar "9"
0399   3039               M             movlw   "9"
039A   2???               M             call    WR_DATA
039B   0828           00872     movf    state9, W
039C   2???           00873     call    display_state
039D   0008           00874     return
                      00875 
039E                  00876 check_summary
039E   0837           00877     movf    keytemp, W
039F   3A03           00878     xorlw   0x3
03A0   1D03           00879     btfss   STATUS,Z
03A1   2???           00880     goto    check_defective
03A2   2???           00881     call    summary
03A3   0008           00882     return
                      00883 
03A4                  00884 check_defective
03A4   0837           00885     movf    keytemp, W
03A5   3A07           00886     xorlw   0x7
03A6   1D03           00887     btfss   STATUS,Z
03A7   2???           00888     goto    check_time
03A8   2???           00889     call    defective
03A9   0008           00890     return
                      00891 
03AA                  00892 check_time
03AA   0837           00893     movf    keytemp, W
03AB   3A0B           00894     xorlw   0xB
03AC   1D03           00895     btfss   STATUS,Z
03AD   2???           00896     goto    check_export
03AE   2???           00897     call    time
03AF   0008           00898     return
                      00899 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B0                  00900 check_export
03B0   0837           00901     movf    keytemp, W
03B1   3A0F           00902     xorlw   0xF
03B2   1D03           00903     btfss   STATUS,Z
03B3   2???           00904     goto    check_standby       ;or do you wanna allow to check logs?
03B4   2???           00905     call    export
03B5   0008           00906     return
                      00907 
                      00908 ;check_logs
                      00909 ;    movf    keytemp, W
                      00910 ;    xorlw   0xE
                      00911 ;    btfss   STATUS,Z
                      00912 ;    goto    check_standby
                      00913 ;    goto    logs
                      00914 
03B6                  00915 check_standby
03B6   0837           00916     movf    keytemp, W
03B7   3A0D           00917     xorlw   0xD
03B8   1D03           00918     btfss   STATUS,Z
03B9   2???           00919     goto    check_start
03BA   2???           00920     call    Clear_Display
                      00921     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03BB   01B9               M                 clrf    Table_Counter
03BC   0103               M                 clrw
03BD                      M loop_disp
03BD   0839               M         movf    Table_Counter,W
03BE   2???               M                 call    Standby_Msg
03BF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03C0   1903               M                 btfsc   STATUS,Z
03C1   2???               M                 goto    end_disp
03C2   2???               M                 call    WR_DATA
03C3   0AB9               M                 incf    Table_Counter,F
03C4   2???               M                 goto    loop_disp
03C5                      M end_disp
03C5   2???           00922     call    Switch_Lines
03C6   2???           00923     goto    waiting
                      00924 
03C7                  00925 check_start
03C7   0837           00926     movf    keytemp, W
03C8   3A0C           00927     xorlw   0xC
03C9   1D03           00928     btfss   STATUS,Z
03CA   2???           00929     goto    default_key
03CB   2???           00930     goto    start
                      00931 
03CC                  00932 default_key         ; will never get here (unless you hit "LOGS")
03CC   0008           00933     return
                      00934 
                      00935 
                      00936 ;Display state subroutine
                      00937 ;stateN is in W
03CD                  00938 display_state
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03CD   00B8           00939     movwf  statetemp    ; save stateN
                      00940 
03CE                  00941 check_none
03CE   3A00           00942     xorlw   0x0
03CF   1D03           00943     btfss   STATUS,Z
03D0   2???           00944     goto    check_pass
                      00945     Display Not_present
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03D1   01B9               M                 clrf    Table_Counter
03D2   0103               M                 clrw
03D3                      M loop_disp
03D3   0839               M         movf    Table_Counter,W
03D4   2???               M                 call    Not_present
03D5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03D6   1903               M                 btfsc   STATUS,Z
03D7   2???               M                 goto    end_disp
03D8   2???               M                 call    WR_DATA
03D9   0AB9               M                 incf    Table_Counter,F
03DA   2???               M                 goto    loop_disp
03DB                      M end_disp
03DB   0008           00946     return
                      00947 
03DC                  00948 check_pass
03DC   0838           00949     movf    statetemp, W
03DD   3A01           00950     xorlw   0x1
03DE   1D03           00951     btfss   STATUS,Z
03DF   2???           00952     goto    check_LED
                      00953     Display Pass
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03E0   01B9               M                 clrf    Table_Counter
03E1   0103               M                 clrw
03E2                      M loop_disp
03E2   0839               M         movf    Table_Counter,W
03E3   2???               M                 call    Pass
03E4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03E5   1903               M                 btfsc   STATUS,Z
03E6   2???               M                 goto    end_disp
03E7   2???               M                 call    WR_DATA
03E8   0AB9               M                 incf    Table_Counter,F
03E9   2???               M                 goto    loop_disp
03EA                      M end_disp
03EA   0008           00954     return
                      00955 
03EB                  00956 check_LED
03EB   0838           00957     movf    statetemp, W
03EC   3A02           00958     xorlw   0x2
03ED   1D03           00959     btfss   STATUS,Z
03EE   2???           00960     goto    check_flick
                      00961     Display LED_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03EF   01B9               M                 clrf    Table_Counter
03F0   0103               M                 clrw
03F1                      M loop_disp
03F1   0839               M         movf    Table_Counter,W
03F2   2???               M                 call    LED_fail
03F3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03F4   1903               M                 btfsc   STATUS,Z
03F5   2???               M                 goto    end_disp
03F6   2???               M                 call    WR_DATA
03F7   0AB9               M                 incf    Table_Counter,F
03F8   2???               M                 goto    loop_disp
03F9                      M end_disp
03F9   0008           00962     return
                      00963 
03FA                  00964 check_flick
03FA   0838           00965     movf    statetemp, W
03FB   3A03           00966     xorlw   0x3
03FC   1D03           00967     btfss   STATUS,Z
03FD   2???           00968     goto    default_state
                      00969     Display Flick_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03FE   01B9               M                 clrf    Table_Counter
03FF   0103               M                 clrw
0400                      M loop_disp
0400   0839               M         movf    Table_Counter,W
0401   2???               M                 call    Flick_fail
0402   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0403   1903               M                 btfsc   STATUS,Z
0404   2???               M                 goto    end_disp
0405   2???               M                 call    WR_DATA
0406   0AB9               M                 incf    Table_Counter,F
0407   2???               M                 goto    loop_disp
0408                      M end_disp
0408   0008           00970     return
                      00971 
0409                  00972 default_state   ; should never get here
0409   0008           00973     return
                      00974 
                      00975 ; Summary Subroutine
                      00976 ; Displays total number of candles and number of defective candles
                      00977 ; Reads data from num_tot, num_LF, num_FF
040A                  00978 summary
040A   2???           00979     call            Clear_Display
                      00980     Display         Total_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
040B   01B9               M                 clrf    Table_Counter
040C   0103               M                 clrw
040D                      M loop_disp
040D   0839               M         movf    Table_Counter,W
040E   2???               M                 call    Total_Msg
040F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0410   1903               M                 btfsc   STATUS,Z
0411   2???               M                 goto    end_disp
0412   2???               M                 call    WR_DATA
0413   0AB9               M                 incf    Table_Counter,F
0414   2???               M                 goto    loop_disp
0415                      M end_disp
                      00981     writeBCD        num_tot
0415   0834               M             movf    num_tot, W
0416   3E30               M             addlw   B'00110000'
0417   2???               M             call WR_DATA
0418   2???           00982     call            Switch_Lines
                      00983     Display         LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0419   01B9               M                 clrf    Table_Counter
041A   0103               M                 clrw
041B                      M loop_disp
041B   0839               M         movf    Table_Counter,W
041C   2???               M                 call    LF
041D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
041E   1903               M                 btfsc   STATUS,Z
041F   2???               M                 goto    end_disp
0420   2???               M                 call    WR_DATA
0421   0AB9               M                 incf    Table_Counter,F
0422   2???               M                 goto    loop_disp
0423                      M end_disp
                      00984     writeBCD        num_LF
0423   0835               M             movf    num_LF, W
0424   3E30               M             addlw   B'00110000'
0425   2???               M             call WR_DATA
                      00985     spacebar
0426   3014               M             movlw   B'00010100'
0427   2???               M             call    WR_INS
                      00986     spacebar
0428   3014               M             movlw   B'00010100'
0429   2???               M             call    WR_INS
                      00987     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
042A   01B9               M                 clrf    Table_Counter
042B   0103               M                 clrw
042C                      M loop_disp
042C   0839               M         movf    Table_Counter,W
042D   2???               M                 call    FF
042E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
042F   1903               M                 btfsc   STATUS,Z
0430   2???               M                 goto    end_disp
0431   2???               M                 call    WR_DATA
0432   0AB9               M                 incf    Table_Counter,F
0433   2???               M                 goto    loop_disp
0434                      M end_disp
                      00988     writeBCD        num_FF
0434   0836               M             movf    num_FF, W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0435   3E30               M             addlw   B'00110000'
0436   2???               M             call WR_DATA
0437   0008           00989     return
                      00990 
                      00991 ; Defective candles Subroutine
                      00992 ; Displays index of each defective candle (LF or FF)
                      00993 ; Reads data from state1 - state9
0438                  00994 defective
0438   2???           00995     call            Clear_Display
                      00996 
                      00997     Display         LF              ; first look at LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0439   01B9               M                 clrf    Table_Counter
043A   0103               M                 clrw
043B                      M loop_disp
043B   0839               M         movf    Table_Counter,W
043C   2???               M                 call    LF
043D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
043E   1903               M                 btfsc   STATUS,Z
043F   2???               M                 goto    end_disp
0440   2???               M                 call    WR_DATA
0441   0AB9               M                 incf    Table_Counter,F
0442   2???               M                 goto    loop_disp
0443                      M end_disp
0443   08B5           00998     movf            num_LF, F
0444   1D03           00999     btfss           STATUS,Z         ;if none LF, just say "none"
0445   2???           01000     goto            check_LF
                      01001     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0446   01B9               M                 clrf    Table_Counter
0447   0103               M                 clrw
0448                      M loop_disp
0448   0839               M         movf    Table_Counter,W
0449   2???               M                 call    None
044A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
044B   1903               M                 btfsc   STATUS,Z
044C   2???               M                 goto    end_disp
044D   2???               M                 call    WR_DATA
044E   0AB9               M                 incf    Table_Counter,F
044F   2???               M                 goto    loop_disp
0450                      M end_disp
0450   2???           01002     goto            now_FF
                      01003 
0451                  01004 check_LF                            ; list all LF candles
0451   3002           01005     movlw           B'00000010'
0452   2???           01006     call            check_for_fail
                      01007 
0453                  01008 now_FF                              ; now look at FF
0453   2???           01009     call            Switch_Lines
                      01010     Display         FF
  0000                    M                 local   loop_disp
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_disp
0454   01B9               M                 clrf    Table_Counter
0455   0103               M                 clrw
0456                      M loop_disp
0456   0839               M         movf    Table_Counter,W
0457   2???               M                 call    FF
0458   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0459   1903               M                 btfsc   STATUS,Z
045A   2???               M                 goto    end_disp
045B   2???               M                 call    WR_DATA
045C   0AB9               M                 incf    Table_Counter,F
045D   2???               M                 goto    loop_disp
045E                      M end_disp
045E   08B6           01011     movf            num_FF, F
045F   1D03           01012     btfss           STATUS,Z         ;if none FF, just say "none"
0460   2???           01013     goto            check_FF
                      01014     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0461   01B9               M                 clrf    Table_Counter
0462   0103               M                 clrw
0463                      M loop_disp
0463   0839               M         movf    Table_Counter,W
0464   2???               M                 call    None
0465   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0466   1903               M                 btfsc   STATUS,Z
0467   2???               M                 goto    end_disp
0468   2???               M                 call    WR_DATA
0469   0AB9               M                 incf    Table_Counter,F
046A   2???               M                 goto    loop_disp
046B                      M end_disp
046B   0008           01015     return
                      01016 
046C                  01017 check_FF                            ; list all FF candles
046C   3003           01018     movlw           B'00000011'
046D   2???           01019     call            check_for_fail
046E   0008           01020     return
                      01021 
046F                  01022 check_for_fail  ;lists all candles that have status currently in W "stateX"
046F   00B8           01023     movwf   statetemp
                      01024         movlf   D'0', candle_index
0470   3000               M         movlw   D'0'
0471   00C5               M         movwf   candle_index
0472   1383           01025         bcf     STATUS, IRP
                      01026         movlf   0x1F, FSR           ;index of right before state1
0473   301F               M         movlw   0x1F
0474   0084               M         movwf   FSR
0475                  01027 check_next
0475   3009           01028         movlw   D'9'                ;exit loop if at 9
0476   0245           01029         subwf   candle_index, W
0477   1803           01030         btfsc   STATUS,W
0478   2???           01031         goto    end_check_fail
0479   0A84           01032         incf    FSR,F               ; increment
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

047A   0AC5           01033         incf    candle_index,F
047B   0838           01034         movf    statetemp, W            ;see if stateN = stateX
047C   0200           01035         subwf   INDF, W
047D   1D03           01036         btfss   STATUS, Z
047E   2???           01037         goto    check_next              ;if not, go to next
                      01038         writeBCD        candle_index    ;if so, write down the number
047F   0845               M             movf    candle_index, W
0480   3E30               M             addlw   B'00110000'
0481   2???               M             call WR_DATA
                      01039         spacebar
0482   3014               M             movlw   B'00010100'
0483   2???               M             call    WR_INS
0484   2???           01040         goto check_next
0485                  01041 end_check_fail
0485   0008           01042         return
                      01043 
                      01044 ; Time subroutine
                      01045 ; Takes the time in seconds as a binary number in op_time
                      01046 ; and puts it into huns,tens,ones to display.
0486                  01047 time
0486   2???           01048     call    Clear_Display
                      01049     Display Time_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0487   01B9               M                 clrf    Table_Counter
0488   0103               M                 clrw
0489                      M loop_disp
0489   0839               M         movf    Table_Counter,W
048A   2???               M                 call    Time_Msg
048B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
048C   1903               M                 btfsc   STATUS,Z
048D   2???               M                 goto    end_disp
048E   2???               M                 call    WR_DATA
048F   0AB9               M                 incf    Table_Counter,F
0490   2???               M                 goto    loop_disp
0491                      M end_disp
0491   2???           01050     call    Switch_Lines
0492   0833           01051     movf    op_time, W
0493   2???           01052     call    big_number
0494   08C0           01053     movf    huns, F
0495   1903           01054     btfsc   STATUS,Z        ;if huns is zero don't display it
0496   2???           01055     goto    no_huns
                      01056     writeBCD    huns
0497   0840               M             movf    huns, W
0498   3E30               M             addlw   B'00110000'
0499   2???               M             call WR_DATA
049A                  01057 no_huns
049A   08C1           01058     movf    tens, F
049B   1903           01059     btfsc   STATUS,Z        ;if tens is zero don't display it
049C   2???           01060     goto    no_tens
                      01061     writeBCD    tens
049D   0841               M             movf    tens, W
049E   3E30               M             addlw   B'00110000'
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

049F   2???               M             call WR_DATA
04A0                  01062 no_tens
                      01063     writeBCD    ones
04A0   0842               M             movf    ones, W
04A1   3E30               M             addlw   B'00110000'
04A2   2???               M             call WR_DATA
                      01064     Display Seconds
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
04A3   01B9               M                 clrf    Table_Counter
04A4   0103               M                 clrw
04A5                      M loop_disp
04A5   0839               M         movf    Table_Counter,W
04A6   2???               M                 call    Seconds
04A7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
04A8   1903               M                 btfsc   STATUS,Z
04A9   2???               M                 goto    end_disp
04AA   2???               M                 call    WR_DATA
04AB   0AB9               M                 incf    Table_Counter,F
04AC   2???               M                 goto    loop_disp
04AD                      M end_disp
04AD   0008           01065     return
                      01066 
                      01067 ; Export subroutine
                      01068 ; Exports data from current run to hyperterminal
                      01069 ; reads start time and num_tot/num_ff/num_lf data
04AE                  01070 export
                      01071     printchar   0x7       ;makes a noise on the PC
04AE   3007               M             movlw   0x7
04AF   2???               M             call    writetoPC
                      01072     printchar   0xD       ;go back to left edge
04B0   300D               M             movlw   0xD
04B1   2???               M             call    writetoPC
                      01073     printchar   "T"
04B2   3054               M             movlw   "T"
04B3   2???               M             call    writetoPC
                      01074     printchar   "e"
04B4   3065               M             movlw   "e"
04B5   2???               M             call    writetoPC
                      01075     printchar   "s"
04B6   3073               M             movlw   "s"
04B7   2???               M             call    writetoPC
                      01076     printchar   "t"
04B8   3074               M             movlw   "t"
04B9   2???               M             call    writetoPC
                      01077     printchar   " "
04BA   3020               M             movlw   " "
04BB   2???               M             call    writetoPC
                      01078     printchar   "a"
04BC   3061               M             movlw   "a"
04BD   2???               M             call    writetoPC
                      01079     printchar   "t"
04BE   3074               M             movlw   "t"
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04BF   2???               M             call    writetoPC
                      01080     printchar   ":"
04C0   303A               M             movlw   ":"
04C1   2???               M             call    writetoPC
                      01081     printchar   " "
04C2   3020               M             movlw   " "
04C3   2???               M             call    writetoPC
                      01082     printchar   "2"
04C4   3032               M             movlw   "2"
04C5   2???               M             call    writetoPC
                      01083     printchar   "0"
04C6   3030               M             movlw   "0"
04C7   2???               M             call    writetoPC
                      01084     printASC   start_year10
04C8   1283 1303          M             banksel start_year10
04CA   0829               M             movf    start_year10,W
04CB   2???               M             call    writetoPC
                      01085     printASC   start_year1
04CC   1283 1303          M             banksel start_year1
04CE   082A               M             movf    start_year1,W
04CF   2???               M             call    writetoPC
                      01086     printchar   "/"
04D0   302F               M             movlw   "/"
04D1   2???               M             call    writetoPC
                      01087     printASC   start_month10
04D2   1283 1303          M             banksel start_month10
04D4   082B               M             movf    start_month10,W
04D5   2???               M             call    writetoPC
                      01088     printASC   start_month1
04D6   1283 1303          M             banksel start_month1
04D8   082C               M             movf    start_month1,W
04D9   2???               M             call    writetoPC
                      01089     printchar   "/"
04DA   302F               M             movlw   "/"
04DB   2???               M             call    writetoPC
                      01090     printASC   start_date10
04DC   1283 1303          M             banksel start_date10
04DE   082D               M             movf    start_date10,W
04DF   2???               M             call    writetoPC
                      01091     printASC   start_date1
04E0   1283 1303          M             banksel start_date1
04E2   082E               M             movf    start_date1,W
04E3   2???               M             call    writetoPC
                      01092     printchar   " "
04E4   3020               M             movlw   " "
04E5   2???               M             call    writetoPC
                      01093     printASC   start_hour10
04E6   1283 1303          M             banksel start_hour10
04E8   082F               M             movf    start_hour10,W
04E9   2???               M             call    writetoPC
                      01094     printASC   start_hour1
04EA   1283 1303          M             banksel start_hour1
04EC   0830               M             movf    start_hour1,W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04ED   2???               M             call    writetoPC
                      01095     printchar   ":"
04EE   303A               M             movlw   ":"
04EF   2???               M             call    writetoPC
                      01096     printASC   start_min10
04F0   1283 1303          M             banksel start_min10
04F2   0831               M             movf    start_min10,W
04F3   2???               M             call    writetoPC
                      01097     printASC   start_min1
04F4   1283 1303          M             banksel start_min1
04F6   0832               M             movf    start_min1,W
04F7   2???               M             call    writetoPC
                      01098     newline
                          M             printchar   0xA ;changes line
04F8   300A               M             movlw   0xA
04F9   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
04FA   300D               M             movlw   0xD
04FB   2???               M             call    writetoPC
                      01099     printchar   "T"
04FC   3054               M             movlw   "T"
04FD   2???               M             call    writetoPC
                      01100     printchar   "i"
04FE   3069               M             movlw   "i"
04FF   2???               M             call    writetoPC
                      01101     printchar   "m"
0500   306D               M             movlw   "m"
0501   2???               M             call    writetoPC
                      01102     printchar   "e"
0502   3065               M             movlw   "e"
0503   2???               M             call    writetoPC
                      01103     printchar   ":"
0504   303A               M             movlw   ":"
0505   2???               M             call    writetoPC
                      01104     printchar   " "
0506   3020               M             movlw   " "
0507   2???               M             call    writetoPC
                      01105     printchar   " "
0508   3020               M             movlw   " "
0509   2???               M             call    writetoPC
                      01106     printchar   " "
050A   3020               M             movlw   " "
050B   2???               M             call    writetoPC
                      01107     printchar   " "
050C   3020               M             movlw   " "
050D   2???               M             call    writetoPC
050E   1283 1303      01108     banksel huns
0510   08C0           01109     movf    huns, F
0511   1903           01110     btfsc   STATUS,Z        ;if huns is zero don't display it
0512   2???           01111     goto    nohuns
                      01112     printBCD   huns
0513   1283 1303          M             banksel huns
0515   0840               M             movf    huns, W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0516   3E30               M             addlw   0x30
0517   2???               M             call    writetoPC
0518                  01113 nohuns
0518   1283 1303      01114     banksel tens
051A   08C1           01115     movf    tens, F
051B   1903           01116     btfsc   STATUS,Z        ;if tens is zero don't display it
051C   2???           01117     goto    notens
                      01118     printBCD   tens
051D   1283 1303          M             banksel tens
051F   0841               M             movf    tens, W
0520   3E30               M             addlw   0x30
0521   2???               M             call    writetoPC
0522                  01119 notens
                      01120     printBCD   ones
0522   1283 1303          M             banksel ones
0524   0842               M             movf    ones, W
0525   3E30               M             addlw   0x30
0526   2???               M             call    writetoPC
                      01121     printchar   " "
0527   3020               M             movlw   " "
0528   2???               M             call    writetoPC
                      01122     printchar   "s"
0529   3073               M             movlw   "s"
052A   2???               M             call    writetoPC
                      01123     printchar   "e"
052B   3065               M             movlw   "e"
052C   2???               M             call    writetoPC
                      01124     printchar   "c"
052D   3063               M             movlw   "c"
052E   2???               M             call    writetoPC
                      01125     newline
                          M             printchar   0xA ;changes line
052F   300A               M             movlw   0xA
0530   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0531   300D               M             movlw   0xD
0532   2???               M             call    writetoPC
                      01126     printchar   "C"
0533   3043               M             movlw   "C"
0534   2???               M             call    writetoPC
                      01127     printchar   "a"
0535   3061               M             movlw   "a"
0536   2???               M             call    writetoPC
                      01128     printchar   "n"
0537   306E               M             movlw   "n"
0538   2???               M             call    writetoPC
                      01129     printchar   "d"
0539   3064               M             movlw   "d"
053A   2???               M             call    writetoPC
                      01130     printchar   "l"
053B   306C               M             movlw   "l"
053C   2???               M             call    writetoPC
                      01131     printchar   "e"
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

053D   3065               M             movlw   "e"
053E   2???               M             call    writetoPC
                      01132     printchar   "s"
053F   3073               M             movlw   "s"
0540   2???               M             call    writetoPC
                      01133     printchar   ":"
0541   303A               M             movlw   ":"
0542   2???               M             call    writetoPC
                      01134     printchar   " "
0543   3020               M             movlw   " "
0544   2???               M             call    writetoPC
                      01135     printchar   " "
0545   3020               M             movlw   " "
0546   2???               M             call    writetoPC
                      01136     printchar   " "
0547   3020               M             movlw   " "
0548   2???               M             call    writetoPC
                      01137     printchar   " "
0549   3020               M             movlw   " "
054A   2???               M             call    writetoPC
                      01138     printchar   " "
054B   3020               M             movlw   " "
054C   2???               M             call    writetoPC
                      01139     printchar   " "
054D   3020               M             movlw   " "
054E   2???               M             call    writetoPC
                      01140     printBCD    num_tot
054F   1283 1303          M             banksel num_tot
0551   0834               M             movf    num_tot, W
0552   3E30               M             addlw   0x30
0553   2???               M             call    writetoPC
                      01141     newline
                          M             printchar   0xA ;changes line
0554   300A               M             movlw   0xA
0555   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0556   300D               M             movlw   0xD
0557   2???               M             call    writetoPC
                      01142     printchar   "L"
0558   304C               M             movlw   "L"
0559   2???               M             call    writetoPC
                      01143     printchar   "E"
055A   3045               M             movlw   "E"
055B   2???               M             call    writetoPC
                      01144     printchar   "D"
055C   3044               M             movlw   "D"
055D   2???               M             call    writetoPC
                      01145     printchar   " "
055E   3020               M             movlw   " "
055F   2???               M             call    writetoPC
                      01146     printchar   "f"
0560   3066               M             movlw   "f"
0561   2???               M             call    writetoPC
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01147     printchar   "a"
0562   3061               M             movlw   "a"
0563   2???               M             call    writetoPC
                      01148     printchar   "i"
0564   3069               M             movlw   "i"
0565   2???               M             call    writetoPC
                      01149     printchar   "l"
0566   306C               M             movlw   "l"
0567   2???               M             call    writetoPC
                      01150     printchar   ":"
0568   303A               M             movlw   ":"
0569   2???               M             call    writetoPC
                      01151     printchar   " "
056A   3020               M             movlw   " "
056B   2???               M             call    writetoPC
                      01152     printchar   " "
056C   3020               M             movlw   " "
056D   2???               M             call    writetoPC
                      01153     printchar   " "
056E   3020               M             movlw   " "
056F   2???               M             call    writetoPC
                      01154     printchar   " "
0570   3020               M             movlw   " "
0571   2???               M             call    writetoPC
                      01155     printchar   " "
0572   3020               M             movlw   " "
0573   2???               M             call    writetoPC
                      01156     printBCD    num_LF
0574   1283 1303          M             banksel num_LF
0576   0835               M             movf    num_LF, W
0577   3E30               M             addlw   0x30
0578   2???               M             call    writetoPC
                      01157     newline
                          M             printchar   0xA ;changes line
0579   300A               M             movlw   0xA
057A   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
057B   300D               M             movlw   0xD
057C   2???               M             call    writetoPC
                      01158     printchar   "F"
057D   3046               M             movlw   "F"
057E   2???               M             call    writetoPC
                      01159     printchar   "l"
057F   306C               M             movlw   "l"
0580   2???               M             call    writetoPC
                      01160     printchar   "i"
0581   3069               M             movlw   "i"
0582   2???               M             call    writetoPC
                      01161     printchar   "c"
0583   3063               M             movlw   "c"
0584   2???               M             call    writetoPC
                      01162     printchar   "k"
0585   306B               M             movlw   "k"
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0586   2???               M             call    writetoPC
                      01163     printchar   "e"
0587   3065               M             movlw   "e"
0588   2???               M             call    writetoPC
                      01164     printchar   "r"
0589   3072               M             movlw   "r"
058A   2???               M             call    writetoPC
                      01165     printchar   " "
058B   3020               M             movlw   " "
058C   2???               M             call    writetoPC
                      01166     printchar   "f"
058D   3066               M             movlw   "f"
058E   2???               M             call    writetoPC
                      01167     printchar   "a"
058F   3061               M             movlw   "a"
0590   2???               M             call    writetoPC
                      01168     printchar   "i"
0591   3069               M             movlw   "i"
0592   2???               M             call    writetoPC
                      01169     printchar   "l"
0593   306C               M             movlw   "l"
0594   2???               M             call    writetoPC
                      01170     printchar   ":"
0595   303A               M             movlw   ":"
0596   2???               M             call    writetoPC
                      01171     printchar   " "
0597   3020               M             movlw   " "
0598   2???               M             call    writetoPC
                      01172     printBCD    num_FF
0599   1283 1303          M             banksel num_FF
059B   0836               M             movf    num_FF, W
059C   3E30               M             addlw   0x30
059D   2???               M             call    writetoPC
                      01173     newline
                          M             printchar   0xA ;changes line
059E   300A               M             movlw   0xA
059F   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
05A0   300D               M             movlw   0xD
05A1   2???               M             call    writetoPC
                      01174     newline
                          M             printchar   0xA ;changes line
05A2   300A               M             movlw   0xA
05A3   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
05A4   300D               M             movlw   0xD
05A5   2???               M             call    writetoPC
05A6   1283           01175     bcf STATUS,RP0
05A7   1303           01176     bcf STATUS,RP1     ; back to bank 0
05A8   0008           01177     return
                      01178 
                      01179 
                      01180 ;***************************************
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01181 ; GENERAL PURPOSE SUBROUTINES
                      01182 ;***************************************
                      01183 
                      01184 ; DISPLAY BIG NUMBER SUBROUTINE
                      01185 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      01186 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      01187 ; Uses "shift and add 3" algorithm
05A9                  01188 big_number
                      01189     movff   op_time, op_time_save         ;save the original op_time
05A9   0833               M         movf    op_time, W
05AA   00BF               M         movwf   op_time_save
                      01190     movlf   8, bignumcount                ;will shift 8 times
05AB   3008               M         movlw   8
05AC   00C3               M         movwf   bignumcount
05AD   01C0           01191     clrf    huns
05AE   01C1           01192     clrf    tens
05AF   01C2           01193     clrf    ones
                      01194 
05B0                  01195 BCDadd3                             ; if any digit > 5, add3
05B0   3005           01196     movlw   0x5
05B1   0240           01197     subwf   huns, W
05B2   1803           01198     btfsc   STATUS, C
05B3   2???           01199     call    add3huns
                      01200 
05B4   3005           01201     movlw   0x5
05B5   0241           01202     subwf   tens, W
05B6   1803           01203     btfsc   STATUS, C
05B7   2???           01204     call    add3tens
                      01205 
05B8   3005           01206     movlw   0x5
05B9   0242           01207     subwf   ones, W
05BA   1803           01208     btfsc   STATUS, C
05BB   2???           01209     call    add3ones
                      01210 
05BC   03C3           01211     decf    bignumcount, 1
05BD   1003           01212     bcf     STATUS, C
05BE   0DB3           01213     rlf     op_time, 1              ; shift
05BF   0DC2           01214     rlf     ones, 1
05C0   1A42           01215     btfsc   ones,4 ;
05C1   2???           01216     call    carryones               ; carry if too large
05C2   0DC1           01217     rlf     tens, 1
                      01218 
05C3   1A41           01219     btfsc   tens,4 ;
05C4   2???           01220     call    carrytens
05C5   0DC0           01221     rlf     huns,1
05C6   1003           01222     bcf     STATUS, C
                      01223 
05C7   0843           01224     movf    bignumcount, W
05C8   1D03           01225     btfss   STATUS, Z
05C9   2???           01226     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      01227 
                      01228     movff    op_time_save, op_time     ;restore the original op_time
05CA   083F               M         movf    op_time_save, W
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

05CB   00B3               M         movwf   op_time
05CC   0008           01229     return
                      01230 
05CD                  01231 add3huns
05CD   3003           01232     movlw 0x3
05CE   07C0           01233     addwf huns,F
05CF   0008           01234     return
05D0                  01235 add3tens
05D0   3003           01236     movlw 0x3
05D1   07C1           01237     addwf tens,F
05D2   0008           01238     return
05D3                  01239 add3ones
05D3   3003           01240     movlw 0x3
05D4   07C2           01241     addwf ones,F
05D5   0008           01242     return
05D6                  01243 carryones
05D6   1242           01244     bcf ones, 4
05D7   1403           01245     bsf STATUS, C
05D8   0008           01246     return
05D9                  01247 carrytens
05D9   1241           01248     bcf tens, 4
05DA   1403           01249     bsf STATUS, C
05DB   0008           01250     return
                      01251 
                      01252 
                      01253 ;***************************************
                      01254 ; DELAY SUBROUTINES
                      01255 ;***************************************
                      01256 
                      01257 ; DELAY 0.5S SUBROUTINE (from generator at http://www.piclist.com/techref/piclist/codegen/delay.htm)
                      01258 ; Delays exactly 0.5sec
05DC                  01259 HalfS
                      01260       movlf 0x8A, delH
05DC   308A               M         movlw   0x8A
05DD   00BC               M         movwf   delH
                      01261       movlf 0xBA, delM
05DE   30BA               M         movlw   0xBA
05DF   00BD               M         movwf   delM
                      01262       movlf 0x03, delL
05E0   3003               M         movlw   0x03
05E1   00BE               M         movwf   delL
05E2                  01263 HalfS_0
05E2   0BBC           01264       decfsz    delH, F
05E3   2???           01265           goto  $+2
05E4   0BBD           01266           decfsz        delM, F
05E5   2???           01267           goto  $+2
05E6   0BBE           01268           decfsz        delL, F
05E7   2???           01269           goto  HalfS_0
                      01270 
05E8   2???           01271           goto  $+1
05E9   0000           01272           nop
05EA   0008           01273           return
                      01274 
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01275 ; DELAY 5ms SUBROUTINE. (from generator at http://www.piclist.com/techref/piclist/codegen/delay.htm)
                      01276 ; Useful for LCD because PIC is way faster than it can handle
                      01277 ; Delays exactly 5ms
05EB                  01278 delay5ms
                      01279         movlf   0xC3, delH
05EB   30C3               M         movlw   0xC3
05EC   00BC               M         movwf   delH
                      01280         movlf   0x0A, delL
05ED   300A               M         movlw   0x0A
05EE   00BE               M         movwf   delL
05EF                  01281 Delay_0
05EF   0BBC           01282         decfsz  delH, f
05F0   2???           01283         goto    $+2
05F1   0BBE           01284         decfsz  delL, f
05F2   2???           01285         goto    Delay_0
05F3   0008           01286     return
                      01287 
                      01288 ; MOTOR DELAY SUBROUTINE.
                      01289 ; Delays ~10ms for the motor.
05F4                  01290 motor_del
                      01291       movlf 0xF3, delH
05F4   30F3               M         movlw   0xF3
05F5   00BC               M         movwf   delH
                      01292       movlf 0x2F, delL
05F6   302F               M         movlw   0x2F
05F7   00BE               M         movwf   delL
05F8                  01293 motor_del_0
05F8   0BBC           01294       decfsz    delH, F
05F9   2???           01295           goto      $+2
05FA   0BBE           01296           decfsz        delL, F
05FB   2???           01297           goto      motor_del_0
05FC   0008           01298           return
                      01299 
                      01300 ;***************************************
                      01301 ; LCD SUBROUTINES (from sample code)
                      01302 ;***************************************
                      01303 
                      01304 ; Initialize the LCD
05FD                  01305 InitLCD
05FD   1283           01306         bcf STATUS,RP0          ;bank0
05FE   1588           01307         bsf E     ;E default high
                      01308 
                      01309         ;Wait for LCD POR to finish (~15ms)
05FF   2???           01310         call delay5ms
0600   2???           01311         call delay5ms
0601   2???           01312         call delay5ms
                      01313 
                      01314         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      01315         ; -> Send b'0011' 3 times
0602   3033           01316         movlw   b'00110011'
0603   2???           01317         call    WR_INS
0604   2???           01318         call delay5ms
0605   2???           01319         call delay5ms
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0606   3032           01320         movlw   b'00110010'
0607   2???           01321         call    WR_INS
0608   2???           01322         call delay5ms
0609   2???           01323         call delay5ms
                      01324 
                      01325         ; 4 bits, 2 lines, 5x7 dots
060A   3028           01326         movlw   b'00101000'
060B   2???           01327         call    WR_INS
060C   2???           01328         call delay5ms
060D   2???           01329         call delay5ms
                      01330 
                      01331         ; display on/off
060E   300C           01332         movlw   b'00001100'
060F   2???           01333         call    WR_INS
0610   2???           01334         call delay5ms
0611   2???           01335         call delay5ms
                      01336 
                      01337         ; Entry mode
0612   3006           01338         movlw   b'00000110'
0613   2???           01339         call    WR_INS
0614   2???           01340         call delay5ms
0615   2???           01341         call delay5ms
                      01342 
                      01343         ; Clear ram
0616   3001           01344         movlw   b'00000001'
0617   2???           01345         call    WR_INS
0618   2???           01346         call delay5ms
0619   2???           01347         call delay5ms
061A   0008           01348         return
                      01349 
                      01350 ; Clear the display
061B                  01351 Clear_Display
061B   3001           01352                 movlw   B'00000001'
061C   2???           01353                 call    WR_INS
061D   0008           01354                 return
                      01355 
                      01356 ;Switch lines
061E                  01357 Switch_Lines
061E   30C0           01358                 movlw   B'11000000'
061F   2???           01359                 call    WR_INS
0620   0008           01360                 return
                      01361 
                      01362 ; Write an instruction to the LCD (see page 7-104)
                      01363 ; The instruction must be in W
0621                  01364 WR_INS
0621   1108           01365         bcf             RS                              ;clear RS
0622   00BA           01366         movwf   com                             ;W --> com
0623   39F0           01367         andlw   0xF0                    ;mask 4 bits MSB w = X0
0624   0088           01368         movwf   PORTD                   ;Send 4 bits MSB
0625   1588           01369         bsf             E                               ;
0626   2???           01370         call    delay5ms        ;__    __
0627   1188           01371         bcf             E                               ;  |__|
0628   0E3A           01372         swapf   com,w
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0629   39F0           01373         andlw   0xF0                    ;1111 0010
062A   0088           01374         movwf   PORTD                   ;send 4 bits LSB
062B   1588           01375         bsf             E                               ;
062C   2???           01376         call    delay5ms        ;__    __
062D   1188           01377         bcf             E                               ;  |__|
062E   2???           01378         call    delay5ms
062F   0008           01379         return
                      01380 
                      01381 ; Write data at current cursor location
                      01382 ; Character code (see page 7-104) must be in W
0630                  01383 WR_DATA
0630   1508           01384         bsf             RS
0631   00BB           01385         movwf   dat
0632   083B           01386         movf    dat,w
0633   39F0           01387         andlw   0xF0
0634   3E04           01388         addlw   4
0635   0088           01389         movwf   PORTD
0636   1588           01390         bsf             E                               ;
0637   2???           01391         call    delay5ms        ;__    __
0638   1188           01392         bcf             E                               ;  |__|
0639   0E3B           01393         swapf   dat,w
063A   39F0           01394         andlw   0xF0
063B   3E04           01395         addlw   4
063C   0088           01396         movwf   PORTD
063D   1588           01397         bsf             E                               ;
063E   2???           01398         call    delay5ms        ;__    __
063F   1188           01399         bcf             E                               ;  |__|
0640   0008           01400         return
                      01401 
                      01402 
                      01403 ;***************************************
                      01404 ; PC INTERFACE SUBROUTINES (from sample code)
                      01405 ;***************************************
0641                  01406 InitUSART
0641   1683           01407         bsf       STATUS,RP0     ; select bank 1
0642   300F           01408         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0643   0099           01409         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0644   0198           01410         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01411 
0645   1283           01412         bcf       STATUS,RP0     ; select bank 0
0646   1798           01413         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
0647   1618           01414         bsf       RCSTA,CREN     ; continuous receive
                      01415 
0648   1683           01416         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0649   1698           01417         bsf       TXSTA,TXEN     ; Transmit enable
064A   0008           01418         return
                      01419 
                      01420 
064B                  01421 writetoPC
                      01422 ; Writes the data in W to the PC
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01423 ; end up in bank1!
064B   1283           01424         bcf       STATUS,RP0     ; Go to bank 0
064C   0099           01425         movwf     TXREG          ; Send contents of W to RS232
064D   1683           01426         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
064E   1C98           01427         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
064F   2???           01428         goto      $-1
0650   0008           01429         return
                      01430 
                      01431 
                      01432 ;***************************************
                      01433 ; ISR
                      01434 ; Currently only care about TMR0
                      01435 ; TMR0 overflows at 256*256; each time, decrement count38
                      01436 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      01437 ; When this hapens, op_time increments
                      01438 ; Also check photodata every time for 2 sec = total of 76 reads
                      01439 ;***************************************
0651                  01440 isr
0651   00F9           01441     movwf   w_isr           ;save W and status
0652   0E03           01442     swapf   STATUS, W
0653   0183           01443     clrf    STATUS
0654   00FA           01444     movwf   status_isr
                      01445 
0655   0BC4           01446     decfsz  count38, F     ;if count38 gets to 38 it's been one second
0656   2???           01447     goto    end_isr
                      01448     movlf   D'38', count38  ;so reset count38
0657   3026               M         movlw   D'38'
0658   00C4               M         movwf   count38
0659   0AB3           01449     incf    op_time, F         ; and increment op_time
                      01450 
065A                  01451 end_isr
                      01452 
065A   1889           01453     btfsc   PHOTODATA       ;if PHOTODATA is 1, light is on
065B   0AC6           01454     incf    photocount, F       ;if it is 1, light is on so photocount++
                      01455 
065C   0E7A           01456     swapf   status_isr, W   ;restore W and status
065D   0083           01457     movwf   STATUS
065E   0EF9           01458     swapf   w_isr, F
065F   0E79           01459     swapf   w_isr, W
0660   110B           01460     bcf     INTCON, T0IF    ;clear the interrupt flag
0661   0009           01461     retfie
                      01462 
                      01463 
3F72                  01464     END
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           000005B0
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Clear_Display                     0000061B
D                                 00000005
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Delay_0                           000005EF
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
F                                 00000001
FERR                              00000002
FF                                0000008F
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000005DC
HalfS_0                           000005E2
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRDATA                            PORTE, 0
IRP                               00000007
InitLCD                           000005FD
InitUSART                         00000641
LED_fail                          0000005C
LF                                00000089
Logs_Msg1                         0000009D
Logs_Msg2                         000000AE
Logs_Msg3                         000000BF
Logs_Msg4                         000000C8
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000095
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
Op_at                             000000D8
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PHOTODATA                         PORTE, 1
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
ROTATEMOTOR                       00000326
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      0000061E
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000039
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

WREN                              00000002
WRERR                             00000003
WR_DATA                           00000630
WR_INS                            00000621
Z                                 00000002
_.org_1_0172                      00000172
_.org_1_01C8                      000001C8
_.org_1_01EF                      000001EF
_.org_1_020F                      0000020F
_.org_1_0214                      00000214
_.org_1_022D                      0000022D
_.org_1_0293                      00000293
_.org_1_0303                      00000303
_.org_1_0324                      00000324
_.org_1_05E3                      000005E3
_.org_1_05E5                      000005E5
_.org_1_05E8                      000005E8
_.org_1_05F0                      000005F0
_.org_1_05F9                      000005F9
_.org_1_064F                      0000064F
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 55


SYMBOL TABLE
  LABEL                             VALUE 

_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
aboveboth                         000001AE
add3huns                          000005CD
add3ones                          000005D3
add3tens                          000005D0
badkey                            00000292
badkeyagain                       00000323
big_number                        000005A9
bignumcount                       00000043
candle_index                      00000045
carryones                         000005D6
carrytens                         000005D9
check_1                           00000345
check_2                           0000034E
check_3                           00000358
check_4                           00000362
check_5                           0000036C
check_6                           00000376
check_7                           00000380
check_8                           0000038A
check_9                           00000394
check_FF                          0000046C
check_LED                         000003EB
check_LF                          00000451
check_defective                   000003A4
check_done                        00000281
check_export                      000003B0
check_flick                       000003FA
check_for_fail                    0000046F
check_immapeace                   00000312
check_log1                        00000231
check_log2                        00000239
check_log3                        00000242
check_log4                        0000024B
check_log5                        00000254
check_log6                        0000025D
check_log7                        00000266
check_log8                        0000026F
check_log9                        00000278
check_next                        00000475
check_none                        000003CE
check_nothx                       0000030D
check_pass                        000003DC
check_standby                     000003B6
check_start                       000003C7
check_summary                     0000039E
check_threshold1                  0000019F
check_threshold2                  000001A7
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 56


SYMBOL TABLE
  LABEL                             VALUE 

check_time                        000003AA
check_wanna                       00000307
com                               0000003A
count38                           00000044
dat                               0000003B
default_key                       000003CC
default_state                     00000409
defective                         00000438
delH                              0000003C
delL                              0000003E
delM                              0000003D
delay5ms                          000005EB
detect_candle                     00000192
display_log                       00000295
display_state                     000003CD
end_check_fail                    00000485
end_isr                           0000065A
end_operation                     000001B2
export                            000004AE
huns                              00000040
i2c_common_setup                  00000000
information                       00000344
init                              000000E7
isr                               00000651
keytemp                           00000037
logs                              00000216
motor_count                       00000048
motor_del                         000005F4
motor_del_0                       000005F8
movff                             
movlf                             
newline                           
no_huns                           0000049A
no_log                            000002AD
no_tens                           000004A0
nohuns                            00000518
notens                            00000522
now_FF                            00000453
num_FF                            00000036
num_LF                            00000035
num_tot                           00000034
ones                              00000042
op_time                           00000033
op_time_save                      0000003F
photocount                        00000046
photoval                          00000047
poll                              0000020E
polling                           0000022C
printASC                          
printBCD                          
printchar                         
read_EEPROM                       00000298
read_rtc                          00000000
MPASM 5.55                          MAIN.ASM   3-20-2014  20:38:07         PAGE 57


SYMBOL TABLE
  LABEL                             VALUE 

rotate                            0000018B
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
shiftlogs                         000001BF
shiftlogs_0                       000001C3
spacebar                          
start                             00000174
start_date1                       0000002E
start_date10                      0000002D
start_hour1                       00000030
start_hour10                      0000002F
start_min1                        00000032
start_min10                       00000031
start_month1                      0000002C
start_month10                     0000002B
start_rot                         00000328
start_year1                       0000002A
start_year10                      00000029
state1                            00000020
state2                            00000021
state3                            00000022
state4                            00000023
state5                            00000024
state6                            00000025
state7                            00000026
state8                            00000027
state9                            00000028
statetemp                         00000038
status_isr                        0000007A
summary                           0000040A
tens                              00000041
test_candle                       00000197
threshold1                        D'7'
threshold2                        D'69'
time                              00000486
w_isr                             00000079
waiting                           0000010C
wanna_export                      00000302
writeASC                          
writeBCD                          
write_log1                        000001E5
write_log1_0                      000001EC
write_rtc                         00000000
writechar                         
writetoPC                         0000064B
yes_log                           000002B9

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    49 reported,     0 suppressed

