MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013     #define threshold1  D'15'
                      00014     #define threshold2  D'65'
                      00015     #define IRLIGHT    PORTA, 0
                      00016     #define IRDATA     PORTA, 1
                      00017     #define PHOTODATA  PORTA, 2
                      00018    ; note: check analog v digital!
                      00019 
                      00020 
                      00021 ;***************************************
                      00022 ; VARIABLES
                      00023 ;***************************************
                      00024 
                      00025 ; Also see i2c_commmon.asm -> has stuff at 0x71-0x78 on for RTC!
                      00026 
                      00027     cblock      0x20
                      00028     ; Important information (will be displayed)
  00000020            00029         op_time    ;in seconds    
  00000021            00030         state1     ;where   0 = none      1 = pass
  00000022            00031         state2     ;        2 = led fail  3 = flicker fail
  00000023            00032         state3
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000024            00033         state4
  00000025            00034         state5
  00000026            00035         state6
  00000027            00036         state7
  00000028            00037         state8
  00000029            00038         state9
  0000002A            00039         num_LF      ;BCD
  0000002B            00040         num_FF      ;BCD
  0000002C            00041         num_tot     ;BCD
  0000002D            00042         start_year10    ;starting time (for log)
  0000002E            00043         start_year1     ; note: these are all ALREADY ASCII!
  0000002F            00044         start_month10
  00000030            00045         start_month1
  00000031            00046         start_date10
  00000032            00047         start_date1
  00000033            00048         start_hour10
  00000034            00049         start_hour1
  00000035            00050         start_min10
  00000036            00051         start_min1
                      00052 ; For general program / interface: temps, counters, etc.
  00000037            00053         keytemp         ; for data display mode
  00000038            00054         statetemp
  00000039            00055                 Table_Counter   ; for LCD stuff
  0000003A            00056                 com
  0000003B            00057                 dat
  0000003C            00058         del1            ; for delay 5ms delay routine
  0000003D            00059         del2
  0000003E            00060         hdelH          ;for delay 0.5s routine
  0000003F            00061         hdelM
  00000040            00062         hdelL
  00000041            00063         op_time_save    ;for operation time
  00000042            00064         huns
  00000043            00065         tens
  00000044            00066         ones
  00000045            00067         bignumcount
  00000046            00068         count38         ;for isr
                      00069 ; For machine program: temps, counters, etc.
  00000047            00070         candle_index
  00000048            00071         photocount
  00000049            00072         photoval
                      00073 
                      00074     endc
                      00075 
                      00076     cblock  0x79        ;ISR stuff that needs to be in all registers
  00000079            00077         w_isr           
  0000007A            00078         status_isr
                      00079         endc
                      00080 
                      00081 
                      00082 ;***************************************
                      00083 ; MACROS
                      00084 ;***************************************
                      00085 
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086 ; Display a msg on LCD
                      00087 Display macro   Message
                      00088                 local   loop_disp
                      00089                 local   end_disp
                      00090                 clrf    Table_Counter
                      00091                 clrw
                      00092 loop_disp
                      00093         movf    Table_Counter,W
                      00094                 call    Message
                      00095                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00096                 btfsc   STATUS,Z
                      00097                 goto    end_disp
                      00098                 call    WR_DATA
                      00099                 incf    Table_Counter,F
                      00100                 goto    loop_disp
                      00101 end_disp
                      00102                 endm
                      00103 
                      00104 ;Move cursor right one position
                      00105 spacebar    macro
                      00106             movlw   B'00010100'
                      00107             call    WR_INS
                      00108             endm
                      00109 
                      00110 ;Shortcuts for moving literals / registers
                      00111 movlf   macro   l, f
                      00112         movlw   l
                      00113         movwf   f
                      00114         endm
                      00115 
                      00116 movff   macro   source, dest
                      00117         movf    source, W
                      00118         movwf   dest
                      00119         endm
                      00120 
                      00121 ; Display a BCD on LCD as decimal
                      00122 writenum    macro   number          ; literal
                      00123             movlw    number
                      00124             addlw   B'00110000'
                      00125             movwf   dat
                      00126             call WR_DATA
                      00127             endm
                      00128 
                      00129 writenum_reg    macro   reg         ; from a register containing BCD
                      00130             movf    reg,W
                      00131             addlw   B'00110000'
                      00132             movwf   dat
                      00133             call WR_DATA
                      00134             endm
                      00135 
                      00136 ;Write to PC (hyperterminal)
                      00137 printchar   macro   char            ;direct ASCII code literal (or in "")
                      00138             movlw   char
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139             call    writetoPC
                      00140             endm
                      00141 
                      00142 printASC    macro   reg            ;ASCII code inside a register
                      00143             banksel reg
                      00144             movf    reg,W
                      00145             call    writetoPC
                      00146             endm
                      00147 
                      00148 printBCD    macro   BCD            ;BCD inside a register
                      00149             banksel BCD
                      00150             movf    BCD, W
                      00151             addlw   0x30
                      00152             call    writetoPC
                      00153             endm
                      00154 
                      00155 
                      00156 newline     macro
                      00157             printchar   0xA ;changes line
                      00158             printchar   0xD ;goes back to left
                      00159             endm
                      00160 ;***************************************
                      00161 ; VECTORS
                      00162 ;***************************************
                      00163 
                      00164     ORG       0x000
0000   2???           00165          goto      init
                      00166     ORG       0x004
0004   2???           00167         goto    isr
                      00168 
                      00169 
                      00170 ;***************************************
                      00171 ; TABLES (MESSAGES)
                      00172 ;***************************************
0005                  00173 Standby_Msg
0005   0782           00174                 addwf   PCL,F
0006   3453 3454 3441 00175                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00176 Start_Msg
000E   0782           00177         addwf   PCL,F
000F   3449 346E 3473 00178         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00179 End_Msg
0020   0782           00180         addwf   PCL,F
0021   3443 346F 346D 00181         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00182 Time_Msg
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   0782           00183                 addwf   PCL,F
002B   344F 3470 3465 00184                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
003B                  00185 Seconds
003B   0782           00186         addwf   PCL,F
003C   3420 3473 3465 00187         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00188 Not_present
0045   0782           00189         addwf   PCL,F
0046   343A 3420 344E 00190         dt      ": Not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00191 Pass
0054   0782           00192                 addwf   PCL,F
0055   343A 3420 3450 00193                 dt              ": Pass",0
       3461 3473 3473 
       3400 
005C                  00194 LED_fail
005C   0782           00195                 addwf   PCL,F
005D   343A 3420 344C 00196                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0068                  00197 Flick_fail
0068   0782           00198                 addwf   PCL,F
0069   343A 3420 3446 00199                 dt              ": Flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00200 Total_Msg
0078   0782           00201         addwf   PCL,F
0079   3454 346F 3474 00202         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00203 LF
0089   0782           00204         addwf   PCL,F
008A   344C 3446 343A 00205         dt      "LF: ",0
       3420 3400 
008F                  00206 FF
008F   0782           00207         addwf   PCL,F
0090   3446 3446 343A 00208         dt      "FF: ",0
       3420 3400 
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095                  00209 None
0095   0782           00210         addwf   PCL,F
0096   343C 346E 346F 00211         dt      "<none>", 0
       346E 3465 343E 
       3400 
009D                  00212 Logs_Msg1
009D   0782           00213         addwf   PCL,F
009E   3431 342D 3434 00214         dt      "1-4 to see log",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3400 
00AD                  00215 Logs_Msg2
00AD   0782           00216         addwf   PCL,F
00AE   3453 3454 3441 00217         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
       3400 
                      00218 
                      00219 ;***************************************
                      00220 ; MAIN PROGRAM
                      00221 ;***************************************
                      00222 
00BE                  00223 init
                      00224         movlf     b'10000000', INTCON   ;interrupts enabled
00BE   3080               M         movlw   b'10000000'
00BF   008B               M         movwf   INTCON
                      00225 
00C0   1683           00226         bsf       STATUS,RP0            ; select bank 1
                      00227         movlf     b'000110', TRISA      ; PortA *may* be used for Photo and IR stuff
00C1   3006               M         movlw   b'000110'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C2   0085               M         movwf   TRISA
                      00228         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs (rest unused; RB0 may be 
                            external interrupt)
00C3   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C4   0086               M         movwf   TRISB
                      00229                                         ; note can disable keypad to free up these ports during operatio
                            n if necessary.
                      00230         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC; [7:6] is RS-232; rest unused
00C5   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C6   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C7   0188           00231         clrf      TRISD                 ; PortD[2:7] is LCD output (rest unused)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C8   0189           00232         clrf      TRISE                 ; PortE is output- *may* be used for motor (only [2:0] tho!)
                      00233 
00C9   1283           00234         bcf       STATUS,RP0     ; select bank 0
00CA   0185           00235         clrf      PORTA
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CB   0186           00236         clrf      PORTB
00CC   0187           00237         clrf      PORTC
00CD   0188           00238         clrf      PORTD
00CE   0189           00239         clrf      PORTE
                      00240 
00CF   2???           00241         call      i2c_common_setup  ;Set up I2C for communication
00D0   2???           00242         call      InitLCD           ;Initialize the LCD
00D1   2???           00243         call      InitUSART         ;Set up USART for RS232
                      00244 
00D2   1283           00245         bcf       STATUS,RP0          ; bank0
                      00246                 
                      00247         Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
00D3   01B9               M                 clrf    Table_Counter
00D4   0103               M                 clrw
00D5                      M loop_disp
00D5   0839               M         movf    Table_Counter,W
00D6   2???               M                 call    Standby_Msg
00D7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00D8   1903               M                 btfsc   STATUS,Z
00D9   2???               M                 goto    end_disp
00DA   2???               M                 call    WR_DATA
00DB   0AB9               M                 incf    Table_Counter,F
00DC   2???               M                 goto    loop_disp
00DD                      M end_disp
00DD   2???           00248         call    Switch_Lines
                      00249       
                      00250  ;--------------------------------------------------
                      00251  ;      STANDBY MODE
                      00252 
00DE                  00253 waiting
                      00254         ; Display date and time. 
                      00255         ; Also save starting time for log (will stop updating once we start)
00DE   3032           00256         movlw   "2"                             ;First line shows 20**/**/**
00DF   2???           00257                 call    WR_DATA
00E0   3030           00258                 movlw   "0"
00E1   2???           00259                 call    WR_DATA
                      00260                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00E2   3006               M         movlw   0x06
00E3   1283 1303          M         banksel 0x73
00E5   00F3               M         movwf   0x73
00E6   2???               M         call    read_rtc
00E7   1283 1303          M         banksel 0x75
00E9   0875               M         movf    0x75,w
00EA   2???               M         call    rtc_convert   
00EB   0877           00261                 movf    0x77,W
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EC   00AD           00262         movwf    start_year10    ;Save starting year dig10
00ED   2???           00263                 call    WR_DATA
00EE   0878           00264                 movf    0x78,W
00EF   00AE           00265         movwf    start_year1    ;Save starting year dig1
00F0   2???           00266                 call    WR_DATA
00F1   302F           00267                 movlw   "/"
00F2   2???           00268                 call    WR_DATA
                      00269                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00F3   3005               M         movlw   0x05
00F4   1283 1303          M         banksel 0x73
00F6   00F3               M         movwf   0x73
00F7   2???               M         call    read_rtc
00F8   1283 1303          M         banksel 0x75
00FA   0875               M         movf    0x75,w
00FB   2???               M         call    rtc_convert   
00FC   0877           00270                 movf    0x77,W
00FD   00AF           00271         movwf    start_month10    ;Save starting month dig10
00FE   2???           00272                 call    WR_DATA
00FF   0878           00273                 movf    0x78,W
0100   00B0           00274         movwf    start_month1    ;Save starting month dig1
0101   2???           00275                 call    WR_DATA
0102   302F           00276                 movlw   "/"
0103   2???           00277                 call    WR_DATA
                      00278                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0104   3004               M         movlw   0x04
0105   1283 1303          M         banksel 0x73
0107   00F3               M         movwf   0x73
0108   2???               M         call    read_rtc
0109   1283 1303          M         banksel 0x75
010B   0875               M         movf    0x75,w
010C   2???               M         call    rtc_convert   
010D   0877           00279                 movf    0x77,W
010E   00B1           00280         movwf    start_date10    ;Save starting date dig10
010F   2???           00281                 call    WR_DATA
0110   0878           00282                 movf    0x78,W
0111   00B2           00283         movwf    start_date1    ;Save starting date dig1
0112   2???           00284                 call    WR_DATA
                      00285                 spacebar
0113   3014               M             movlw   B'00010100'
0114   2???               M             call    WR_INS
                      00286                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0115   3002               M         movlw   0x02
0116   1283 1303          M         banksel 0x73
0118   00F3               M         movwf   0x73
0119   2???               M         call    read_rtc
011A   1283 1303          M         banksel 0x75
011C   0875               M         movf    0x75,w
011D   2???               M         call    rtc_convert   
011E   0877           00287                 movf    0x77,W
011F   00B3           00288         movwf    start_hour10    ;Save starting hour dig10
0120   2???           00289                 call    WR_DATA
0121   0878           00290                 movf    0x78,W
0122   00B4           00291         movwf    start_hour1    ;Save starting hour dig1
0123   2???           00292                 call    WR_DATA
0124   303A           00293                 movlw   ":"
0125   2???           00294                 call    WR_DATA
                      00295                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0126   3001               M         movlw   0x01
0127   1283 1303          M         banksel 0x73
0129   00F3               M         movwf   0x73
012A   2???               M         call    read_rtc
012B   1283 1303          M         banksel 0x75
012D   0875               M         movf    0x75,w
012E   2???               M         call    rtc_convert   
012F   0877           00296                 movf    0x77,W
0130   00B5           00297         movwf    start_min10    ;Save starting min dig10
0131   2???           00298                 call    WR_DATA
0132   0878           00299                 movf    0x78,W
0133   00B6           00300         movwf    start_min1    ;Save starting min dig1
0134   2???           00301                 call    WR_DATA
                      00302                       
                      00303         ; Move cursor back to start of second line
                      00304         ; We will update displayed time but not the word "STANDBY"
0135   30C0           00305         movlw   B'11000000'
0136   2???           00306         call    WR_INS
                      00307 
                      00308         ;Poll to start (will have to hold key for ~0.5sec)
0137   1C86           00309          btfss          PORTB,1     ;Wait until data is available from the keypad
0138   2???           00310          goto           waiting
                      00311 
0139   0E06           00312          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
013A   390F           00313          andlw          0x0F
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013B   00B7           00314          movwf      keytemp
013C   3A0C           00315          xorlw      0xC         ;Will be all zeros if its "START"
013D   1903           00316          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
013E   2???           00317          goto       start
                      00318 
013F   0837           00319          movf       keytemp,W     ;Go to log interface
0140   3A0E           00320          xorlw      0xE
0141   1903           00321          btfsc      STATUS,Z
0142   2???           00322          goto       logs
                      00323 
0143   1886           00324          btfsc          PORTB,1     ;Wait until key is released
0144   2???           00325          goto           $-1
0145   2???           00326          goto       waiting
                      00327 
                      00328 ;-----------------------------------------------------------
                      00329 ;       ACTUAL OPERATION (I'm just adding values manually now)
                      00330 
0146                  00331 start
                      00332         ;Start the timer
                      00333         movlf       D'38', count38
0146   3026               M         movlw   D'38'
0147   00C6               M         movwf   count38
0148   01A0           00334         clrf        op_time
0149   168B           00335         bsf         INTCON, T0IE ;enable Timer0 interrupt
014A   0181           00336         clrf        TMR0
014B   1683 1303      00337         banksel     OPTION_REG
                      00338         movlf       B'11000111', OPTION_REG ; 1:256 prescaler
014D   30C7               M         movlw   B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
014E   0081               M         movwf   OPTION_REG
014F   1283           00339         bcf        STATUS,RP0     ; back to bank 0
                      00340 
                      00341         ;Display starting message
0150   2???           00342         call        Clear_Display
                      00343         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0151   01B9               M                 clrf    Table_Counter
0152   0103               M                 clrw
0153                      M loop_disp
0153   0839               M         movf    Table_Counter,W
0154   2???               M                 call    Start_Msg
0155   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0156   1903               M                 btfsc   STATUS,Z
0157   2???               M                 goto    end_disp
0158   2???               M                 call    WR_DATA
0159   0AB9               M                 incf    Table_Counter,F
015A   2???               M                 goto    loop_disp
015B                      M end_disp
                      00344 
                      00345 
                      00346 ;****FAKE CODE ******************************************
                      00347         ; Just delaying
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015B   2???           00348         call        HalfS
015C   2???           00349         call        HalfS
                      00350 
                      00351        ; Putting values in manually.
                      00352         movlf     B'01', state1     ;pass
015D   3001               M         movlw   B'01'
015E   00A1               M         movwf   state1
                      00353         movlf     B'01', state2     ;pass
015F   3001               M         movlw   B'01'
0160   00A2               M         movwf   state2
                      00354         movlf     B'10', state3     ;LED fail
0161   3002               M         movlw   B'10'
0162   00A3               M         movwf   state3
                      00355         movlf     B'10', state4     ;LED fail
0163   3002               M         movlw   B'10'
0164   00A4               M         movwf   state4
                      00356         movlf     B'01', state5     ;pass
0165   3001               M         movlw   B'01'
0166   00A5               M         movwf   state5
                      00357         movlf     B'00', state6     ;not present
0167   3000               M         movlw   B'00'
0168   00A6               M         movwf   state6
                      00358         movlf     B'01', state7     ;pass
0169   3001               M         movlw   B'01'
016A   00A7               M         movwf   state7
                      00359         movlf     B'11', state8     ;flicker fail
016B   3003               M         movlw   B'11'
016C   00A8               M         movwf   state8
                      00360         movlf     B'01', state9     ;pass
016D   3001               M         movlw   B'01'
016E   00A9               M         movwf   state9
                      00361         movlf     D'2', num_LF
016F   3002               M         movlw   D'2'
0170   00AA               M         movwf   num_LF
                      00362         movlf     D'1', num_FF
0171   3001               M         movlw   D'1'
0172   00AB               M         movwf   num_FF
                      00363         movlf     D'8', num_tot
0173   3008               M         movlw   D'8'
0174   00AC               M         movwf   num_tot
                      00364 ;*******************************************************
                      00365 
                      00366 ; choose fake or real!
                      00367 
                      00368 ;;****REAL CODE ******************************************
                      00369 ;    movlf    D'0', candle_index
                      00370 ;    bcf        STATUS, IRP
                      00371 ;    movlf   0x20, FSR       ;pointing at right before state1
                      00372 ;    bsf     IRLIGHT     ;turn on IR
                      00373 ;
                      00374 ;rotate
                      00375 ;       movlw   0x9                 ; stop operation after 9 rotations
                      00376 ;    subwf   candle_index,W      ; candle_index is # you've already tested before rotating
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00377 ;    btfsc   STATUS,Z
                      00378 ;       goto    end_operation
                      00379 ;       call    ROTATEMOTOR          ; else rotate motor and n++
                      00380 ;       incf    candle_index, F
                      00381 ;    incf    FSR, F
                      00382 ;
                      00383 ;detect_candle
                      00384 ;       btfss   IRDATA      ;IRDATA is 1 if there's no light, 0 if there's a light
                      00385 ;       goto    test_candle     ;yes candle, go test it
                      00386 ;    movlf   D'0', INDF      ;no candle, state = not present
                      00387 ;       goto rotate                 ;and go try next
                      00388 ;
                      00389 ;test_candle
                      00390 ;       incf    num_tot, F                      ; keeping track of total number of candles
                      00391 ;       ; Assume candle is already turned on
                      00392 ;       clrf    photocount
                      00393 ;       call    HalfS       ; delay 2 sec or whatever
                      00394 ;   call    HalfS
                      00395 ;   call    HalfS
                      00396 ;   call    HalfS
                      00397 ;       movff   photocount, photoval        ;to ensure it wont change again
                      00398 ;check_threshold1
                      00399 ;    movlw    threshold1
                      00400 ;    subwf   photoval, W
                      00401 ;    btfsc   STATUS, C       ;if  photoval < threshold 1, C = 0
                      00402 ;    goto check_threshold2
                      00403 ;    movlf   D'2', INDF      ; < threshold 1 means led fail
                      00404 ;        incf    num_LF, F
                      00405 ;    goto    end_test_candle
                      00406 ;check_threshold2
                      00407 ;    movlw    threshold2
                      00408 ;    subwf   photoval, W
                      00409 ;    btfsc   STATUS, C       ;if  photoval < threshold 2, C = 0
                      00410 ;    goto aboveboth
                      00411 ;    movlf   D'1', INDF      ; < threshold 2 means pass
                      00412 ;    goto    end_test_candle
                      00413 ;aboveboth
                      00414 ;   movlf   D'3', INDF       ;else flicker fail
                      00415 ;   incf    num_FF, F
                      00416 ;end_test_candle
                      00417 ;       call    TURNOFF     ;pulse solenoid to turn off candle
                      00418 ;    goto    rotate
                      00419 ;
                      00420 ;
                      00421 ;ROTATEMOTOR ;rotates stepper motor 40deg
                      00422 ;    return
                      00423 ;
                      00424 ;TURNOFF ;pulses solenoid to turn off candle
                      00425 ;    return
                      00426 ; ;****************************************************
                      00427 
0175                  00428 end_operation
                      00429         ;Turn off the IR
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00430         ;bcf     IRLIGHT
                      00431 
                      00432         ; Stop the timer
0175   128B           00433          bcf         INTCON, T0IE  ;disable Timer0 interrupt
                      00434 
                      00435 
                      00436         ;GOOD PLACE TO SAVE INFO FOR LOGS
                      00437 
                      00438 
                      00439         ; Display ending messages
0176   2???           00440         call       Clear_Display
                      00441         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0177   01B9               M                 clrf    Table_Counter
0178   0103               M                 clrw
0179                      M loop_disp
0179   0839               M         movf    Table_Counter,W
017A   2???               M                 call    End_Msg
017B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
017C   1903               M                 btfsc   STATUS,Z
017D   2???               M                 goto    end_disp
017E   2???               M                 call    WR_DATA
017F   0AB9               M                 incf    Table_Counter,F
0180   2???               M                 goto    loop_disp
0181                      M end_disp
0181   2???           00442         call       HalfS
0182   2???           00443         call       time             ; "Operation time: X sec"
0183   2???           00444         call       HalfS
0184   2???           00445         call       HalfS
0185   2???           00446         call       summary          ; "Total candles: X. Defective: Y"
0186   2???           00447         call       HalfS
0187   2???           00448         call       HalfS
0188   2???           00449         call       defective        ; "FF: a b c. LF: d e f"
                      00450 ;-----------------------------------------------------------------------
                      00451 ; Data display interface
                      00452 
0189   1C86           00453 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
018A   2???           00454          goto           $-1
                      00455 
018B   0E06           00456          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018C   390F           00457          andlw          0x0F
018D   2???           00458          call       information ;Do the right thing
                      00459 
018E   1886           00460          btfsc          PORTB,1     ;Wait until key is released
018F   2???           00461          goto           $-1
0190   2???           00462          goto       poll
                      00463 
                      00464 
                      00465 ;-------------------------------------------------------------------------
                      00466 ; LOGS INTERFACE            (DONT ACTUALLY HAVE LOGS YET!)
                      00467 ; Eventually this will show logs
                      00468 ; Right now it just displays random crap
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00469 ; Access from STANDBY and return to STANDBY
                      00470 
0191                  00471 logs
0191   2???           00472     call    Clear_Display
                      00473     Display Logs_Msg1
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0192   01B9               M                 clrf    Table_Counter
0193   0103               M                 clrw
0194                      M loop_disp
0194   0839               M         movf    Table_Counter,W
0195   2???               M                 call    Logs_Msg1
0196   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0197   1903               M                 btfsc   STATUS,Z
0198   2???               M                 goto    end_disp
0199   2???               M                 call    WR_DATA
019A   0AB9               M                 incf    Table_Counter,F
019B   2???               M                 goto    loop_disp
019C                      M end_disp
019C   2???           00474     call    Switch_Lines
                      00475     Display Logs_Msg2
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
019D   01B9               M                 clrf    Table_Counter
019E   0103               M                 clrw
019F                      M loop_disp
019F   0839               M         movf    Table_Counter,W
01A0   2???               M                 call    Logs_Msg2
01A1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01A2   1903               M                 btfsc   STATUS,Z
01A3   2???               M                 goto    end_disp
01A4   2???               M                 call    WR_DATA
01A5   0AB9               M                 incf    Table_Counter,F
01A6   2???               M                 goto    loop_disp
01A7                      M end_disp
                      00476 
01A7                  00477 polling
01A7   1C86           00478     btfss               PORTB,1     ;Wait until data is available from the keypad
01A8   2???           00479     goto                $-1
                      00480 
01A9   0E06           00481     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
01AA   390F           00482     andlw               0x0F
01AB   00B7           00483     movwf       keytemp     ; Save which key was pressed
                      00484 
01AC                  00485 check_log1
01AC   3A00           00486     xorlw   0x0         ;will be all zeros if its 1
01AD   1D03           00487     btfss   STATUS,Z    ;and Z will be high, so skip
01AE   2???           00488     goto    check_log2
01AF   2???           00489     call    Clear_Display
                      00490     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01B0   01B9               M                 clrf    Table_Counter
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B1   0103               M                 clrw
01B2                      M loop_disp
01B2   0839               M         movf    Table_Counter,W
01B3   2???               M                 call    None
01B4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01B5   1903               M                 btfsc   STATUS,Z
01B6   2???               M                 goto    end_disp
01B7   2???               M                 call    WR_DATA
01B8   0AB9               M                 incf    Table_Counter,F
01B9   2???               M                 goto    loop_disp
01BA                      M end_disp
01BA   2???           00491     call    HalfS
01BB   2???           00492     goto    logs
                      00493 
01BC                  00494 check_log2
01BC   0837           00495     movf    keytemp, W
01BD   3A01           00496     xorlw   0x1
01BE   1D03           00497     btfss   STATUS,Z
01BF   2???           00498     goto    check_log3
01C0   2???           00499     call    Clear_Display
                      00500     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01C1   01B9               M                 clrf    Table_Counter
01C2   0103               M                 clrw
01C3                      M loop_disp
01C3   0839               M         movf    Table_Counter,W
01C4   2???               M                 call    None
01C5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C6   1903               M                 btfsc   STATUS,Z
01C7   2???               M                 goto    end_disp
01C8   2???               M                 call    WR_DATA
01C9   0AB9               M                 incf    Table_Counter,F
01CA   2???               M                 goto    loop_disp
01CB                      M end_disp
01CB   2???           00501     call    HalfS
01CC   2???           00502     goto    logs
                      00503 
01CD                  00504 check_log3
01CD   0837           00505     movf    keytemp, W
01CE   3A02           00506     xorlw   0x2
01CF   1D03           00507     btfss   STATUS,Z
01D0   2???           00508     goto    check_log4
01D1   2???           00509     call    Clear_Display
                      00510     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01D2   01B9               M                 clrf    Table_Counter
01D3   0103               M                 clrw
01D4                      M loop_disp
01D4   0839               M         movf    Table_Counter,W
01D5   2???               M                 call    None
01D6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01D7   1903               M                 btfsc   STATUS,Z
01D8   2???               M                 goto    end_disp
01D9   2???               M                 call    WR_DATA
01DA   0AB9               M                 incf    Table_Counter,F
01DB   2???               M                 goto    loop_disp
01DC                      M end_disp
01DC   2???           00511     call    HalfS
01DD   2???           00512     goto    logs
                      00513 
01DE                  00514 check_log4
01DE   0837           00515     movf    keytemp, W
01DF   3A04           00516     xorlw   0x4
01E0   1D03           00517     btfss   STATUS,Z
01E1   2???           00518     goto    check_done
01E2   2???           00519     call    Clear_Display
                      00520     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01E3   01B9               M                 clrf    Table_Counter
01E4   0103               M                 clrw
01E5                      M loop_disp
01E5   0839               M         movf    Table_Counter,W
01E6   2???               M                 call    None
01E7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E8   1903               M                 btfsc   STATUS,Z
01E9   2???               M                 goto    end_disp
01EA   2???               M                 call    WR_DATA
01EB   0AB9               M                 incf    Table_Counter,F
01EC   2???               M                 goto    loop_disp
01ED                      M end_disp
01ED   2???           00521     call    HalfS
01EE   2???           00522     goto    logs
                      00523 
01EF                  00524 check_done
01EF   0837           00525     movf    keytemp, W
01F0   3A0D           00526     xorlw   0xD
01F1   1D03           00527     btfss   STATUS,Z
01F2   2???           00528     goto    badkey
01F3   2???           00529     call    Clear_Display
                      00530     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01F4   01B9               M                 clrf    Table_Counter
01F5   0103               M                 clrw
01F6                      M loop_disp
01F6   0839               M         movf    Table_Counter,W
01F7   2???               M                 call    Standby_Msg
01F8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F9   1903               M                 btfsc   STATUS,Z
01FA   2???               M                 goto    end_disp
01FB   2???               M                 call    WR_DATA
01FC   0AB9               M                 incf    Table_Counter,F
01FD   2???               M                 goto    loop_disp
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FE                      M end_disp
01FE   2???           00531     call    Switch_Lines
01FF   2???           00532     goto    waiting
                      00533 
0200                  00534 badkey
0200   1886           00535     btfsc               PORTB,1     ;Wait until key is released
0201   2???           00536     goto                $-1
0202   2???           00537     goto        polling
                      00538   
                      00539 ; END OF MAIN PROGRAM
                      00540 ;------------------------------------------------------------
                      00541 
                      00542 
                      00543 ;***************************************
                      00544 ; DATA DISPLAY ROUTINE
                      00545 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00546 ; Determines which key it was and displays appropriate info / branch
                      00547 ;***************************************
                      00548 
0203                  00549 information
0203   00B7           00550     movwf   keytemp             ; Save which key was pressed
                      00551 
0204                  00552 check_1
0204   3A00           00553     xorlw   0x0         ;will be all zeros if its 1
0205   1D03           00554     btfss   STATUS,Z    ;and Z will be high, so skip
0206   2???           00555     goto    check_2
0207   2???           00556     call    Clear_Display
                      00557     writenum 0x1
0208   3001               M             movlw    0x1
0209   3E30               M             addlw   B'00110000'
020A   00BB               M             movwf   dat
020B   2???               M             call WR_DATA
020C   0821           00558     movf    state1, W
020D   2???           00559     call    display_state
020E   0008           00560     return
                      00561 
020F                  00562 check_2
020F   0837           00563     movf    keytemp, W
0210   3A01           00564     xorlw   0x1
0211   1D03           00565     btfss   STATUS,Z
0212   2???           00566     goto    check_3
0213   2???           00567     call    Clear_Display
                      00568     writenum 0x2
0214   3002               M             movlw    0x2
0215   3E30               M             addlw   B'00110000'
0216   00BB               M             movwf   dat
0217   2???               M             call WR_DATA
0218   0822           00569     movf    state2, W
0219   2???           00570     call    display_state
021A   0008           00571     return
                      00572 
021B                  00573 check_3
021B   0837           00574     movf    keytemp, W
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021C   3A02           00575     xorlw   0x2
021D   1D03           00576     btfss   STATUS,Z
021E   2???           00577     goto    check_4
021F   2???           00578     call    Clear_Display
                      00579     writenum 0x3
0220   3003               M             movlw    0x3
0221   3E30               M             addlw   B'00110000'
0222   00BB               M             movwf   dat
0223   2???               M             call WR_DATA
0224   0823           00580     movf    state3, W
0225   2???           00581     call    display_state
0226   0008           00582     return
                      00583 
0227                  00584 check_4
0227   0837           00585     movf    keytemp, W
0228   3A04           00586     xorlw   0x4
0229   1D03           00587     btfss   STATUS,Z
022A   2???           00588     goto    check_5
022B   2???           00589     call    Clear_Display
                      00590     writenum 0x4
022C   3004               M             movlw    0x4
022D   3E30               M             addlw   B'00110000'
022E   00BB               M             movwf   dat
022F   2???               M             call WR_DATA
0230   0824           00591     movf    state4, W
0231   2???           00592     call    display_state
0232   0008           00593     return
                      00594 
0233                  00595 check_5
0233   0837           00596     movf    keytemp, W
0234   3A05           00597     xorlw   0x5
0235   1D03           00598     btfss   STATUS,Z
0236   2???           00599     goto    check_6
0237   2???           00600     call    Clear_Display
                      00601     writenum 0x5
0238   3005               M             movlw    0x5
0239   3E30               M             addlw   B'00110000'
023A   00BB               M             movwf   dat
023B   2???               M             call WR_DATA
023C   0825           00602     movf    state5, W
023D   2???           00603     call    display_state
023E   0008           00604     return
                      00605 
023F                  00606 check_6
023F   0837           00607     movf    keytemp, W
0240   3A06           00608     xorlw   0x6
0241   1D03           00609     btfss   STATUS,Z
0242   2???           00610     goto    check_7
0243   2???           00611     call    Clear_Display
                      00612     writenum 0x6
0244   3006               M             movlw    0x6
0245   3E30               M             addlw   B'00110000'
0246   00BB               M             movwf   dat
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0247   2???               M             call WR_DATA
0248   0826           00613     movf    state6, W
0249   2???           00614     call    display_state
024A   0008           00615     return
                      00616 
024B                  00617 check_7
024B   0837           00618     movf    keytemp, W
024C   3A08           00619     xorlw   0x8
024D   1D03           00620     btfss   STATUS,Z
024E   2???           00621     goto    check_8
024F   2???           00622     call    Clear_Display
                      00623     writenum 0x7
0250   3007               M             movlw    0x7
0251   3E30               M             addlw   B'00110000'
0252   00BB               M             movwf   dat
0253   2???               M             call WR_DATA
0254   0827           00624     movf    state7, W
0255   2???           00625     call    display_state
0256   0008           00626     return
                      00627 
0257                  00628 check_8
0257   0837           00629     movf    keytemp, W
0258   3A09           00630     xorlw   0x9
0259   1D03           00631     btfss   STATUS,Z
025A   2???           00632     goto    check_9
025B   2???           00633     call    Clear_Display
                      00634     writenum 0x8
025C   3008               M             movlw    0x8
025D   3E30               M             addlw   B'00110000'
025E   00BB               M             movwf   dat
025F   2???               M             call WR_DATA
0260   0828           00635     movf    state8, W
0261   2???           00636     call    display_state
0262   0008           00637     return
                      00638 
0263                  00639 check_9
0263   0837           00640     movf    keytemp, W
0264   3A0A           00641     xorlw   0xA
0265   1D03           00642     btfss   STATUS,Z
0266   2???           00643     goto    check_summary
0267   2???           00644     call    Clear_Display
                      00645     writenum 0x9
0268   3009               M             movlw    0x9
0269   3E30               M             addlw   B'00110000'
026A   00BB               M             movwf   dat
026B   2???               M             call WR_DATA
026C   0829           00646     movf    state9, W
026D   2???           00647     call    display_state
026E   0008           00648     return
                      00649 
026F                  00650 check_summary
026F   0837           00651     movf    keytemp, W
0270   3A03           00652     xorlw   0x3
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0271   1D03           00653     btfss   STATUS,Z
0272   2???           00654     goto    check_defective
0273   2???           00655     call    summary
0274   0008           00656     return
                      00657 
0275                  00658 check_defective
0275   0837           00659     movf    keytemp, W
0276   3A07           00660     xorlw   0x7
0277   1D03           00661     btfss   STATUS,Z
0278   2???           00662     goto    check_time
0279   2???           00663     call    defective
027A   0008           00664     return
                      00665 
027B                  00666 check_time
027B   0837           00667     movf    keytemp, W
027C   3A0B           00668     xorlw   0xB
027D   1D03           00669     btfss   STATUS,Z
027E   2???           00670     goto    check_export
027F   2???           00671     call    time
0280   0008           00672     return
                      00673 
0281                  00674 check_export               
0281   0837           00675     movf    keytemp, W
0282   3A0F           00676     xorlw   0xF
0283   1D03           00677     btfss   STATUS,Z
0284   2???           00678     goto    check_standby
0285   2???           00679     call    export
0286   0008           00680     return
                      00681 
0287                  00682 check_standby
0287   0837           00683     movf    keytemp, W
0288   3A0D           00684     xorlw   0xD
0289   1D03           00685     btfss   STATUS,Z
028A   2???           00686     goto    check_start
028B   2???           00687     call    Clear_Display
                      00688     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
028C   01B9               M                 clrf    Table_Counter
028D   0103               M                 clrw
028E                      M loop_disp
028E   0839               M         movf    Table_Counter,W
028F   2???               M                 call    Standby_Msg
0290   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0291   1903               M                 btfsc   STATUS,Z
0292   2???               M                 goto    end_disp
0293   2???               M                 call    WR_DATA
0294   0AB9               M                 incf    Table_Counter,F
0295   2???               M                 goto    loop_disp
0296                      M end_disp
0296   2???           00689     call    Switch_Lines
0297   2???           00690     goto    waiting
                      00691 
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0298                  00692 check_start
0298   0837           00693     movf    keytemp, W
0299   3A0C           00694     xorlw   0xC
029A   1D03           00695     btfss   STATUS,Z
029B   2???           00696     goto    default_key
029C   2???           00697     goto    start
                      00698 
029D                  00699 default_key         ; will never get here
029D   0008           00700     return
                      00701 
                      00702 
                      00703 ;Display state subroutine
                      00704 ;stateN is in W
029E                  00705 display_state
029E   00B8           00706     movwf  statetemp    ; save stateN
                      00707 
029F                  00708 check_none
029F   3A00           00709     xorlw   0x0
02A0   1D03           00710     btfss   STATUS,Z
02A1   2???           00711     goto    check_pass
                      00712     Display Not_present
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02A2   01B9               M                 clrf    Table_Counter
02A3   0103               M                 clrw
02A4                      M loop_disp
02A4   0839               M         movf    Table_Counter,W
02A5   2???               M                 call    Not_present
02A6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A7   1903               M                 btfsc   STATUS,Z
02A8   2???               M                 goto    end_disp
02A9   2???               M                 call    WR_DATA
02AA   0AB9               M                 incf    Table_Counter,F
02AB   2???               M                 goto    loop_disp
02AC                      M end_disp
02AC   0008           00713     return
                      00714 
02AD                  00715 check_pass
02AD   0838           00716     movf    statetemp, W
02AE   3A01           00717     xorlw   0x1
02AF   1D03           00718     btfss   STATUS,Z
02B0   2???           00719     goto    check_LED
                      00720     Display Pass
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02B1   01B9               M                 clrf    Table_Counter
02B2   0103               M                 clrw
02B3                      M loop_disp
02B3   0839               M         movf    Table_Counter,W
02B4   2???               M                 call    Pass
02B5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B6   1903               M                 btfsc   STATUS,Z
02B7   2???               M                 goto    end_disp
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02B8   2???               M                 call    WR_DATA
02B9   0AB9               M                 incf    Table_Counter,F
02BA   2???               M                 goto    loop_disp
02BB                      M end_disp
02BB   0008           00721     return
                      00722 
02BC                  00723 check_LED
02BC   0838           00724     movf    statetemp, W
02BD   3A02           00725     xorlw   0x2
02BE   1D03           00726     btfss   STATUS,Z
02BF   2???           00727     goto    check_flick
                      00728     Display LED_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02C0   01B9               M                 clrf    Table_Counter
02C1   0103               M                 clrw
02C2                      M loop_disp
02C2   0839               M         movf    Table_Counter,W
02C3   2???               M                 call    LED_fail
02C4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C5   1903               M                 btfsc   STATUS,Z
02C6   2???               M                 goto    end_disp
02C7   2???               M                 call    WR_DATA
02C8   0AB9               M                 incf    Table_Counter,F
02C9   2???               M                 goto    loop_disp
02CA                      M end_disp
02CA   0008           00729     return
                      00730 
02CB                  00731 check_flick
02CB   0838           00732     movf    statetemp, W
02CC   3A03           00733     xorlw   0x3
02CD   1D03           00734     btfss   STATUS,Z
02CE   2???           00735     goto    default_state
                      00736     Display Flick_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02CF   01B9               M                 clrf    Table_Counter
02D0   0103               M                 clrw
02D1                      M loop_disp
02D1   0839               M         movf    Table_Counter,W
02D2   2???               M                 call    Flick_fail
02D3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D4   1903               M                 btfsc   STATUS,Z
02D5   2???               M                 goto    end_disp
02D6   2???               M                 call    WR_DATA
02D7   0AB9               M                 incf    Table_Counter,F
02D8   2???               M                 goto    loop_disp
02D9                      M end_disp
02D9   0008           00737     return
                      00738 
02DA                  00739 default_state   ; should never get here
02DA   0008           00740     return
                      00741 
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00742 ; Summary Subroutine
                      00743 ; Displays total number of candles and number of defective candles
                      00744 ; Reads data from num_tot, num_LF, num_FF
02DB                  00745 summary
02DB   2???           00746     call            Clear_Display
                      00747     Display         Total_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02DC   01B9               M                 clrf    Table_Counter
02DD   0103               M                 clrw
02DE                      M loop_disp
02DE   0839               M         movf    Table_Counter,W
02DF   2???               M                 call    Total_Msg
02E0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E1   1903               M                 btfsc   STATUS,Z
02E2   2???               M                 goto    end_disp
02E3   2???               M                 call    WR_DATA
02E4   0AB9               M                 incf    Table_Counter,F
02E5   2???               M                 goto    loop_disp
02E6                      M end_disp
                      00748     writenum_reg    num_tot
02E6   082C               M             movf    num_tot,W
02E7   3E30               M             addlw   B'00110000'
02E8   00BB               M             movwf   dat
02E9   2???               M             call WR_DATA
02EA   2???           00749     call            Switch_Lines
                      00750     Display         LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02EB   01B9               M                 clrf    Table_Counter
02EC   0103               M                 clrw
02ED                      M loop_disp
02ED   0839               M         movf    Table_Counter,W
02EE   2???               M                 call    LF
02EF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F0   1903               M                 btfsc   STATUS,Z
02F1   2???               M                 goto    end_disp
02F2   2???               M                 call    WR_DATA
02F3   0AB9               M                 incf    Table_Counter,F
02F4   2???               M                 goto    loop_disp
02F5                      M end_disp
                      00751     writenum_reg    num_LF
02F5   082A               M             movf    num_LF,W
02F6   3E30               M             addlw   B'00110000'
02F7   00BB               M             movwf   dat
02F8   2???               M             call WR_DATA
                      00752     spacebar
02F9   3014               M             movlw   B'00010100'
02FA   2???               M             call    WR_INS
                      00753     spacebar
02FB   3014               M             movlw   B'00010100'
02FC   2???               M             call    WR_INS
                      00754     Display         FF
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02FD   01B9               M                 clrf    Table_Counter
02FE   0103               M                 clrw
02FF                      M loop_disp
02FF   0839               M         movf    Table_Counter,W
0300   2???               M                 call    FF
0301   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0302   1903               M                 btfsc   STATUS,Z
0303   2???               M                 goto    end_disp
0304   2???               M                 call    WR_DATA
0305   0AB9               M                 incf    Table_Counter,F
0306   2???               M                 goto    loop_disp
0307                      M end_disp
                      00755     writenum_reg    num_FF
0307   082B               M             movf    num_FF,W
0308   3E30               M             addlw   B'00110000'
0309   00BB               M             movwf   dat
030A   2???               M             call WR_DATA
030B   0008           00756     return
                      00757 
                      00758 ; Defective candles Subroutine
                      00759 ; Displays index of each defective candle (LF or FF)
                      00760 ; Reads data from state1 - state9
030C                  00761 defective
030C   2???           00762     call            Clear_Display
                      00763 
                      00764     Display         LF              ; first look at LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
030D   01B9               M                 clrf    Table_Counter
030E   0103               M                 clrw
030F                      M loop_disp
030F   0839               M         movf    Table_Counter,W
0310   2???               M                 call    LF
0311   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0312   1903               M                 btfsc   STATUS,Z
0313   2???               M                 goto    end_disp
0314   2???               M                 call    WR_DATA
0315   0AB9               M                 incf    Table_Counter,F
0316   2???               M                 goto    loop_disp
0317                      M end_disp
0317   08AA           00765     movf            num_LF, F
0318   1D03           00766     btfss           STATUS,Z         ;if none LF, just say "none"
0319   2???           00767     goto            check_LF
                      00768     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
031A   01B9               M                 clrf    Table_Counter
031B   0103               M                 clrw
031C                      M loop_disp
031C   0839               M         movf    Table_Counter,W
031D   2???               M                 call    None
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031F   1903               M                 btfsc   STATUS,Z
0320   2???               M                 goto    end_disp
0321   2???               M                 call    WR_DATA
0322   0AB9               M                 incf    Table_Counter,F
0323   2???               M                 goto    loop_disp
0324                      M end_disp
0324   2???           00769     goto            now_FF
                      00770 
0325                  00771 check_LF                            ; list all LF candles
0325   3002           00772     movlw           B'00000010'
0326   2???           00773     call            check_for_fail
                      00774 
0327                  00775 now_FF                              ; now look at FF
0327   2???           00776     call            Switch_Lines
                      00777     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0328   01B9               M                 clrf    Table_Counter
0329   0103               M                 clrw
032A                      M loop_disp
032A   0839               M         movf    Table_Counter,W
032B   2???               M                 call    FF
032C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032D   1903               M                 btfsc   STATUS,Z
032E   2???               M                 goto    end_disp
032F   2???               M                 call    WR_DATA
0330   0AB9               M                 incf    Table_Counter,F
0331   2???               M                 goto    loop_disp
0332                      M end_disp
0332   08AB           00778     movf            num_FF, F
0333   1D03           00779     btfss           STATUS,Z         ;if none FF, just say "none"
0334   2???           00780     goto            check_FF
                      00781     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0335   01B9               M                 clrf    Table_Counter
0336   0103               M                 clrw
0337                      M loop_disp
0337   0839               M         movf    Table_Counter,W
0338   2???               M                 call    None
0339   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
033A   1903               M                 btfsc   STATUS,Z
033B   2???               M                 goto    end_disp
033C   2???               M                 call    WR_DATA
033D   0AB9               M                 incf    Table_Counter,F
033E   2???               M                 goto    loop_disp
033F                      M end_disp
033F   0008           00782     return
                      00783 
0340                  00784 check_FF                            ; list all FF candles
0340   3003           00785     movlw           B'00000011'
0341   2???           00786     call            check_for_fail
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0342   0008           00787     return
                      00788 
0343                  00789 check_for_fail  ;lists all candles that have status currently in W "stateX"
0343   00B8           00790     movwf   statetemp
                      00791         movlf   D'0', candle_index
0344   3000               M         movlw   D'0'
0345   00C7               M         movwf   candle_index
0346   1383           00792         bcf     STATUS, IRP
                      00793         movlf   0x20, FSR           ;index of right before state1
0347   3020               M         movlw   0x20
0348   0084               M         movwf   FSR
0349                  00794 check_next
0349   3009           00795         movlw   D'9'                ;exit loop if at 9
034A   0247           00796         subwf   candle_index, W
034B   1803           00797         btfsc   STATUS,W
034C   2???           00798         goto    end_check_fail
034D   0A84           00799         incf    FSR,F               ; increment
034E   0AC7           00800         incf    candle_index,F
034F   0838           00801         movf    statetemp, W            ;see if stateN = stateX
0350   0200           00802         subwf   INDF, W
0351   1D03           00803         btfss   STATUS, Z
0352   2???           00804         goto    check_next              ;if not, go to next
                      00805         writenum_reg    candle_index    ;if so, write down the number
0353   0847               M             movf    candle_index,W
0354   3E30               M             addlw   B'00110000'
0355   00BB               M             movwf   dat
0356   2???               M             call WR_DATA
                      00806         spacebar
0357   3014               M             movlw   B'00010100'
0358   2???               M             call    WR_INS
0359   2???           00807         goto check_next
035A                  00808 end_check_fail
035A   0008           00809         return
                      00810 
                      00811 ; Time subroutine
                      00812 ; Right now this takes the time in seconds as a binary number in op_time
                      00813 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00814 ; incremented every second. However I may just take the stop time - start time
                      00815 ; from the RTC data so this might change a lot.
035B                  00816 time
035B   2???           00817     call    Clear_Display
                      00818     Display Time_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
035C   01B9               M                 clrf    Table_Counter
035D   0103               M                 clrw
035E                      M loop_disp
035E   0839               M         movf    Table_Counter,W
035F   2???               M                 call    Time_Msg
0360   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0361   1903               M                 btfsc   STATUS,Z
0362   2???               M                 goto    end_disp
0363   2???               M                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0364   0AB9               M                 incf    Table_Counter,F
0365   2???               M                 goto    loop_disp
0366                      M end_disp
0366   2???           00819     call    Switch_Lines
0367   0820           00820     movf    op_time, W
0368   2???           00821     call    big_number
0369   08C2           00822     movf    huns, F
036A   1903           00823     btfsc   STATUS,Z        ;if huns is zero don't display it
036B   2???           00824     goto    no_huns
                      00825     writenum_reg    huns
036C   0842               M             movf    huns,W
036D   3E30               M             addlw   B'00110000'
036E   00BB               M             movwf   dat
036F   2???               M             call WR_DATA
0370                  00826 no_huns
0370   08C3           00827     movf    tens, F
0371   1903           00828     btfsc   STATUS,Z        ;if tens is zero don't display it
0372   2???           00829     goto    no_tens
                      00830     writenum_reg    tens
0373   0843               M             movf    tens,W
0374   3E30               M             addlw   B'00110000'
0375   00BB               M             movwf   dat
0376   2???               M             call WR_DATA
0377                  00831 no_tens
                      00832     writenum_reg    ones
0377   0844               M             movf    ones,W
0378   3E30               M             addlw   B'00110000'
0379   00BB               M             movwf   dat
037A   2???               M             call WR_DATA
                      00833     Display Seconds
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
037B   01B9               M                 clrf    Table_Counter
037C   0103               M                 clrw
037D                      M loop_disp
037D   0839               M         movf    Table_Counter,W
037E   2???               M                 call    Seconds
037F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0380   1903               M                 btfsc   STATUS,Z
0381   2???               M                 goto    end_disp
0382   2???               M                 call    WR_DATA
0383   0AB9               M                 incf    Table_Counter,F
0384   2???               M                 goto    loop_disp
0385                      M end_disp
0385   0008           00834     return
                      00835 
                      00836 ; Export subroutine         
                      00837 ; Exports data from current run to hyperterminal
                      00838 ; reads start time and num_tot/num_ff/num_lf data
0386                  00839 export
                      00840     printchar   0x7       ;makes a noise on the PC
0386   3007               M             movlw   0x7
0387   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00841     printchar   0xD       ;go back to left edge
0388   300D               M             movlw   0xD
0389   2???               M             call    writetoPC
                      00842     printchar   "T"
038A   3054               M             movlw   "T"
038B   2???               M             call    writetoPC
                      00843     printchar   "e"
038C   3065               M             movlw   "e"
038D   2???               M             call    writetoPC
                      00844     printchar   "s"
038E   3073               M             movlw   "s"
038F   2???               M             call    writetoPC
                      00845     printchar   "t"
0390   3074               M             movlw   "t"
0391   2???               M             call    writetoPC
                      00846     printchar   " "
0392   3020               M             movlw   " "
0393   2???               M             call    writetoPC
                      00847     printchar   "a"
0394   3061               M             movlw   "a"
0395   2???               M             call    writetoPC
                      00848     printchar   "t"
0396   3074               M             movlw   "t"
0397   2???               M             call    writetoPC
                      00849     printchar   ":"
0398   303A               M             movlw   ":"
0399   2???               M             call    writetoPC
                      00850     printchar   " "
039A   3020               M             movlw   " "
039B   2???               M             call    writetoPC
                      00851     printchar   "2"
039C   3032               M             movlw   "2"
039D   2???               M             call    writetoPC
                      00852     printchar   "0"
039E   3030               M             movlw   "0"
039F   2???               M             call    writetoPC
                      00853     printASC   start_year10
03A0   1283 1303          M             banksel start_year10
03A2   082D               M             movf    start_year10,W
03A3   2???               M             call    writetoPC
                      00854     printASC   start_year1
03A4   1283 1303          M             banksel start_year1
03A6   082E               M             movf    start_year1,W
03A7   2???               M             call    writetoPC
                      00855     printchar   "/"
03A8   302F               M             movlw   "/"
03A9   2???               M             call    writetoPC
                      00856     printASC   start_month10
03AA   1283 1303          M             banksel start_month10
03AC   082F               M             movf    start_month10,W
03AD   2???               M             call    writetoPC
                      00857     printASC   start_month1
03AE   1283 1303          M             banksel start_month1
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B0   0830               M             movf    start_month1,W
03B1   2???               M             call    writetoPC
                      00858     printchar   "/"
03B2   302F               M             movlw   "/"
03B3   2???               M             call    writetoPC
                      00859     printASC   start_date10
03B4   1283 1303          M             banksel start_date10
03B6   0831               M             movf    start_date10,W
03B7   2???               M             call    writetoPC
                      00860     printASC   start_date1
03B8   1283 1303          M             banksel start_date1
03BA   0832               M             movf    start_date1,W
03BB   2???               M             call    writetoPC
                      00861     printchar   " "
03BC   3020               M             movlw   " "
03BD   2???               M             call    writetoPC
                      00862     printASC   start_hour10
03BE   1283 1303          M             banksel start_hour10
03C0   0833               M             movf    start_hour10,W
03C1   2???               M             call    writetoPC
                      00863     printASC   start_hour1
03C2   1283 1303          M             banksel start_hour1
03C4   0834               M             movf    start_hour1,W
03C5   2???               M             call    writetoPC
                      00864     printchar   ":"
03C6   303A               M             movlw   ":"
03C7   2???               M             call    writetoPC
                      00865     printASC   start_min10
03C8   1283 1303          M             banksel start_min10
03CA   0835               M             movf    start_min10,W
03CB   2???               M             call    writetoPC
                      00866     printASC   start_min1
03CC   1283 1303          M             banksel start_min1
03CE   0836               M             movf    start_min1,W
03CF   2???               M             call    writetoPC
                      00867     newline
                          M             printchar   0xA ;changes line
03D0   300A               M             movlw   0xA
03D1   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
03D2   300D               M             movlw   0xD
03D3   2???               M             call    writetoPC
                      00868     printchar   "T"
03D4   3054               M             movlw   "T"
03D5   2???               M             call    writetoPC
                      00869     printchar   "i"
03D6   3069               M             movlw   "i"
03D7   2???               M             call    writetoPC
                      00870     printchar   "m"
03D8   306D               M             movlw   "m"
03D9   2???               M             call    writetoPC
                      00871     printchar   "e"
03DA   3065               M             movlw   "e"
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03DB   2???               M             call    writetoPC
                      00872     printchar   ":"
03DC   303A               M             movlw   ":"
03DD   2???               M             call    writetoPC
                      00873     printchar   " "
03DE   3020               M             movlw   " "
03DF   2???               M             call    writetoPC
                      00874     printchar   " "
03E0   3020               M             movlw   " "
03E1   2???               M             call    writetoPC
                      00875     printchar   " "
03E2   3020               M             movlw   " "
03E3   2???               M             call    writetoPC
                      00876     printchar   " "
03E4   3020               M             movlw   " "
03E5   2???               M             call    writetoPC
03E6   1283 1303      00877     banksel huns
03E8   08C2           00878     movf    huns, F
03E9   1903           00879     btfsc   STATUS,Z        ;if huns is zero don't display it
03EA   2???           00880     goto    nohuns
                      00881     printBCD   huns
03EB   1283 1303          M             banksel huns
03ED   0842               M             movf    huns, W
03EE   3E30               M             addlw   0x30
03EF   2???               M             call    writetoPC
03F0                  00882 nohuns
03F0   1283 1303      00883     banksel tens
03F2   08C3           00884     movf    tens, F
03F3   1903           00885     btfsc   STATUS,Z        ;if tens is zero don't display it
03F4   2???           00886     goto    notens
                      00887     printBCD   tens
03F5   1283 1303          M             banksel tens
03F7   0843               M             movf    tens, W
03F8   3E30               M             addlw   0x30
03F9   2???               M             call    writetoPC
03FA                  00888 notens
                      00889     printBCD   ones
03FA   1283 1303          M             banksel ones
03FC   0844               M             movf    ones, W
03FD   3E30               M             addlw   0x30
03FE   2???               M             call    writetoPC
                      00890     printchar   " "
03FF   3020               M             movlw   " "
0400   2???               M             call    writetoPC
                      00891     printchar   "s"
0401   3073               M             movlw   "s"
0402   2???               M             call    writetoPC
                      00892     printchar   "e"
0403   3065               M             movlw   "e"
0404   2???               M             call    writetoPC
                      00893     printchar   "c"
0405   3063               M             movlw   "c"
0406   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00894     newline
                          M             printchar   0xA ;changes line
0407   300A               M             movlw   0xA
0408   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0409   300D               M             movlw   0xD
040A   2???               M             call    writetoPC
                      00895     printchar   "C"
040B   3043               M             movlw   "C"
040C   2???               M             call    writetoPC
                      00896     printchar   "a"
040D   3061               M             movlw   "a"
040E   2???               M             call    writetoPC
                      00897     printchar   "n"
040F   306E               M             movlw   "n"
0410   2???               M             call    writetoPC
                      00898     printchar   "d"
0411   3064               M             movlw   "d"
0412   2???               M             call    writetoPC
                      00899     printchar   "l"
0413   306C               M             movlw   "l"
0414   2???               M             call    writetoPC
                      00900     printchar   "e"
0415   3065               M             movlw   "e"
0416   2???               M             call    writetoPC
                      00901     printchar   "s"
0417   3073               M             movlw   "s"
0418   2???               M             call    writetoPC
                      00902     printchar   ":"
0419   303A               M             movlw   ":"
041A   2???               M             call    writetoPC
                      00903     printchar   " "
041B   3020               M             movlw   " "
041C   2???               M             call    writetoPC
                      00904     printchar   " "
041D   3020               M             movlw   " "
041E   2???               M             call    writetoPC
                      00905     printchar   " "
041F   3020               M             movlw   " "
0420   2???               M             call    writetoPC
                      00906     printchar   " "
0421   3020               M             movlw   " "
0422   2???               M             call    writetoPC
                      00907     printchar   " "
0423   3020               M             movlw   " "
0424   2???               M             call    writetoPC
                      00908     printchar   " "
0425   3020               M             movlw   " "
0426   2???               M             call    writetoPC
                      00909     printBCD    num_tot
0427   1283 1303          M             banksel num_tot
0429   082C               M             movf    num_tot, W
042A   3E30               M             addlw   0x30
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

042B   2???               M             call    writetoPC
                      00910     newline
                          M             printchar   0xA ;changes line
042C   300A               M             movlw   0xA
042D   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
042E   300D               M             movlw   0xD
042F   2???               M             call    writetoPC
                      00911     printchar   "L"
0430   304C               M             movlw   "L"
0431   2???               M             call    writetoPC
                      00912     printchar   "E"
0432   3045               M             movlw   "E"
0433   2???               M             call    writetoPC
                      00913     printchar   "D"
0434   3044               M             movlw   "D"
0435   2???               M             call    writetoPC
                      00914     printchar   " "
0436   3020               M             movlw   " "
0437   2???               M             call    writetoPC
                      00915     printchar   "f"
0438   3066               M             movlw   "f"
0439   2???               M             call    writetoPC
                      00916     printchar   "a"
043A   3061               M             movlw   "a"
043B   2???               M             call    writetoPC
                      00917     printchar   "i"
043C   3069               M             movlw   "i"
043D   2???               M             call    writetoPC
                      00918     printchar   "l"
043E   306C               M             movlw   "l"
043F   2???               M             call    writetoPC
                      00919     printchar   ":"
0440   303A               M             movlw   ":"
0441   2???               M             call    writetoPC
                      00920     printchar   " "
0442   3020               M             movlw   " "
0443   2???               M             call    writetoPC
                      00921     printchar   " "
0444   3020               M             movlw   " "
0445   2???               M             call    writetoPC
                      00922     printchar   " "
0446   3020               M             movlw   " "
0447   2???               M             call    writetoPC
                      00923     printchar   " "
0448   3020               M             movlw   " "
0449   2???               M             call    writetoPC
                      00924     printchar   " "
044A   3020               M             movlw   " "
044B   2???               M             call    writetoPC
                      00925     printBCD    num_LF
044C   1283 1303          M             banksel num_LF
044E   082A               M             movf    num_LF, W
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044F   3E30               M             addlw   0x30
0450   2???               M             call    writetoPC
                      00926     newline
                          M             printchar   0xA ;changes line
0451   300A               M             movlw   0xA
0452   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0453   300D               M             movlw   0xD
0454   2???               M             call    writetoPC
                      00927     printchar   "F"
0455   3046               M             movlw   "F"
0456   2???               M             call    writetoPC
                      00928     printchar   "l"
0457   306C               M             movlw   "l"
0458   2???               M             call    writetoPC
                      00929     printchar   "i"
0459   3069               M             movlw   "i"
045A   2???               M             call    writetoPC
                      00930     printchar   "c"
045B   3063               M             movlw   "c"
045C   2???               M             call    writetoPC
                      00931     printchar   "k"
045D   306B               M             movlw   "k"
045E   2???               M             call    writetoPC
                      00932     printchar   "e"
045F   3065               M             movlw   "e"
0460   2???               M             call    writetoPC
                      00933     printchar   "r"
0461   3072               M             movlw   "r"
0462   2???               M             call    writetoPC
                      00934     printchar   " "
0463   3020               M             movlw   " "
0464   2???               M             call    writetoPC
                      00935     printchar   "f"
0465   3066               M             movlw   "f"
0466   2???               M             call    writetoPC
                      00936     printchar   "a"
0467   3061               M             movlw   "a"
0468   2???               M             call    writetoPC
                      00937     printchar   "i"
0469   3069               M             movlw   "i"
046A   2???               M             call    writetoPC
                      00938     printchar   "l"
046B   306C               M             movlw   "l"
046C   2???               M             call    writetoPC
                      00939     printchar   ":"
046D   303A               M             movlw   ":"
046E   2???               M             call    writetoPC
                      00940     printchar   " "
046F   3020               M             movlw   " "
0470   2???               M             call    writetoPC
                      00941     printBCD    num_FF
0471   1283 1303          M             banksel num_FF
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0473   082B               M             movf    num_FF, W
0474   3E30               M             addlw   0x30
0475   2???               M             call    writetoPC
                      00942     newline
                          M             printchar   0xA ;changes line
0476   300A               M             movlw   0xA
0477   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0478   300D               M             movlw   0xD
0479   2???               M             call    writetoPC
                      00943     newline  
                          M             printchar   0xA ;changes line
047A   300A               M             movlw   0xA
047B   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
047C   300D               M             movlw   0xD
047D   2???               M             call    writetoPC
047E   1283           00944     bcf STATUS,RP0  ; back to bank 0
047F   0008           00945     return
                      00946 
                      00947 
                      00948 ;***************************************
                      00949 ; GENERAL PURPOSE SUBROUTINES
                      00950 ;***************************************
                      00951 
                      00952 ; DISPLAY BIG NUMBER SUBROUTINE
                      00953 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00954 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00955 ; Uses "shift and add 3" algorithm
0480                  00956 big_number
                      00957     movff   op_time, op_time_save         ;save the original op_time
0480   0820               M         movf    op_time, W
0481   00C1               M         movwf   op_time_save
                      00958     movlf   8, bignumcount                ;will shift 8 times
0482   3008               M         movlw   8
0483   00C5               M         movwf   bignumcount
0484   01C2           00959     clrf    huns
0485   01C3           00960     clrf    tens
0486   01C4           00961     clrf    ones
                      00962 
0487                  00963 BCDadd3                             ; if any digit > 5, add3
0487   3005           00964     movlw   0x5
0488   0242           00965     subwf   huns, W
0489   1803           00966     btfsc   STATUS, C
048A   2???           00967     call    add3huns
                      00968 
048B   3005           00969     movlw   0x5
048C   0243           00970     subwf   tens, W
048D   1803           00971     btfsc   STATUS, C
048E   2???           00972     call    add3tens
                      00973 
048F   3005           00974     movlw   0x5
0490   0244           00975     subwf   ones, W
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0491   1803           00976     btfsc   STATUS, C
0492   2???           00977     call    add3ones
                      00978 
0493   03C5           00979     decf    bignumcount, 1
0494   1003           00980     bcf     STATUS, C
0495   0DA0           00981     rlf     op_time, 1              ; shift
0496   0DC4           00982     rlf     ones, 1
0497   1A44           00983     btfsc   ones,4 ;
0498   2???           00984     call    carryones               ; carry if too large
0499   0DC3           00985     rlf     tens, 1
                      00986 
049A   1A43           00987     btfsc   tens,4 ;
049B   2???           00988     call    carrytens
049C   0DC2           00989     rlf     huns,1
049D   1003           00990     bcf     STATUS, C
                      00991 
049E   0845           00992     movf    bignumcount, W
049F   1D03           00993     btfss   STATUS, Z
04A0   2???           00994     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00995 
                      00996     movff    op_time_save, op_time     ;restore the original op_time
04A1   0841               M         movf    op_time_save, W
04A2   00A0               M         movwf   op_time
04A3   0008           00997     return
                      00998 
04A4                  00999 add3huns
04A4   3003           01000     movlw 0x3
04A5   07C2           01001     addwf huns,F
04A6   0008           01002     return
04A7                  01003 add3tens
04A7   3003           01004     movlw 0x3
04A8   07C3           01005     addwf tens,F
04A9   0008           01006     return
04AA                  01007 add3ones
04AA   3003           01008     movlw 0x3
04AB   07C4           01009     addwf ones,F
04AC   0008           01010     return
04AD                  01011 carryones
04AD   1244           01012     bcf ones, 4
04AE   1403           01013     bsf STATUS, C
04AF   0008           01014     return
04B0                  01015 carrytens
04B0   1243           01016     bcf tens, 4
04B1   1403           01017     bsf STATUS, C
04B2   0008           01018     return
                      01019 
                      01020 
                      01021 ; DELAY 0.5S SUBROUTINE (from generator at http://www.piclist.com/techref/piclist/codegen/delay.htm)
                      01022 ; Delays exactly 0.5sec
04B3                  01023 HalfS
                      01024       movlf 0x8A, hdelH
04B3   308A               M         movlw   0x8A
04B4   00BE               M         movwf   hdelH
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01025       movlf 0xBA, hdelM
04B5   30BA               M         movlw   0xBA
04B6   00BF               M         movwf   hdelM
                      01026       movlf 0x03, hdelL
04B7   3003               M         movlw   0x03
04B8   00C0               M         movwf   hdelL
04B9                  01027 HalfS_0
04B9   0BBE           01028       decfsz    hdelH, F
04BA   2???           01029           goto  $+2
04BB   0BBF           01030           decfsz        hdelM, F
04BC   2???           01031           goto  $+2
04BD   0BC0           01032           decfsz        hdelL, F
04BE   2???           01033           goto  HalfS_0
                      01034 
04BF   2???           01035           goto  $+1
04C0   0000           01036           nop
04C1   0008           01037           return
                      01038 
                      01039 ; DELAY 5ms SUBROUTINE. (from generator at http://www.piclist.com/techref/piclist/codegen/delay.htm)
                      01040 ; Useful for LCD because PIC is way faster than it can handle
                      01041 ; Delays exactly 5ms
04C2                  01042 delay5ms
                      01043         movlf   0xC3, del1
04C2   30C3               M         movlw   0xC3
04C3   00BC               M         movwf   del1
                      01044         movlf   0x0A, del2
04C4   300A               M         movlw   0x0A
04C5   00BD               M         movwf   del2
04C6                  01045 Delay_0
04C6   0BBC           01046         decfsz  del1, f
04C7   2???           01047         goto    $+2
04C8   0BBD           01048         decfsz  del2, f
04C9   2???           01049         goto    Delay_0
04CA   0008           01050     return
                      01051 
                      01052 ;***************************************
                      01053 ; LCD SUBROUTINES (from sample code)
                      01054 ;***************************************
                      01055 
                      01056 ; Initialize the LCD
04CB                  01057 InitLCD
04CB   1283           01058         bcf STATUS,RP0
04CC   1588           01059         bsf E     ;E default high
                      01060 
                      01061         ;Wait for LCD POR to finish (~15ms)
04CD   2???           01062         call delay5ms
04CE   2???           01063         call delay5ms
04CF   2???           01064         call delay5ms
                      01065 
                      01066         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      01067         ; -> Send b'0011' 3 times
04D0   3033           01068         movlw   b'00110011'
04D1   2???           01069         call    WR_INS
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04D2   2???           01070         call delay5ms
04D3   2???           01071         call delay5ms
04D4   3032           01072         movlw   b'00110010'
04D5   2???           01073         call    WR_INS
04D6   2???           01074         call delay5ms
04D7   2???           01075         call delay5ms
                      01076 
                      01077         ; 4 bits, 2 lines, 5x7 dots
04D8   3028           01078         movlw   b'00101000'
04D9   2???           01079         call    WR_INS
04DA   2???           01080         call delay5ms
04DB   2???           01081         call delay5ms
                      01082 
                      01083         ; display on/off
04DC   300C           01084         movlw   b'00001100'
04DD   2???           01085         call    WR_INS
04DE   2???           01086         call delay5ms
04DF   2???           01087         call delay5ms
                      01088 
                      01089         ; Entry mode
04E0   3006           01090         movlw   b'00000110'
04E1   2???           01091         call    WR_INS
04E2   2???           01092         call delay5ms
04E3   2???           01093         call delay5ms
                      01094 
                      01095         ; Clear ram
04E4   3001           01096         movlw   b'00000001'
04E5   2???           01097         call    WR_INS
04E6   2???           01098         call delay5ms
04E7   2???           01099         call delay5ms
04E8   0008           01100         return
                      01101 
                      01102 ; Clear the display
04E9                  01103 Clear_Display
04E9   3001           01104                 movlw   B'00000001'
04EA   2???           01105                 call    WR_INS
04EB   0008           01106                 return
                      01107 
                      01108 ;Switch lines
04EC                  01109 Switch_Lines
04EC   30C0           01110                 movlw   B'11000000'
04ED   2???           01111                 call    WR_INS
04EE   0008           01112                 return
                      01113 
                      01114 ; Write an instruction to the LCD (see page 7-104)
                      01115 ; The instruction must be in W
04EF                  01116 WR_INS
04EF   1108           01117         bcf             RS                              ;clear RS
04F0   00BA           01118         movwf   com                             ;W --> com
04F1   39F0           01119         andlw   0xF0                    ;mask 4 bits MSB w = X0
04F2   0088           01120         movwf   PORTD                   ;Send 4 bits MSB
04F3   1588           01121         bsf             E                               ;
04F4   2???           01122         call    delay5ms        ;__    __
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04F5   1188           01123         bcf             E                               ;  |__|
04F6   0E3A           01124         swapf   com,w
04F7   39F0           01125         andlw   0xF0                    ;1111 0010
04F8   0088           01126         movwf   PORTD                   ;send 4 bits LSB
04F9   1588           01127         bsf             E                               ;
04FA   2???           01128         call    delay5ms        ;__    __
04FB   1188           01129         bcf             E                               ;  |__|
04FC   2???           01130         call    delay5ms
04FD   0008           01131         return
                      01132 
                      01133 ; Write data at current cursor location
                      01134 ; Character code (see page 7-104) must be in W
04FE                  01135 WR_DATA
04FE   1508           01136         bsf             RS
04FF   00BB           01137         movwf   dat
0500   083B           01138         movf    dat,w
0501   39F0           01139         andlw   0xF0
0502   3E04           01140         addlw   4
0503   0088           01141         movwf   PORTD
0504   1588           01142         bsf             E                               ;
0505   2???           01143         call    delay5ms        ;__    __
0506   1188           01144         bcf             E                               ;  |__|
0507   0E3B           01145         swapf   dat,w
0508   39F0           01146         andlw   0xF0
0509   3E04           01147         addlw   4
050A   0088           01148         movwf   PORTD
050B   1588           01149         bsf             E                               ;
050C   2???           01150         call    delay5ms        ;__    __
050D   1188           01151         bcf             E                               ;  |__|
050E   0008           01152         return
                      01153 
                      01154 
                      01155 ;***************************************
                      01156 ; PC INTERFACE SUBROUTINES (from sample code)
                      01157 ;***************************************
050F                  01158 InitUSART
050F   1683           01159         bsf       STATUS,RP0     ; select bank 1
0510   300F           01160         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0511   0099           01161         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0512   0198           01162         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01163 
0513   1283           01164         bcf       STATUS,RP0     ; select bank 0
0514   1798           01165         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
0515   1618           01166         bsf       RCSTA,CREN     ; continuous receive
                      01167 
0516   1683           01168         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0517   1698           01169         bsf       TXSTA,TXEN     ; Transmit enable
0518   0008           01170         return
                      01171 
                      01172 
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0519                  01173 writetoPC
                      01174 ; Writes the data in W to the PC
                      01175 ; end up in bank1!
0519   1283           01176         bcf       STATUS,RP0     ; Go to bank 0
051A   0099           01177         movwf     TXREG          ; Send contents of W to RS232
051B   1683           01178         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
051C   1C98           01179         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
051D   2???           01180         goto      $-1
051E   0008           01181         return
                      01182 
                      01183 
                      01184 ;***************************************
                      01185 ; ISR
                      01186 ; Currently only care about TMR0
                      01187 ; TMR0 overflows at 256*256; each time, decrement count38
                      01188 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      01189 ; When this hapens, op_time increments
                      01190 ;***************************************
051F                  01191 isr
051F   00F9           01192     movwf   w_isr           ;save W and status
0520   0E03           01193     swapf   STATUS, W
0521   0183           01194     clrf    STATUS
0522   00FA           01195     movwf   status_isr
                      01196 ;    movf    PCLATH, W      ;if using pages
                      01197 ;    movwf   pclath_isr
                      01198 ;    clrf    PCLATH
                      01199 
0523   0BC6           01200     decfsz  count38, F     ;if count38 gets to 38 it's been one second
0524   2???           01201     goto    end_isr
                      01202     movlf   D'38', count38  ;so reset count38
0525   3026               M         movlw   D'38'
0526   00C6               M         movwf   count38
0527   0AA0           01203     incf    op_time, F         ; and increment op_time
                      01204 
0528                  01205 end_isr
                      01206 
                      01207 ;    btfss   PHOTODATA       ;if PHOTODATA is 1, light is off
                      01208 ;    incf    photocount, F       ;if it is 0, light is on so photocount++
                      01209 
                      01210 ;    movf    pclath_isr, W  ;if using pages
                      01211 ;    movwf    PCLATH
0528   0E7A           01212     swapf   status_isr, W   ;restore W and status
0529   0083           01213     movwf   STATUS
052A   0EF9           01214     swapf   w_isr, F
052B   0E79           01215     swapf   w_isr, W
052C   110B           01216     bcf     INTCON, T0IF    ;clear the interrupt flag
052D   0009           01217     retfie
                      01218 
                      01219 
3F72                  01220     END
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           00000487
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
CREN                              00000004
CSRC                              00000007
Clear_Display                     000004E9
D                                 00000005
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Delay_0                           000004C6
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
F                                 00000001
FERR                              00000002
FF                                0000008F
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000004B3
HalfS_0                           000004B9
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRDATA                            PORTA, 1
IRLIGHT                           PORTA, 0
IRP                               00000007
InitLCD                           000004CB
InitUSART                         0000050F
LED_fail                          0000005C
LF                                00000089
Logs_Msg1                         0000009D
Logs_Msg2                         000000AD
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000095
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PHOTODATA                         PORTA, 2
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      000004EC
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000039
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           000004FE
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

WR_INS                            000004EF
Z                                 00000002
_.org_1_0144                      00000144
_.org_1_018A                      0000018A
_.org_1_018F                      0000018F
_.org_1_01A8                      000001A8
_.org_1_0201                      00000201
_.org_1_04BA                      000004BA
_.org_1_04BC                      000004BC
_.org_1_04BF                      000004BF
_.org_1_04C7                      000004C7
_.org_1_051D                      0000051D
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          000004A4
add3ones                          000004AA
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

add3tens                          000004A7
badkey                            00000200
big_number                        00000480
bignumcount                       00000045
candle_index                      00000047
carryones                         000004AD
carrytens                         000004B0
check_1                           00000204
check_2                           0000020F
check_3                           0000021B
check_4                           00000227
check_5                           00000233
check_6                           0000023F
check_7                           0000024B
check_8                           00000257
check_9                           00000263
check_FF                          00000340
check_LED                         000002BC
check_LF                          00000325
check_defective                   00000275
check_done                        000001EF
check_export                      00000281
check_flick                       000002CB
check_for_fail                    00000343
check_log1                        000001AC
check_log2                        000001BC
check_log3                        000001CD
check_log4                        000001DE
check_next                        00000349
check_none                        0000029F
check_pass                        000002AD
check_standby                     00000287
check_start                       00000298
check_summary                     0000026F
check_time                        0000027B
com                               0000003A
count38                           00000046
dat                               0000003B
default_key                       0000029D
default_state                     000002DA
defective                         0000030C
del1                              0000003C
del2                              0000003D
delay5ms                          000004C2
display_state                     0000029E
end_check_fail                    0000035A
end_isr                           00000528
end_operation                     00000175
export                            00000386
hdelH                             0000003E
hdelL                             00000040
hdelM                             0000003F
huns                              00000042
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

i2c_common_setup                  00000000
information                       00000203
init                              000000BE
isr                               0000051F
keytemp                           00000037
logs                              00000191
movff                             
movlf                             
newline                           
no_huns                           00000370
no_tens                           00000377
nohuns                            000003F0
notens                            000003FA
now_FF                            00000327
num_FF                            0000002B
num_LF                            0000002A
num_tot                           0000002C
ones                              00000044
op_time                           00000020
op_time_save                      00000041
photocount                        00000048
photoval                          00000049
poll                              00000189
polling                           000001A7
printASC                          
printBCD                          
printchar                         
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spacebar                          
start                             00000146
start_date1                       00000032
start_date10                      00000031
start_hour1                       00000034
start_hour10                      00000033
start_min1                        00000036
start_min10                       00000035
start_month1                      00000030
start_month10                     0000002F
start_year1                       0000002E
start_year10                      0000002D
state1                            00000021
state2                            00000022
state3                            00000023
state4                            00000024
state5                            00000025
state6                            00000026
state7                            00000027
state8                            00000028
state9                            00000029
MPASM 5.54                          MAIN.ASM   2-17-2014  18:27:05         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

statetemp                         00000038
status_isr                        0000007A
summary                           000002DB
tens                              00000043
threshold1                        D'15'
threshold2                        D'65'
time                              0000035B
w_isr                             00000079
waiting                           000000DE
write_rtc                         00000000
writenum                          
writenum_reg                      
writetoPC                         00000519

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    10 reported,     0 suppressed

