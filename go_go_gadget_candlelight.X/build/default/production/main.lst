MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013 
                      00014 
                      00015 ;***************************************
                      00016 ; VARIABLES
                      00017 ;***************************************
                      00018 
                      00019 ; Also see i2c_commmon.asm -> has stuff at 0x70 on for RTC
                      00020 
                      00021     cblock      0x20
                      00022         ; temps, counters, etc.
  00000020            00023         keytemp         ; for data display mode
  00000021            00024         statetemp
  00000022            00025                 Table_Counter   ; for LCD stuff
  00000023            00026                 com
  00000024            00027                 dat
  00000025            00028         lcd_d1
  00000026            00029         lcd_d2
  00000027            00030         COUNTH          ;for delay 0.5s routine
  00000028            00031         COUNTM
  00000029            00032         COUNTL
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002A            00033         op_time_save    ;for operation time
  0000002B            00034         huns
  0000002C            00035         tens
  0000002D            00036         ones
  0000002E            00037         bignumcount
  0000002F            00038         count38         ;for isr
  00000030            00039         w_isr               ;I think this needs to be in all banks??
  00000031            00040         status_isr
                      00041 
                      00042         ; important information
  00000032            00043         op_time    ;in seconds
  00000033            00044         state1     ;where   0 = none      1 = pass
  00000034            00045         state2     ;        2 = led fail  3 = flicker fail
  00000035            00046         state3
  00000036            00047         state4
  00000037            00048         state5
  00000038            00049         state6
  00000039            00050         state7
  0000003A            00051         state8
  0000003B            00052         state9
  0000003C            00053         num_LF
  0000003D            00054         num_FF
  0000003E            00055         num_tot
  0000003F            00056         start_year10    ;starting time (for log)
  00000040            00057         start_year1
  00000041            00058         start_month10
  00000042            00059         start_month1
  00000043            00060         start_date10
  00000044            00061         start_date1
  00000045            00062         start_hour10
  00000046            00063         start_hour1
  00000047            00064         start_min10
  00000048            00065         start_min1
                      00066 
                      00067         endc
                      00068 
                      00069 
                      00070 ;***************************************
                      00071 ; MACROS
                      00072 ;***************************************
                      00073 
                      00074 ;LCD Delay
                      00075 LCD_DELAY   macro
                      00076             movlw   0xFF
                      00077             movwf   lcd_d1
                      00078             decfsz  lcd_d1,f
                      00079             goto    $-1
                      00080             endm
                      00081 
                      00082 ; Display a msg on LCD
                      00083 Display macro   Message
                      00084                 local   loop_disp
                      00085                 local   end_disp
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086                 clrf    Table_Counter
                      00087                 clrw
                      00088 loop_disp
                      00089         movf    Table_Counter,W
                      00090                 call    Message
                      00091                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00092                 btfsc   STATUS,Z
                      00093                 goto    end_disp
                      00094                 call    WR_DATA
                      00095                 incf    Table_Counter,F
                      00096                 goto    loop_disp
                      00097 end_disp
                      00098                 endm
                      00099 
                      00100 ;Move cursor right one position
                      00101 spacebar    macro
                      00102             movlw   B'00010100'
                      00103             call    WR_INS
                      00104             endm
                      00105 
                      00106 ;Shortcuts for moving literals / registers
                      00107 movlf   macro   l, f
                      00108         movlw   l
                      00109         movwf   f
                      00110         endm
                      00111 
                      00112 movff   macro   source, dest
                      00113         movf    source, W
                      00114         movwf   dest
                      00115         endm
                      00116 
                      00117 ; Display a single digit number (0x0 to 0x9) on LCD as decimal
                      00118 writenum    macro   number          ; literal
                      00119             movlw    number
                      00120             addlw   B'00110000'
                      00121             movwf   dat
                      00122             call WR_DATA
                      00123             endm
                      00124 
                      00125 writenum_reg    macro   reg         ; from a register
                      00126             movfw    reg
                      00127             addlw   B'00110000'
                      00128             movwf   dat
                      00129             call WR_DATA
                      00130             endm
                      00131 
                      00132 
                      00133 ;***************************************
                      00134 ; VECTORS
                      00135 ;***************************************
                      00136 
                      00137     ORG       0x000
0000   2???           00138          goto      init
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139     ORG       0x004
0004   2???           00140         goto    isr
                      00141 
                      00142 
                      00143 ;***************************************
                      00144 ; TABLES (MESSAGES)
                      00145 ;***************************************
0005                  00146 Standby_Msg
0005   0782           00147                 addwf   PCL,F
0006   3453 3454 3441 00148                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00149 Start_Msg
000E   0782           00150         addwf   PCL,F
000F   3449 346E 3473 00151         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00152 End_Msg
0020   0782           00153         addwf   PCL,F
0021   3443 346F 346D 00154         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00155 Time_Msg
002A   0782           00156                 addwf   PCL,F
002B   344F 3470 3465 00157                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
003B                  00158 Seconds
003B   0782           00159         addwf   PCL,F
003C   3420 3473 3465 00160         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00161 Not_present
0045   0782           00162         addwf   PCL,F
0046   343A 3420 344E 00163         dt      ": Not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00164 Pass
0054   0782           00165                 addwf   PCL,F
0055   343A 3420 3450 00166                 dt              ": Pass",0
       3461 3473 3473 
       3400 
005C                  00167 LED_fail
005C   0782           00168                 addwf   PCL,F
005D   343A 3420 344C 00169                 dt              ": LED fail",0
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0068                  00170 Flick_fail
0068   0782           00171                 addwf   PCL,F
0069   343A 3420 3446 00172                 dt              ": Flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00173 Total_Msg
0078   0782           00174         addwf   PCL,F
0079   3454 346F 3474 00175         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00176 LF
0089   0782           00177         addwf   PCL,F
008A   344C 3446 343A 00178         dt      "LF: ",0
       3420 3400 
008F                  00179 FF
008F   0782           00180         addwf   PCL,F
0090   3446 3446 343A 00181         dt      "FF: ",0
       3420 3400 
0095                  00182 None
0095   0782           00183         addwf   PCL,F
0096   343C 346E 346F 00184         dt      "<none>", 0
       346E 3465 343E 
       3400 
009D                  00185 Export_Msg
009D   0782           00186         addwf   PCL,F
009E   3445 3478 3470 00187         dt      "Exporting . . .",0
       346F 3472 3474 
       3469 346E 3467 
       3420 342E 3420 
       342E 3420 342E 
       3400 
00AE                  00188 Logs_Msg1
00AE   0782           00189         addwf   PCL,F
00AF   3431 342D 3434 00190         dt      "1-4 to see log",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3400 
00BE                  00191 Logs_Msg2
00BE   0782           00192         addwf   PCL,F
00BF   3453 3454 3441 00193         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       3400 
                      00194 
                      00195 ;***************************************
                      00196 ; MAIN PROGRAM
                      00197 ;***************************************
                      00198 
00CF                  00199 init
                      00200         movlf     b'10000000', INTCON   ;interrupts enabled
00CF   3080               M         movlw   b'10000000'
00D0   008B               M         movwf   INTCON
                      00201 
00D1   1683           00202         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D2   0185           00203         clrf      TRISA                 ; PortA is output - not yet used
                      00204         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs (rest unused; RB0 may be 
                            external interrupt)
00D3   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D4   0086               M         movwf   TRISB
                      00205                                         ; note can disable keypad to free up these ports during operatio
                            n if necessary.
                      00206         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC (rest unused; [7:6] may be RS-232)
00D5   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D6   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D7   0188           00207         clrf      TRISD                 ; PortD[2:7] is LCD output (rest unused)
                      00208 
00D8   1283           00209         bcf       STATUS,RP0     ; select bank 0
00D9   0185           00210         clrf      PORTA
00DA   0186           00211         clrf      PORTB
00DB   0187           00212         clrf      PORTC
00DC   0188           00213         clrf      PORTD
                      00214 
00DD   2???           00215         call      i2c_common_setup  ;Set up I2C for communication
00DE   2???           00216         call      InitLCD           ;Initialize the LCD
                      00217                 
                      00218         Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
00DF   01A2               M                 clrf    Table_Counter
00E0   0103               M                 clrw
00E1                      M loop_disp
00E1   0822               M         movf    Table_Counter,W
00E2   2???               M                 call    Standby_Msg
00E3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E4   1903               M                 btfsc   STATUS,Z
00E5   2???               M                 goto    end_disp
00E6   2???               M                 call    WR_DATA
00E7   0AA2               M                 incf    Table_Counter,F
00E8   2???               M                 goto    loop_disp
00E9                      M end_disp
00E9   2???           00219         call    Switch_Lines
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00220       
                      00221  ;--------------------------------------------------
                      00222  ;      STANDBY MODE
                      00223 
00EA                  00224 waiting
                      00225         ; Display date and time. 
                      00226         ; Also save starting time for log (will stop updating once we start)
00EA   3032           00227         movlw   "2"                             ;First line shows 20**/**/**
00EB   2???           00228                 call    WR_DATA
00EC   3030           00229                 movlw   "0"
00ED   2???           00230                 call    WR_DATA
                      00231                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00EE   3006               M         movlw   0x06
00EF   1283 1303          M         banksel 0x73
00F1   00F3               M         movwf   0x73
00F2   2???               M         call    read_rtc
00F3   1283 1303          M         banksel 0x75
00F5   0875               M         movf    0x75,w
00F6   2???               M         call    rtc_convert   
00F7   0877           00232                 movfw   0x77
Message[305]: Using default destination of 1 (file).
00F8   08BF           00233         movf    start_year10    ;Save starting year dig10
00F9   2???           00234                 call    WR_DATA
00FA   0878           00235                 movfw   0x78
Message[305]: Using default destination of 1 (file).
00FB   08C0           00236         movf    start_year1    ;Save starting year dig1
00FC   2???           00237                 call    WR_DATA
00FD   302F           00238                 movlw   "/"
00FE   2???           00239                 call    WR_DATA
                      00240                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00FF   3005               M         movlw   0x05
0100   1283 1303          M         banksel 0x73
0102   00F3               M         movwf   0x73
0103   2???               M         call    read_rtc
0104   1283 1303          M         banksel 0x75
0106   0875               M         movf    0x75,w
0107   2???               M         call    rtc_convert   
0108   0877           00241                 movfw   0x77
Message[305]: Using default destination of 1 (file).
0109   08C1           00242         movf    start_month10    ;Save starting month dig10
010A   2???           00243                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010B   0878           00244                 movfw   0x78
Message[305]: Using default destination of 1 (file).
010C   08C2           00245         movf    start_month1    ;Save starting month dig1
010D   2???           00246                 call    WR_DATA
010E   302F           00247                 movlw   "/"
010F   2???           00248                 call    WR_DATA
                      00249                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0110   3004               M         movlw   0x04
0111   1283 1303          M         banksel 0x73
0113   00F3               M         movwf   0x73
0114   2???               M         call    read_rtc
0115   1283 1303          M         banksel 0x75
0117   0875               M         movf    0x75,w
0118   2???               M         call    rtc_convert   
0119   0877           00250                 movfw   0x77
Message[305]: Using default destination of 1 (file).
011A   08C3           00251         movf    start_date10    ;Save starting date dig10
011B   2???           00252                 call    WR_DATA
011C   0878           00253                 movfw   0x78
Message[305]: Using default destination of 1 (file).
011D   08C4           00254         movf    start_date1    ;Save starting date dig1
011E   2???           00255                 call    WR_DATA
                      00256                 spacebar
011F   3014               M             movlw   B'00010100'
0120   2???               M             call    WR_INS
                      00257                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0121   3002               M         movlw   0x02
0122   1283 1303          M         banksel 0x73
0124   00F3               M         movwf   0x73
0125   2???               M         call    read_rtc
0126   1283 1303          M         banksel 0x75
0128   0875               M         movf    0x75,w
0129   2???               M         call    rtc_convert   
012A   0877           00258                 movfw   0x77
Message[305]: Using default destination of 1 (file).
012B   08C5           00259         movf    start_hour10    ;Save starting hour dig10
012C   2???           00260                 call    WR_DATA
012D   0878           00261                 movfw   0x78
Message[305]: Using default destination of 1 (file).
012E   08C6           00262         movf    start_hour1    ;Save starting hour dig1
012F   2???           00263                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0130   303A           00264                 movlw   ":"
0131   2???           00265                 call    WR_DATA
                      00266                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0132   3001               M         movlw   0x01
0133   1283 1303          M         banksel 0x73
0135   00F3               M         movwf   0x73
0136   2???               M         call    read_rtc
0137   1283 1303          M         banksel 0x75
0139   0875               M         movf    0x75,w
013A   2???               M         call    rtc_convert   
013B   0877           00267                 movfw   0x77
Message[305]: Using default destination of 1 (file).
013C   08C7           00268         movf    start_min10    ;Save starting min dig10
013D   2???           00269                 call    WR_DATA
013E   0878           00270                 movfw   0x78
Message[305]: Using default destination of 1 (file).
013F   08C8           00271         movf    start_min1    ;Save starting min dig1
0140   2???           00272                 call    WR_DATA
                      00273                       
                      00274         ; Move cursor back to start of second line
                      00275         ; We will update displayed time but not the word "STANDBY"
0141   30C0           00276         movlw   B'11000000'
0142   2???           00277         call    WR_INS
                      00278 
                      00279         ;Poll to start (will have to hold key for ~0.5sec)
0143   1C86           00280          btfss          PORTB,1     ;Wait until data is available from the keypad
0144   2???           00281          goto           waiting
                      00282 
0145   0E06           00283          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0146   390F           00284          andlw          0x0F
0147   00A0           00285          movwf      keytemp
0148   3A0C           00286          xorlw      0xC         ;Will be all zeros if its "START"
0149   1903           00287          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
014A   2???           00288          goto       start
                      00289 
014B   0820           00290          movf       keytemp,W     ;Go to log interface
014C   3A0E           00291          xorlw      0xE
014D   1903           00292          btfsc      STATUS,Z
014E   2???           00293          goto       logs
                      00294 
014F   1886           00295          btfsc          PORTB,1     ;Wait until key is released
0150   2???           00296          goto           $-1
0151   2???           00297          goto       waiting
                      00298 
                      00299 ;-----------------------------------------------------------
                      00300 ;       ACTUAL OPERATION (I'm just adding values manually now)
                      00301 
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0152                  00302 start
                      00303         ;Start the timer
                      00304         movlf       D'38', count38
0152   3026               M         movlw   D'38'
0153   00AF               M         movwf   count38
0154   01B2           00305         clrf        op_time
0155   168B           00306         bsf         INTCON, T0IE ;enable Timer0 interrupt
0156   0181           00307         clrf        TMR0
0157   1683 1303      00308         banksel     OPTION_REG
                      00309         movlf       B'11000111', OPTION_REG ; 1:256 prescaler
0159   30C7               M         movlw   B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015A   0081               M         movwf   OPTION_REG
015B   1283           00310         bcf        STATUS,RP0     ; back to bank 0
                      00311 
                      00312         ;Display starting message
015C   2???           00313         call        Clear_Display
                      00314         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
015D   01A2               M                 clrf    Table_Counter
015E   0103               M                 clrw
015F                      M loop_disp
015F   0822               M         movf    Table_Counter,W
0160   2???               M                 call    Start_Msg
0161   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0162   1903               M                 btfsc   STATUS,Z
0163   2???               M                 goto    end_disp
0164   2???               M                 call    WR_DATA
0165   0AA2               M                 incf    Table_Counter,F
0166   2???               M                 goto    loop_disp
0167                      M end_disp
                      00315 
                      00316         ; just delaying for now 
0167   2???           00317         call        HalfS
0168   2???           00318         call        HalfS
0169   2???           00319         call        HalfS
016A   2???           00320         call        HalfS
016B   2???           00321         call        HalfS
016C   2???           00322         call        HalfS
                      00323         
                      00324         ; Putting values in manually. This will be done automatically in main program
                      00325         movlf     B'00', state1     ;not present
016D   3000               M         movlw   B'00'
016E   00B3               M         movwf   state1
                      00326         movlf     B'01', state2     ;pass
016F   3001               M         movlw   B'01'
0170   00B4               M         movwf   state2
                      00327         movlf     B'11', state3     ;flicker fail
0171   3003               M         movlw   B'11'
0172   00B5               M         movwf   state3
                      00328         movlf     B'11', state4     ;flicker fail
0173   3003               M         movlw   B'11'
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0174   00B6               M         movwf   state4
                      00329         movlf     B'01', state5     ;pass
0175   3001               M         movlw   B'01'
0176   00B7               M         movwf   state5
                      00330         movlf     B'01', state6     ;pass
0177   3001               M         movlw   B'01'
0178   00B8               M         movwf   state6
                      00331         movlf     B'01', state7     ;pass
0179   3001               M         movlw   B'01'
017A   00B9               M         movwf   state7
                      00332         movlf     B'11', state8     ;flicker fail
017B   3003               M         movlw   B'11'
017C   00BA               M         movwf   state8
                      00333         movlf     B'00', state9     ;not present
017D   3000               M         movlw   B'00'
017E   00BB               M         movwf   state9
                      00334         movlf     D'0', num_LF
017F   3000               M         movlw   D'0'
0180   00BC               M         movwf   num_LF
                      00335         movlf     D'2', num_FF
0181   3002               M         movlw   D'2'
0182   00BD               M         movwf   num_FF
                      00336         movlf     D'7', num_tot
0183   3007               M         movlw   D'7'
0184   00BE               M         movwf   num_tot
                      00337 
                      00338         ; Stop the timer
0185   128B           00339          bcf         INTCON, T0IE  ;disable Timer0 interrupt
                      00340 
                      00341         ; Display ending messages
0186   2???           00342         call       Clear_Display
                      00343         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0187   01A2               M                 clrf    Table_Counter
0188   0103               M                 clrw
0189                      M loop_disp
0189   0822               M         movf    Table_Counter,W
018A   2???               M                 call    End_Msg
018B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
018C   1903               M                 btfsc   STATUS,Z
018D   2???               M                 goto    end_disp
018E   2???               M                 call    WR_DATA
018F   0AA2               M                 incf    Table_Counter,F
0190   2???               M                 goto    loop_disp
0191                      M end_disp
0191   2???           00344         call       HalfS
0192   2???           00345         call       time             ; "Operation time: X sec"
0193   2???           00346         call       HalfS
0194   2???           00347         call       HalfS
0195   2???           00348         call       summary          ; "Total candles: X. Defective: Y"
0196   2???           00349         call       HalfS
0197   2???           00350         call       HalfS
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0198   2???           00351         call       defective        ; "FF: a b c. LF: d e f"
                      00352 ;-----------------------------------------------------------------------
                      00353 ; Data display interface
                      00354 
0199   1C86           00355 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
019A   2???           00356          goto           $-1
                      00357 
019B   0E06           00358          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019C   390F           00359          andlw          0x0F
019D   2???           00360          call       information ;Do the right thing
                      00361 
019E   1886           00362          btfsc          PORTB,1     ;Wait until key is released
019F   2???           00363          goto           $-1
01A0   2???           00364          goto       poll
                      00365 
                      00366 
                      00367 ;-------------------------------------------------------------------------
                      00368 ; LOGS INTERFACE            (DONT ACTUALLY HAVE LOGS YET!)
                      00369 ; Eventually this will show logs
                      00370 ; Right now it just displays random crap
                      00371 ; Access from STANDBY and return to STANDBY
                      00372 
01A1                  00373 logs
01A1   2???           00374     call    Clear_Display
                      00375     Display Logs_Msg1
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01A2   01A2               M                 clrf    Table_Counter
01A3   0103               M                 clrw
01A4                      M loop_disp
01A4   0822               M         movf    Table_Counter,W
01A5   2???               M                 call    Logs_Msg1
01A6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01A7   1903               M                 btfsc   STATUS,Z
01A8   2???               M                 goto    end_disp
01A9   2???               M                 call    WR_DATA
01AA   0AA2               M                 incf    Table_Counter,F
01AB   2???               M                 goto    loop_disp
01AC                      M end_disp
01AC   2???           00376     call    Switch_Lines
                      00377     Display Logs_Msg2
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01AD   01A2               M                 clrf    Table_Counter
01AE   0103               M                 clrw
01AF                      M loop_disp
01AF   0822               M         movf    Table_Counter,W
01B0   2???               M                 call    Logs_Msg2
01B1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01B2   1903               M                 btfsc   STATUS,Z
01B3   2???               M                 goto    end_disp
01B4   2???               M                 call    WR_DATA
01B5   0AA2               M                 incf    Table_Counter,F
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B6   2???               M                 goto    loop_disp
01B7                      M end_disp
                      00378 
01B7                  00379 polling
01B7   1C86           00380     btfss               PORTB,1     ;Wait until data is available from the keypad
01B8   2???           00381     goto                $-1
                      00382 
01B9   0E06           00383     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
01BA   390F           00384     andlw               0x0F
01BB   00A0           00385     movwf       keytemp     ; Save which key was pressed
                      00386 
01BC                  00387 check_log1
01BC   3A00           00388     xorlw   0x0         ;will be all zeros if its 1
01BD   1D03           00389     btfss   STATUS,Z    ;and Z will be high, so skip
01BE   2???           00390     goto    check_log2
01BF   2???           00391     call    Clear_Display
                      00392     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01C0   01A2               M                 clrf    Table_Counter
01C1   0103               M                 clrw
01C2                      M loop_disp
01C2   0822               M         movf    Table_Counter,W
01C3   2???               M                 call    None
01C4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C5   1903               M                 btfsc   STATUS,Z
01C6   2???               M                 goto    end_disp
01C7   2???               M                 call    WR_DATA
01C8   0AA2               M                 incf    Table_Counter,F
01C9   2???               M                 goto    loop_disp
01CA                      M end_disp
01CA   2???           00393     call    HalfS
01CB   2???           00394     goto    logs
                      00395 
01CC                  00396 check_log2
01CC   0820           00397     movf    keytemp, W
01CD   3A01           00398     xorlw   0x1
01CE   1D03           00399     btfss   STATUS,Z
01CF   2???           00400     goto    check_log3
01D0   2???           00401     call    Clear_Display
                      00402     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01D1   01A2               M                 clrf    Table_Counter
01D2   0103               M                 clrw
01D3                      M loop_disp
01D3   0822               M         movf    Table_Counter,W
01D4   2???               M                 call    None
01D5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D6   1903               M                 btfsc   STATUS,Z
01D7   2???               M                 goto    end_disp
01D8   2???               M                 call    WR_DATA
01D9   0AA2               M                 incf    Table_Counter,F
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DA   2???               M                 goto    loop_disp
01DB                      M end_disp
01DB   2???           00403     call    HalfS
01DC   2???           00404     goto    logs
                      00405 
01DD                  00406 check_log3
01DD   0820           00407     movf    keytemp, W
01DE   3A02           00408     xorlw   0x2
01DF   1D03           00409     btfss   STATUS,Z
01E0   2???           00410     goto    check_log4
01E1   2???           00411     call    Clear_Display
                      00412     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01E2   01A2               M                 clrf    Table_Counter
01E3   0103               M                 clrw
01E4                      M loop_disp
01E4   0822               M         movf    Table_Counter,W
01E5   2???               M                 call    None
01E6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E7   1903               M                 btfsc   STATUS,Z
01E8   2???               M                 goto    end_disp
01E9   2???               M                 call    WR_DATA
01EA   0AA2               M                 incf    Table_Counter,F
01EB   2???               M                 goto    loop_disp
01EC                      M end_disp
01EC   2???           00413     call    HalfS
01ED   2???           00414     goto    logs
                      00415 
01EE                  00416 check_log4
01EE   0820           00417     movf    keytemp, W
01EF   3A04           00418     xorlw   0x4
01F0   1D03           00419     btfss   STATUS,Z
01F1   2???           00420     goto    check_done
01F2   2???           00421     call    Clear_Display
                      00422     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01F3   01A2               M                 clrf    Table_Counter
01F4   0103               M                 clrw
01F5                      M loop_disp
01F5   0822               M         movf    Table_Counter,W
01F6   2???               M                 call    None
01F7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F8   1903               M                 btfsc   STATUS,Z
01F9   2???               M                 goto    end_disp
01FA   2???               M                 call    WR_DATA
01FB   0AA2               M                 incf    Table_Counter,F
01FC   2???               M                 goto    loop_disp
01FD                      M end_disp
01FD   2???           00423     call    HalfS
01FE   2???           00424     goto    logs
                      00425 
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01FF                  00426 check_done
01FF   0820           00427     movf    keytemp, W
0200   3A0D           00428     xorlw   0xD
0201   1D03           00429     btfss   STATUS,Z
0202   2???           00430     goto    badkey
0203   2???           00431     call    Clear_Display
                      00432     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0204   01A2               M                 clrf    Table_Counter
0205   0103               M                 clrw
0206                      M loop_disp
0206   0822               M         movf    Table_Counter,W
0207   2???               M                 call    Standby_Msg
0208   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0209   1903               M                 btfsc   STATUS,Z
020A   2???               M                 goto    end_disp
020B   2???               M                 call    WR_DATA
020C   0AA2               M                 incf    Table_Counter,F
020D   2???               M                 goto    loop_disp
020E                      M end_disp
020E   2???           00433     call    Switch_Lines
020F   2???           00434     goto    waiting
                      00435 
0210                  00436 badkey
0210   1886           00437     btfsc               PORTB,1     ;Wait until key is released
0211   2???           00438     goto                $-1
0212   2???           00439     goto        polling
                      00440   
                      00441 ; END OF MAIN PROGRAM
                      00442 ;------------------------------------------------------------
                      00443 
                      00444 
                      00445 ;***************************************
                      00446 ; DATA DISPLAY ROUTINE
                      00447 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00448 ; Determines which key it was and displays appropriate info / branch
                      00449 ;***************************************
                      00450 
0213                  00451 information
0213   00A0           00452     movwf   keytemp             ; Save which key was pressed
                      00453 
0214                  00454 check_1
0214   3A00           00455     xorlw   0x0         ;will be all zeros if its 1
0215   1D03           00456     btfss   STATUS,Z    ;and Z will be high, so skip
0216   2???           00457     goto    check_2
0217   2???           00458     call    Clear_Display
                      00459     writenum 0x1
0218   3001               M             movlw    0x1
0219   3E30               M             addlw   B'00110000'
021A   00A4               M             movwf   dat
021B   2???               M             call WR_DATA
021C   0833           00460     movf    state1, W
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

021D   2???           00461     call    display_state
021E   0008           00462     return
                      00463 
021F                  00464 check_2
021F   0820           00465     movf    keytemp, W
0220   3A01           00466     xorlw   0x1
0221   1D03           00467     btfss   STATUS,Z
0222   2???           00468     goto    check_3
0223   2???           00469     call    Clear_Display
                      00470     writenum 0x2
0224   3002               M             movlw    0x2
0225   3E30               M             addlw   B'00110000'
0226   00A4               M             movwf   dat
0227   2???               M             call WR_DATA
0228   0834           00471     movf    state2, W
0229   2???           00472     call    display_state
022A   0008           00473     return
                      00474 
022B                  00475 check_3
022B   0820           00476     movf    keytemp, W
022C   3A02           00477     xorlw   0x2
022D   1D03           00478     btfss   STATUS,Z
022E   2???           00479     goto    check_4
022F   2???           00480     call    Clear_Display
                      00481     writenum 0x3
0230   3003               M             movlw    0x3
0231   3E30               M             addlw   B'00110000'
0232   00A4               M             movwf   dat
0233   2???               M             call WR_DATA
0234   0835           00482     movf    state3, W
0235   2???           00483     call    display_state
0236   0008           00484     return
                      00485 
0237                  00486 check_4
0237   0820           00487     movf    keytemp, W
0238   3A04           00488     xorlw   0x4
0239   1D03           00489     btfss   STATUS,Z
023A   2???           00490     goto    check_5
023B   2???           00491     call    Clear_Display
                      00492     writenum 0x4
023C   3004               M             movlw    0x4
023D   3E30               M             addlw   B'00110000'
023E   00A4               M             movwf   dat
023F   2???               M             call WR_DATA
0240   0836           00493     movf    state4, W
0241   2???           00494     call    display_state
0242   0008           00495     return
                      00496 
0243                  00497 check_5
0243   0820           00498     movf    keytemp, W
0244   3A05           00499     xorlw   0x5
0245   1D03           00500     btfss   STATUS,Z
0246   2???           00501     goto    check_6
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0247   2???           00502     call    Clear_Display
                      00503     writenum 0x5
0248   3005               M             movlw    0x5
0249   3E30               M             addlw   B'00110000'
024A   00A4               M             movwf   dat
024B   2???               M             call WR_DATA
024C   0837           00504     movf    state5, W
024D   2???           00505     call    display_state
024E   0008           00506     return
                      00507 
024F                  00508 check_6
024F   0820           00509     movf    keytemp, W
0250   3A06           00510     xorlw   0x6
0251   1D03           00511     btfss   STATUS,Z
0252   2???           00512     goto    check_7
0253   2???           00513     call    Clear_Display
                      00514     writenum 0x6
0254   3006               M             movlw    0x6
0255   3E30               M             addlw   B'00110000'
0256   00A4               M             movwf   dat
0257   2???               M             call WR_DATA
0258   0838           00515     movf    state6, W
0259   2???           00516     call    display_state
025A   0008           00517     return
                      00518 
025B                  00519 check_7
025B   0820           00520     movf    keytemp, W
025C   3A08           00521     xorlw   0x8
025D   1D03           00522     btfss   STATUS,Z
025E   2???           00523     goto    check_8
025F   2???           00524     call    Clear_Display
                      00525     writenum 0x7
0260   3007               M             movlw    0x7
0261   3E30               M             addlw   B'00110000'
0262   00A4               M             movwf   dat
0263   2???               M             call WR_DATA
0264   0839           00526     movf    state7, W
0265   2???           00527     call    display_state
0266   0008           00528     return
                      00529 
0267                  00530 check_8
0267   0820           00531     movf    keytemp, W
0268   3A09           00532     xorlw   0x9
0269   1D03           00533     btfss   STATUS,Z
026A   2???           00534     goto    check_9
026B   2???           00535     call    Clear_Display
                      00536     writenum 0x8
026C   3008               M             movlw    0x8
026D   3E30               M             addlw   B'00110000'
026E   00A4               M             movwf   dat
026F   2???               M             call WR_DATA
0270   083A           00537     movf    state8, W
0271   2???           00538     call    display_state
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0272   0008           00539     return
                      00540 
0273                  00541 check_9
0273   0820           00542     movf    keytemp, W
0274   3A0A           00543     xorlw   0xA
0275   1D03           00544     btfss   STATUS,Z
0276   2???           00545     goto    check_summary
0277   2???           00546     call    Clear_Display
                      00547     writenum 0x9
0278   3009               M             movlw    0x9
0279   3E30               M             addlw   B'00110000'
027A   00A4               M             movwf   dat
027B   2???               M             call WR_DATA
027C   083B           00548     movf    state9, W
027D   2???           00549     call    display_state
027E   0008           00550     return
                      00551 
027F                  00552 check_summary
027F   0820           00553     movf    keytemp, W
0280   3A03           00554     xorlw   0x3
0281   1D03           00555     btfss   STATUS,Z
0282   2???           00556     goto    check_defective
0283   2???           00557     call    summary
0284   0008           00558     return
                      00559 
0285                  00560 check_defective
0285   0820           00561     movf    keytemp, W
0286   3A07           00562     xorlw   0x7
0287   1D03           00563     btfss   STATUS,Z
0288   2???           00564     goto    check_time
0289   2???           00565     call    defective
028A   0008           00566     return
                      00567 
028B                  00568 check_time
028B   0820           00569     movf    keytemp, W
028C   3A0B           00570     xorlw   0xB
028D   1D03           00571     btfss   STATUS,Z
028E   2???           00572     goto    check_export
028F   2???           00573     call    time
0290   0008           00574     return
                      00575 
0291                  00576 check_export                ;doesn't actually export yet
0291   0820           00577     movf    keytemp, W
0292   3A0F           00578     xorlw   0xF
0293   1D03           00579     btfss   STATUS,Z
0294   2???           00580     goto    check_standby
0295   2???           00581     call    export
0296   0008           00582     return
                      00583 
0297                  00584 check_standby
0297   0820           00585     movf    keytemp, W
0298   3A0D           00586     xorlw   0xD
0299   1D03           00587     btfss   STATUS,Z
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029A   2???           00588     goto    check_start
029B   2???           00589     call    Clear_Display
                      00590     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
029C   01A2               M                 clrf    Table_Counter
029D   0103               M                 clrw
029E                      M loop_disp
029E   0822               M         movf    Table_Counter,W
029F   2???               M                 call    Standby_Msg
02A0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A1   1903               M                 btfsc   STATUS,Z
02A2   2???               M                 goto    end_disp
02A3   2???               M                 call    WR_DATA
02A4   0AA2               M                 incf    Table_Counter,F
02A5   2???               M                 goto    loop_disp
02A6                      M end_disp
02A6   2???           00591     call    Switch_Lines
02A7   2???           00592     goto    waiting
                      00593 
02A8                  00594 check_start
02A8   0820           00595     movf    keytemp, W
02A9   3A0C           00596     xorlw   0xC
02AA   1D03           00597     btfss   STATUS,Z
02AB   2???           00598     goto    default_key
02AC   2???           00599     goto    start
                      00600 
02AD                  00601 default_key         ; will never get here
02AD   0008           00602     return
                      00603 
                      00604 
                      00605 ;Display state subroutine
                      00606 ;stateN is in W
02AE                  00607 display_state
02AE   00A1           00608     movwf  statetemp    ; save stateN
                      00609 
02AF                  00610 check_none
02AF   3A00           00611     xorlw   0x0
02B0   1D03           00612     btfss   STATUS,Z
02B1   2???           00613     goto    check_pass
                      00614     Display Not_present
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02B2   01A2               M                 clrf    Table_Counter
02B3   0103               M                 clrw
02B4                      M loop_disp
02B4   0822               M         movf    Table_Counter,W
02B5   2???               M                 call    Not_present
02B6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B7   1903               M                 btfsc   STATUS,Z
02B8   2???               M                 goto    end_disp
02B9   2???               M                 call    WR_DATA
02BA   0AA2               M                 incf    Table_Counter,F
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02BB   2???               M                 goto    loop_disp
02BC                      M end_disp
02BC   0008           00615     return
                      00616 
02BD                  00617 check_pass
02BD   0821           00618     movf    statetemp, W
02BE   3A01           00619     xorlw   0x1
02BF   1D03           00620     btfss   STATUS,Z
02C0   2???           00621     goto    check_LED
                      00622     Display Pass
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02C1   01A2               M                 clrf    Table_Counter
02C2   0103               M                 clrw
02C3                      M loop_disp
02C3   0822               M         movf    Table_Counter,W
02C4   2???               M                 call    Pass
02C5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C6   1903               M                 btfsc   STATUS,Z
02C7   2???               M                 goto    end_disp
02C8   2???               M                 call    WR_DATA
02C9   0AA2               M                 incf    Table_Counter,F
02CA   2???               M                 goto    loop_disp
02CB                      M end_disp
02CB   0008           00623     return
                      00624 
02CC                  00625 check_LED
02CC   0821           00626     movf    statetemp, W
02CD   3A02           00627     xorlw   0x2
02CE   1D03           00628     btfss   STATUS,Z
02CF   2???           00629     goto    check_flick
                      00630     Display LED_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02D0   01A2               M                 clrf    Table_Counter
02D1   0103               M                 clrw
02D2                      M loop_disp
02D2   0822               M         movf    Table_Counter,W
02D3   2???               M                 call    LED_fail
02D4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D5   1903               M                 btfsc   STATUS,Z
02D6   2???               M                 goto    end_disp
02D7   2???               M                 call    WR_DATA
02D8   0AA2               M                 incf    Table_Counter,F
02D9   2???               M                 goto    loop_disp
02DA                      M end_disp
02DA   0008           00631     return
                      00632 
02DB                  00633 check_flick
02DB   0821           00634     movf    statetemp, W
02DC   3A03           00635     xorlw   0x3
02DD   1D03           00636     btfss   STATUS,Z
02DE   2???           00637     goto    default_state
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00638     Display Flick_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02DF   01A2               M                 clrf    Table_Counter
02E0   0103               M                 clrw
02E1                      M loop_disp
02E1   0822               M         movf    Table_Counter,W
02E2   2???               M                 call    Flick_fail
02E3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E4   1903               M                 btfsc   STATUS,Z
02E5   2???               M                 goto    end_disp
02E6   2???               M                 call    WR_DATA
02E7   0AA2               M                 incf    Table_Counter,F
02E8   2???               M                 goto    loop_disp
02E9                      M end_disp
02E9   0008           00639     return
                      00640 
02EA                  00641 default_state   ; should never get here
02EA   0008           00642     return
                      00643 
                      00644 ; Summary Subroutine
                      00645 ; Displays total number of candles and number of defective candles
                      00646 ; Reads data from num_tot, num_LF, num_FF
02EB                  00647 summary
02EB   2???           00648     call            Clear_Display
                      00649     Display         Total_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02EC   01A2               M                 clrf    Table_Counter
02ED   0103               M                 clrw
02EE                      M loop_disp
02EE   0822               M         movf    Table_Counter,W
02EF   2???               M                 call    Total_Msg
02F0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F1   1903               M                 btfsc   STATUS,Z
02F2   2???               M                 goto    end_disp
02F3   2???               M                 call    WR_DATA
02F4   0AA2               M                 incf    Table_Counter,F
02F5   2???               M                 goto    loop_disp
02F6                      M end_disp
                      00650     writenum_reg    num_tot
02F6   083E               M             movfw    num_tot
02F7   3E30               M             addlw   B'00110000'
02F8   00A4               M             movwf   dat
02F9   2???               M             call WR_DATA
02FA   2???           00651     call            Switch_Lines
                      00652     Display         LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02FB   01A2               M                 clrf    Table_Counter
02FC   0103               M                 clrw
02FD                      M loop_disp
02FD   0822               M         movf    Table_Counter,W
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02FE   2???               M                 call    LF
02FF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0300   1903               M                 btfsc   STATUS,Z
0301   2???               M                 goto    end_disp
0302   2???               M                 call    WR_DATA
0303   0AA2               M                 incf    Table_Counter,F
0304   2???               M                 goto    loop_disp
0305                      M end_disp
                      00653     writenum_reg    num_LF
0305   083C               M             movfw    num_LF
0306   3E30               M             addlw   B'00110000'
0307   00A4               M             movwf   dat
0308   2???               M             call WR_DATA
                      00654     spacebar
0309   3014               M             movlw   B'00010100'
030A   2???               M             call    WR_INS
                      00655     spacebar
030B   3014               M             movlw   B'00010100'
030C   2???               M             call    WR_INS
                      00656     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
030D   01A2               M                 clrf    Table_Counter
030E   0103               M                 clrw
030F                      M loop_disp
030F   0822               M         movf    Table_Counter,W
0310   2???               M                 call    FF
0311   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0312   1903               M                 btfsc   STATUS,Z
0313   2???               M                 goto    end_disp
0314   2???               M                 call    WR_DATA
0315   0AA2               M                 incf    Table_Counter,F
0316   2???               M                 goto    loop_disp
0317                      M end_disp
                      00657     writenum_reg    num_FF
0317   083D               M             movfw    num_FF
0318   3E30               M             addlw   B'00110000'
0319   00A4               M             movwf   dat
031A   2???               M             call WR_DATA
031B   0008           00658     return
                      00659 
                      00660 ; Defective candles Subroutine
                      00661 ; Displays index of each defective candle (LF or FF)
                      00662 ; Reads data from state1 - state9
031C                  00663 defective
031C   2???           00664     call            Clear_Display
                      00665 
                      00666     Display         LF              ; first look at LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
031D   01A2               M                 clrf    Table_Counter
031E   0103               M                 clrw
031F                      M loop_disp
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

031F   0822               M         movf    Table_Counter,W
0320   2???               M                 call    LF
0321   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0322   1903               M                 btfsc   STATUS,Z
0323   2???               M                 goto    end_disp
0324   2???               M                 call    WR_DATA
0325   0AA2               M                 incf    Table_Counter,F
0326   2???               M                 goto    loop_disp
0327                      M end_disp
0327   08BC           00667     movf            num_LF, F
0328   1D03           00668     btfss           STATUS,Z         ;if none LF, just say "none"
0329   2???           00669     goto            check_LF
                      00670     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
032A   01A2               M                 clrf    Table_Counter
032B   0103               M                 clrw
032C                      M loop_disp
032C   0822               M         movf    Table_Counter,W
032D   2???               M                 call    None
032E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032F   1903               M                 btfsc   STATUS,Z
0330   2???               M                 goto    end_disp
0331   2???               M                 call    WR_DATA
0332   0AA2               M                 incf    Table_Counter,F
0333   2???               M                 goto    loop_disp
0334                      M end_disp
0334   2???           00671     goto            now_FF
                      00672 
0335                  00673 check_LF                            ; list all LF candles
0335   3002           00674     movlw           B'00000010'
0336   2???           00675     call            check_for_fail
                      00676 
0337                  00677 now_FF                              ; now look at FF
0337   2???           00678     call            Switch_Lines
                      00679     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0338   01A2               M                 clrf    Table_Counter
0339   0103               M                 clrw
033A                      M loop_disp
033A   0822               M         movf    Table_Counter,W
033B   2???               M                 call    FF
033C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
033D   1903               M                 btfsc   STATUS,Z
033E   2???               M                 goto    end_disp
033F   2???               M                 call    WR_DATA
0340   0AA2               M                 incf    Table_Counter,F
0341   2???               M                 goto    loop_disp
0342                      M end_disp
0342   08BD           00680     movf            num_FF, F
0343   1D03           00681     btfss           STATUS,Z         ;if none FF, just say "none"
0344   2???           00682     goto            check_FF
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00683     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0345   01A2               M                 clrf    Table_Counter
0346   0103               M                 clrw
0347                      M loop_disp
0347   0822               M         movf    Table_Counter,W
0348   2???               M                 call    None
0349   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
034A   1903               M                 btfsc   STATUS,Z
034B   2???               M                 goto    end_disp
034C   2???               M                 call    WR_DATA
034D   0AA2               M                 incf    Table_Counter,F
034E   2???               M                 goto    loop_disp
034F                      M end_disp
034F   0008           00684     return
                      00685 
0350                  00686 check_FF                            ; list all FF candles
0350   3003           00687     movlw           B'00000011'
0351   2???           00688     call            check_for_fail
0352   0008           00689     return
                      00690 
0353                  00691 check_for_fail  ;lists all candles that have status currently in W
0353   00A1           00692     movwf           statetemp
0354                  00693 one
0354   0233           00694     subwf           state1, W          ;defective state1 = W
0355   1D03           00695     btfss           STATUS,Z
0356   2???           00696     goto            two
                      00697     writenum        0x1
0357   3001               M             movlw    0x1
0358   3E30               M             addlw   B'00110000'
0359   00A4               M             movwf   dat
035A   2???               M             call WR_DATA
                      00698     spacebar
035B   3014               M             movlw   B'00010100'
035C   2???               M             call    WR_INS
035D                  00699 two
035D   0821           00700     movf            statetemp, W
035E   0234           00701     subwf           state2, W          ;defective state1 = W
035F   1D03           00702     btfss           STATUS,Z
0360   2???           00703     goto            three
                      00704     writenum        0x2
0361   3002               M             movlw    0x2
0362   3E30               M             addlw   B'00110000'
0363   00A4               M             movwf   dat
0364   2???               M             call WR_DATA
                      00705     spacebar
0365   3014               M             movlw   B'00010100'
0366   2???               M             call    WR_INS
0367                  00706 three
0367   0821           00707     movf            statetemp, W
0368   0235           00708     subwf           state3, W          ;defective state1 = W
0369   1D03           00709     btfss           STATUS,Z
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036A   2???           00710     goto            four
                      00711     writenum        0x3
036B   3003               M             movlw    0x3
036C   3E30               M             addlw   B'00110000'
036D   00A4               M             movwf   dat
036E   2???               M             call WR_DATA
                      00712     spacebar
036F   3014               M             movlw   B'00010100'
0370   2???               M             call    WR_INS
0371                  00713 four
0371   0821           00714     movf            statetemp, W
0372   0236           00715     subwf           state4, W          ;defective state1 = W
0373   1D03           00716     btfss           STATUS,Z
0374   2???           00717     goto            five
                      00718     writenum        0x4
0375   3004               M             movlw    0x4
0376   3E30               M             addlw   B'00110000'
0377   00A4               M             movwf   dat
0378   2???               M             call WR_DATA
                      00719     spacebar
0379   3014               M             movlw   B'00010100'
037A   2???               M             call    WR_INS
037B                  00720 five
037B   0821           00721     movf            statetemp, W
037C   0237           00722     subwf           state5, W          ;defective state1 = W
037D   1D03           00723     btfss           STATUS,Z
037E   2???           00724     goto            six
                      00725     writenum        0x5
037F   3005               M             movlw    0x5
0380   3E30               M             addlw   B'00110000'
0381   00A4               M             movwf   dat
0382   2???               M             call WR_DATA
                      00726     spacebar
0383   3014               M             movlw   B'00010100'
0384   2???               M             call    WR_INS
0385                  00727 six
0385   0821           00728     movf            statetemp, W
0386   0238           00729     subwf           state6, W          ;defective state1 = W
0387   1D03           00730     btfss           STATUS,Z
0388   2???           00731     goto            seven
                      00732     writenum        0x6
0389   3006               M             movlw    0x6
038A   3E30               M             addlw   B'00110000'
038B   00A4               M             movwf   dat
038C   2???               M             call WR_DATA
                      00733     spacebar
038D   3014               M             movlw   B'00010100'
038E   2???               M             call    WR_INS
038F                  00734 seven
038F   0821           00735     movf            statetemp, W
0390   0239           00736     subwf           state7, W          ;defective state1 = W
0391   1D03           00737     btfss           STATUS,Z
0392   2???           00738     goto            eight
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00739     writenum        0x7
0393   3007               M             movlw    0x7
0394   3E30               M             addlw   B'00110000'
0395   00A4               M             movwf   dat
0396   2???               M             call WR_DATA
                      00740     spacebar
0397   3014               M             movlw   B'00010100'
0398   2???               M             call    WR_INS
0399                  00741 eight
0399   0821           00742     movf            statetemp, W
039A   023A           00743     subwf           state8, W          ;defective state1 = W
039B   1D03           00744     btfss           STATUS,Z
039C   2???           00745     goto            nine
                      00746     writenum        0x8
039D   3008               M             movlw    0x8
039E   3E30               M             addlw   B'00110000'
039F   00A4               M             movwf   dat
03A0   2???               M             call WR_DATA
                      00747     spacebar
03A1   3014               M             movlw   B'00010100'
03A2   2???               M             call    WR_INS
03A3                  00748 nine
03A3   0821           00749     movf            statetemp, W
03A4   023B           00750     subwf           state9, W          ;defective state1 = W
03A5   1D03           00751     btfss           STATUS,Z
03A6   2???           00752     goto            end_check_fail
                      00753     writenum        0x9
03A7   3009               M             movlw    0x9
03A8   3E30               M             addlw   B'00110000'
03A9   00A4               M             movwf   dat
03AA   2???               M             call WR_DATA
03AB                  00754 end_check_fail
03AB   0008           00755     return
                      00756 
                      00757 ; Time subroutine
                      00758 ; Right now this takes the time in seconds as a binary number in op_time
                      00759 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00760 ; incremented every second. However I may just take the stop time - start time
                      00761 ; from the RTC data so this might change a lot.
03AC                  00762 time
03AC   2???           00763     call    Clear_Display
                      00764     Display Time_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03AD   01A2               M                 clrf    Table_Counter
03AE   0103               M                 clrw
03AF                      M loop_disp
03AF   0822               M         movf    Table_Counter,W
03B0   2???               M                 call    Time_Msg
03B1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03B2   1903               M                 btfsc   STATUS,Z
03B3   2???               M                 goto    end_disp
03B4   2???               M                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03B5   0AA2               M                 incf    Table_Counter,F
03B6   2???               M                 goto    loop_disp
03B7                      M end_disp
03B7   2???           00765     call    Switch_Lines
03B8   0832           00766     movf    op_time, W
03B9   2???           00767     call    big_number
03BA   082B           00768     movf    huns, W
03BB   1903           00769     btfsc   STATUS,Z        ;if huns is zero don't display it
03BC   2???           00770     goto    no_huns
                      00771     writenum_reg    huns
03BD   082B               M             movfw    huns
03BE   3E30               M             addlw   B'00110000'
03BF   00A4               M             movwf   dat
03C0   2???               M             call WR_DATA
03C1                  00772 no_huns
03C1   082C           00773     movf    tens, W
03C2   1903           00774     btfsc   STATUS,Z        ;if tens is zero don't display it
03C3   2???           00775     goto    no_tens
                      00776     writenum_reg    tens
03C4   082C               M             movfw    tens
03C5   3E30               M             addlw   B'00110000'
03C6   00A4               M             movwf   dat
03C7   2???               M             call WR_DATA
03C8                  00777 no_tens
                      00778     writenum_reg    ones
03C8   082D               M             movfw    ones
03C9   3E30               M             addlw   B'00110000'
03CA   00A4               M             movwf   dat
03CB   2???               M             call WR_DATA
                      00779     Display Seconds
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03CC   01A2               M                 clrf    Table_Counter
03CD   0103               M                 clrw
03CE                      M loop_disp
03CE   0822               M         movf    Table_Counter,W
03CF   2???               M                 call    Seconds
03D0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03D1   1903               M                 btfsc   STATUS,Z
03D2   2???               M                 goto    end_disp
03D3   2???               M                 call    WR_DATA
03D4   0AA2               M                 incf    Table_Counter,F
03D5   2???               M                 goto    loop_disp
03D6                      M end_disp
03D6   0008           00780     return
                      00781 
                      00782 ; Export subroutine         (DOESNT ACTUALLY EXPORT YET!)
                      00783 ; Eventually this will export data to external source
                      00784 ; Right now it just displays "Exporting. . ." then "Complete"
03D7                  00785 export
03D7   2???           00786     call    Clear_Display
                      00787     Display Export_Msg
  0000                    M                 local   loop_disp
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_disp
03D8   01A2               M                 clrf    Table_Counter
03D9   0103               M                 clrw
03DA                      M loop_disp
03DA   0822               M         movf    Table_Counter,W
03DB   2???               M                 call    Export_Msg
03DC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03DD   1903               M                 btfsc   STATUS,Z
03DE   2???               M                 goto    end_disp
03DF   2???               M                 call    WR_DATA
03E0   0AA2               M                 incf    Table_Counter,F
03E1   2???               M                 goto    loop_disp
03E2                      M end_disp
03E2   2???           00788     call    HalfS
03E3   2???           00789     call    HalfS
03E4   2???           00790     call    Clear_Display
                      00791     Display End_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03E5   01A2               M                 clrf    Table_Counter
03E6   0103               M                 clrw
03E7                      M loop_disp
03E7   0822               M         movf    Table_Counter,W
03E8   2???               M                 call    End_Msg
03E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03EA   1903               M                 btfsc   STATUS,Z
03EB   2???               M                 goto    end_disp
03EC   2???               M                 call    WR_DATA
03ED   0AA2               M                 incf    Table_Counter,F
03EE   2???               M                 goto    loop_disp
03EF                      M end_disp
03EF   0008           00792     return
                      00793 
                      00794 
                      00795 ;***************************************
                      00796 ; GENERAL PURPOSE SUBROUTINES
                      00797 ;***************************************
                      00798 
                      00799 ; DISPLAY BIG NUMBER SUBROUTINE
                      00800 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00801 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00802 ; Uses "shift and add 3" algorithm
03F0                  00803 big_number
                      00804     movff   op_time, op_time_save         ;save the original op_time
03F0   0832               M         movf    op_time, W
03F1   00AA               M         movwf   op_time_save
                      00805     movlf   8, bignumcount                ;will shift 8 times
03F2   3008               M         movlw   8
03F3   00AE               M         movwf   bignumcount
03F4   01AB           00806     clrf    huns
03F5   01AC           00807     clrf    tens
03F6   01AD           00808     clrf    ones
                      00809 
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03F7                  00810 BCDadd3                             ; if any digit > 5, add3
03F7   3005           00811     movlw   0x5
03F8   022B           00812     subwf   huns, W
03F9   1803           00813     btfsc   STATUS, C
03FA   2???           00814     call    add3huns
                      00815 
03FB   3005           00816     movlw   0x5
03FC   022C           00817     subwf   tens, W
03FD   1803           00818     btfsc   STATUS, C
03FE   2???           00819     call    add3tens
                      00820 
03FF   3005           00821     movlw   0x5
0400   022D           00822     subwf   ones, W
0401   1803           00823     btfsc   STATUS, C
0402   2???           00824     call    add3ones
                      00825 
0403   03AE           00826     decf    bignumcount, 1
0404   1003           00827     bcf     STATUS, C
0405   0DB2           00828     rlf     op_time, 1              ; shift
0406   0DAD           00829     rlf     ones, 1
0407   1A2D           00830     btfsc   ones,4 ;
0408   2???           00831     call    carryones               ; carry if too large
0409   0DAC           00832     rlf     tens, 1
                      00833 
040A   1A2C           00834     btfsc   tens,4 ;
040B   2???           00835     call    carrytens
040C   0DAB           00836     rlf     huns,1
040D   1003           00837     bcf     STATUS, C
                      00838 
040E   082E           00839     movf    bignumcount, W
040F   1D03           00840     btfss   STATUS, Z
0410   2???           00841     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00842 
                      00843     movff    op_time_save, op_time     ;restore the original op_time
0411   082A               M         movf    op_time_save, W
0412   00B2               M         movwf   op_time
0413   0008           00844     return
                      00845 
0414                  00846 add3huns
0414   3003           00847     movlw 0x3
0415   07AB           00848     addwf huns,F
0416   0008           00849     return
0417                  00850 add3tens
0417   3003           00851     movlw 0x3
0418   07AC           00852     addwf tens,F
0419   0008           00853     return
041A                  00854 add3ones
041A   3003           00855     movlw 0x3
041B   07AD           00856     addwf ones,F
041C   0008           00857     return
041D                  00858 carryones
041D   122D           00859     bcf ones, 4
041E   1403           00860     bsf STATUS, C
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

041F   0008           00861     return
0420                  00862 carrytens
0420   122C           00863     bcf tens, 4
0421   1403           00864     bsf STATUS, C
0422   0008           00865     return
                      00866 
                      00867 
                      00868 ; DELAY 0.5S SUBROUTINE (from sample code)
                      00869 ; Delays exactly 0.5sec
0423                  00870 HalfS
  0000                00871         local   HalfS_0
0423   3088           00872       movlw 0x88
0424   00A7           00873       movwf COUNTH
0425   30BD           00874       movlw 0xBD
0426   00A8           00875       movwf COUNTM
0427   3003           00876       movlw 0x03
0428   00A9           00877       movwf COUNTL
                      00878 
0429                  00879 HalfS_0
0429   0BA7           00880       decfsz COUNTH, f
042A   2???           00881       goto   $+2
042B   0BA8           00882       decfsz COUNTM, f
042C   2???           00883       goto   $+2
042D   0BA9           00884       decfsz COUNTL, f
042E   2???           00885       goto   HalfS_0
                      00886 
042F   2???           00887       goto $+1
0430   0000           00888       nop
0431   0000           00889       nop
0432   0008           00890                 return
                      00891 
                      00892 
                      00893 ;***************************************
                      00894 ; LCD SUBROUTINES (from sample code)
                      00895 ;***************************************
                      00896 
                      00897 ; Initialize the LCD
0433                  00898 InitLCD
0433   1283           00899         bcf STATUS,RP0
0434   1588           00900         bsf E     ;E default high
                      00901 
                      00902         ;Wait for LCD POR to finish (~15ms)
0435   2???           00903         call lcdLongDelay
0436   2???           00904         call lcdLongDelay
0437   2???           00905         call lcdLongDelay
                      00906 
                      00907         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00908         ; -> Send b'0011' 3 times
0438   3033           00909         movlw   b'00110011'
0439   2???           00910         call    WR_INS
043A   2???           00911         call lcdLongDelay
043B   2???           00912         call lcdLongDelay
043C   3032           00913         movlw   b'00110010'
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

043D   2???           00914         call    WR_INS
043E   2???           00915         call lcdLongDelay
043F   2???           00916         call lcdLongDelay
                      00917 
                      00918         ; 4 bits, 2 lines, 5x7 dots
0440   3028           00919         movlw   b'00101000'
0441   2???           00920         call    WR_INS
0442   2???           00921         call lcdLongDelay
0443   2???           00922         call lcdLongDelay
                      00923 
                      00924         ; display on/off
0444   300C           00925         movlw   b'00001100'
0445   2???           00926         call    WR_INS
0446   2???           00927         call lcdLongDelay
0447   2???           00928         call lcdLongDelay
                      00929 
                      00930         ; Entry mode
0448   3006           00931         movlw   b'00000110'
0449   2???           00932         call    WR_INS
044A   2???           00933         call lcdLongDelay
044B   2???           00934         call lcdLongDelay
                      00935 
                      00936         ; Clear ram
044C   3001           00937         movlw   b'00000001'
044D   2???           00938         call    WR_INS
044E   2???           00939         call lcdLongDelay
044F   2???           00940         call lcdLongDelay
0450   0008           00941         return
                      00942 
                      00943 ; Clear the display
0451                  00944 Clear_Display
0451   3001           00945                 movlw   B'00000001'
0452   2???           00946                 call    WR_INS
0453   0008           00947                 return
                      00948 
                      00949 ;Switch lines
0454                  00950 Switch_Lines
0454   30C0           00951                 movlw   B'11000000'
0455   2???           00952                 call    WR_INS
0456   0008           00953                 return
                      00954 
                      00955 ; Write an instruction to the LCD (see page 7-104)
                      00956 ; The instruction must be in W
0457                  00957 WR_INS
0457   1108           00958         bcf             RS                              ;clear RS
0458   00A3           00959         movwf   com                             ;W --> com
0459   39F0           00960         andlw   0xF0                    ;mask 4 bits MSB w = X0
045A   0088           00961         movwf   PORTD                   ;Send 4 bits MSB
045B   1588           00962         bsf             E                               ;
045C   2???           00963         call    lcdLongDelay    ;__    __
045D   1188           00964         bcf             E                               ;  |__|
045E   0E23           00965         swapf   com,w
045F   39F0           00966         andlw   0xF0                    ;1111 0010
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0460   0088           00967         movwf   PORTD                   ;send 4 bits LSB
0461   1588           00968         bsf             E                               ;
0462   2???           00969         call    lcdLongDelay    ;__    __
0463   1188           00970         bcf             E                               ;  |__|
0464   2???           00971         call    lcdLongDelay
0465   0008           00972         return
                      00973 
                      00974 ; Write data at current cursor location
                      00975 ; Character code (see page 7-104) must be in W
0466                  00976 WR_DATA
0466   1508           00977         bsf             RS
0467   00A4           00978         movwf   dat
0468   0824           00979         movf    dat,w
0469   39F0           00980         andlw   0xF0
046A   3E04           00981         addlw   4
046B   0088           00982         movwf   PORTD
046C   1588           00983         bsf             E                               ;
046D   2???           00984         call    lcdLongDelay    ;__    __
046E   1188           00985         bcf             E                               ;  |__|
046F   0E24           00986         swapf   dat,w
0470   39F0           00987         andlw   0xF0
0471   3E04           00988         addlw   4
0472   0088           00989         movwf   PORTD
0473   1588           00990         bsf             E                               ;
0474   2???           00991         call    lcdLongDelay    ;__    __
0475   1188           00992         bcf             E                               ;  |__|
0476   0008           00993         return
                      00994 
                      00995 ;Delay routine because PIC is way faster than the LCD can handle
0477                  00996 lcdLongDelay
0477   3014           00997     movlw d'20'
0478   00A6           00998     movwf lcd_d2
0479                  00999 LLD_LOOP
                      01000     LCD_DELAY
0479   30FF               M             movlw   0xFF
047A   00A5               M             movwf   lcd_d1
047B   0BA5               M             decfsz  lcd_d1,f
047C   2???               M             goto    $-1
047D   0BA6           01001     decfsz lcd_d2,f
047E   2???           01002     goto LLD_LOOP
047F   0008           01003     return
                      01004 
                      01005 
                      01006 
                      01007 ;***************************************
                      01008 ; ISR
                      01009 ; Currently only care about TMR0
                      01010 ; TMR0 overflows at 256*256; each time, decrement count38
                      01011 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      01012 ; When this hapens, op_time increments
                      01013 ;***************************************
0480                  01014 isr
0480   00B0           01015     movwf   w_isr           ;save W and status
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0481   0E03           01016     swapf   STATUS, W
0482   1283           01017     bcf     STATUS, RP0
0483   00B1           01018     movwf   status_isr
                      01019 
Message[305]: Using default destination of 1 (file).
0484   0BAF           01020     decfsz    count38     ;if count38 gets to 38 it's been one second
0485   2???           01021     goto end_isr
                      01022     movlf   D'38', count38  ;so reset count38
0486   3026               M         movlw   D'38'
0487   00AF               M         movwf   count38
Message[305]: Using default destination of 1 (file).
0488   0AB2           01023     incf    op_time         ; and increment op_time
                      01024 
0489                  01025 end_isr
0489   0E31           01026     swapf   status_isr, W   ;restore W and status
048A   0083           01027     movwf   STATUS
048B   0EB0           01028     swapf   w_isr, F
048C   0E30           01029     swapf   w_isr, W
048D   110B           01030     bcf     INTCON, T0IF    ;clear the interrupt flag
048E   0009           01031     retfie
                      01032 
                      01033 
3F72                  01034     END
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           000003F7
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000027
COUNTL                            00000029
COUNTM                            00000028
CREN                              00000004
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

CSRC                              00000007
Clear_Display                     00000451
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
Export_Msg                        0000009D
F                                 00000001
FERR                              00000002
FF                                0000008F
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000423
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           00000433
LCD_DELAY                         
LED_fail                          0000005C
LF                                00000089
LLD_LOOP                          00000479
Logs_Msg1                         000000AE
Logs_Msg2                         000000BE
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000095
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      00000454
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000022
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000466
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

WR_INS                            00000457
Z                                 00000002
_.org_1_0150                      00000150
_.org_1_019A                      0000019A
_.org_1_019F                      0000019F
_.org_1_01B8                      000001B8
_.org_1_0211                      00000211
_.org_1_042A                      0000042A
_.org_1_042C                      0000042C
_.org_1_042F                      0000042F
_.org_1_047C                      0000047C
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          00000414
add3ones                          0000041A
add3tens                          00000417
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

badkey                            00000210
big_number                        000003F0
bignumcount                       0000002E
carryones                         0000041D
carrytens                         00000420
check_1                           00000214
check_2                           0000021F
check_3                           0000022B
check_4                           00000237
check_5                           00000243
check_6                           0000024F
check_7                           0000025B
check_8                           00000267
check_9                           00000273
check_FF                          00000350
check_LED                         000002CC
check_LF                          00000335
check_defective                   00000285
check_done                        000001FF
check_export                      00000291
check_flick                       000002DB
check_for_fail                    00000353
check_log1                        000001BC
check_log2                        000001CC
check_log3                        000001DD
check_log4                        000001EE
check_none                        000002AF
check_pass                        000002BD
check_standby                     00000297
check_start                       000002A8
check_summary                     0000027F
check_time                        0000028B
com                               00000023
count38                           0000002F
dat                               00000024
default_key                       000002AD
default_state                     000002EA
defective                         0000031C
display_state                     000002AE
eight                             00000399
end_check_fail                    000003AB
end_isr                           00000489
export                            000003D7
five                              0000037B
four                              00000371
huns                              0000002B
i2c_common_setup                  00000000
information                       00000213
init                              000000CF
isr                               00000480
keytemp                           00000020
lcdLongDelay                      00000477
lcd_d1                            00000025
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

lcd_d2                            00000026
logs                              000001A1
movff                             
movlf                             
nine                              000003A3
no_huns                           000003C1
no_tens                           000003C8
now_FF                            00000337
num_FF                            0000003D
num_LF                            0000003C
num_tot                           0000003E
one                               00000354
ones                              0000002D
op_time                           00000032
op_time_save                      0000002A
poll                              00000199
polling                           000001B7
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
seven                             0000038F
six                               00000385
spacebar                          
start                             00000152
start_date1                       00000044
start_date10                      00000043
start_hour1                       00000046
start_hour10                      00000045
start_min1                        00000048
start_min10                       00000047
start_month1                      00000042
start_month10                     00000041
start_year1                       00000040
start_year10                      0000003F
state1                            00000033
state2                            00000034
state3                            00000035
state4                            00000036
state5                            00000037
state6                            00000038
state7                            00000039
state8                            0000003A
state9                            0000003B
statetemp                         00000021
status_isr                        00000031
summary                           000002EB
tens                              0000002C
three                             00000367
time                              000003AC
two                               0000035D
w_isr                             00000030
MPASM 5.54                          MAIN.ASM   2-7-2014  1:04:30         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

waiting                           000000EA
write_rtc                         00000000
writenum                          
writenum_reg                      

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    17 reported,     0 suppressed

