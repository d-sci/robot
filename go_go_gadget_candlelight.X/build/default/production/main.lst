MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013 
                      00014 
                      00015 ;***************************************
                      00016 ; VARIABLES
                      00017 ;***************************************
                      00018 
                      00019 ; Also see i2c_commmon.asm -> has stuff at 0x71-0x78 on for RTC!
                      00020 
                      00021     cblock      0x20
                      00022     ; Important information (will be displayed)
  00000020            00023         op_time    ;in seconds    
  00000021            00024         state1     ;where   0 = none      1 = pass
  00000022            00025         state2     ;        2 = led fail  3 = flicker fail
  00000023            00026         state3
  00000024            00027         state4
  00000025            00028         state5
  00000026            00029         state6
  00000027            00030         state7
  00000028            00031         state8
  00000029            00032         state9
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002A            00033         num_LF      ;BCD
  0000002B            00034         num_FF      ;BCD
  0000002C            00035         num_tot     ;BCD
  0000002D            00036         start_year10    ;starting time (for log)
  0000002E            00037         start_year1     ; note: these are all ALREADY ASCII!
  0000002F            00038         start_month10
  00000030            00039         start_month1
  00000031            00040         start_date10
  00000032            00041         start_date1
  00000033            00042         start_hour10
  00000034            00043         start_hour1
  00000035            00044         start_min10
  00000036            00045         start_min1
                      00046 ; For general program / interface: temps, counters, etc.
  00000037            00047         keytemp         ; for data display mode
  00000038            00048         statetemp
  00000039            00049                 Table_Counter   ; for LCD stuff
  0000003A            00050                 com
  0000003B            00051                 dat
  0000003C            00052         lcd_d1
  0000003D            00053         lcd_d2
  0000003E            00054         COUNTH          ;for delay 0.5s routine
  0000003F            00055         COUNTM
  00000040            00056         COUNTL
  00000041            00057         op_time_save    ;for operation time
  00000042            00058         huns
  00000043            00059         tens
  00000044            00060         ones
  00000045            00061         bignumcount
  00000046            00062         count38         ;for isr
                      00063 ; For machine program: temps, counters, etc.
  00000047            00064         candle_index
                      00065 
                      00066     endc
                      00067 
                      00068     cblock  0x79        ;ISR stuff that needs to be in all registers
  00000079            00069         w_isr           
  0000007A            00070         status_isr
                      00071         endc
                      00072 
                      00073 
                      00074 ;***************************************
                      00075 ; MACROS
                      00076 ;***************************************
                      00077 
                      00078 ;LCD Delay
                      00079 LCD_DELAY   macro
                      00080             movlw   0xFF
                      00081             movwf   lcd_d1
                      00082             decfsz  lcd_d1,f
                      00083             goto    $-1
                      00084             endm
                      00085 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086 ; Display a msg on LCD
                      00087 Display macro   Message
                      00088                 local   loop_disp
                      00089                 local   end_disp
                      00090                 clrf    Table_Counter
                      00091                 clrw
                      00092 loop_disp
                      00093         movf    Table_Counter,W
                      00094                 call    Message
                      00095                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00096                 btfsc   STATUS,Z
                      00097                 goto    end_disp
                      00098                 call    WR_DATA
                      00099                 incf    Table_Counter,F
                      00100                 goto    loop_disp
                      00101 end_disp
                      00102                 endm
                      00103 
                      00104 ;Move cursor right one position
                      00105 spacebar    macro
                      00106             movlw   B'00010100'
                      00107             call    WR_INS
                      00108             endm
                      00109 
                      00110 ;Shortcuts for moving literals / registers
                      00111 movlf   macro   l, f
                      00112         movlw   l
                      00113         movwf   f
                      00114         endm
                      00115 
                      00116 movff   macro   source, dest
                      00117         movf    source, W
                      00118         movwf   dest
                      00119         endm
                      00120 
                      00121 ; Display a BCD on LCD as decimal
                      00122 writenum    macro   number          ; literal
                      00123             movlw    number
                      00124             addlw   B'00110000'
                      00125             movwf   dat
                      00126             call WR_DATA
                      00127             endm
                      00128 
                      00129 writenum_reg    macro   reg         ; from a register containing BCD
                      00130             movf    reg,W
                      00131             addlw   B'00110000'
                      00132             movwf   dat
                      00133             call WR_DATA
                      00134             endm
                      00135 
                      00136 ;Write to PC (hyperterminal)
                      00137 printchar   macro   char            ;direct ASCII code literal (or in "")
                      00138             movlw   char
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139             call    writetoPC
                      00140             endm
                      00141 
                      00142 printASC    macro   reg            ;ASCII code inside a register
                      00143             banksel reg
                      00144             movf    reg,W
                      00145             call    writetoPC
                      00146             endm
                      00147 
                      00148 printBCD    macro   BCD            ;BCD inside a register
                      00149             banksel BCD
                      00150             movf    BCD, W
                      00151             addlw   0x30
                      00152             call    writetoPC
                      00153             endm
                      00154 
                      00155 
                      00156 newline     macro
                      00157             printchar   0xA ;changes line
                      00158             printchar   0xD ;goes back to left
                      00159             endm
                      00160 ;***************************************
                      00161 ; VECTORS
                      00162 ;***************************************
                      00163 
                      00164     ORG       0x000
0000   2???           00165          goto      init
                      00166     ORG       0x004
0004   2???           00167         goto    isr
                      00168 
                      00169 
                      00170 ;***************************************
                      00171 ; TABLES (MESSAGES)
                      00172 ;***************************************
0005                  00173 Standby_Msg
0005   0782           00174                 addwf   PCL,F
0006   3453 3454 3441 00175                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00176 Start_Msg
000E   0782           00177         addwf   PCL,F
000F   3449 346E 3473 00178         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00179 End_Msg
0020   0782           00180         addwf   PCL,F
0021   3443 346F 346D 00181         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00182 Time_Msg
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   0782           00183                 addwf   PCL,F
002B   344F 3470 3465 00184                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
003B                  00185 Seconds
003B   0782           00186         addwf   PCL,F
003C   3420 3473 3465 00187         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00188 Not_present
0045   0782           00189         addwf   PCL,F
0046   343A 3420 344E 00190         dt      ": Not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00191 Pass
0054   0782           00192                 addwf   PCL,F
0055   343A 3420 3450 00193                 dt              ": Pass",0
       3461 3473 3473 
       3400 
005C                  00194 LED_fail
005C   0782           00195                 addwf   PCL,F
005D   343A 3420 344C 00196                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0068                  00197 Flick_fail
0068   0782           00198                 addwf   PCL,F
0069   343A 3420 3446 00199                 dt              ": Flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00200 Total_Msg
0078   0782           00201         addwf   PCL,F
0079   3454 346F 3474 00202         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00203 LF
0089   0782           00204         addwf   PCL,F
008A   344C 3446 343A 00205         dt      "LF: ",0
       3420 3400 
008F                  00206 FF
008F   0782           00207         addwf   PCL,F
0090   3446 3446 343A 00208         dt      "FF: ",0
       3420 3400 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0095                  00209 None
0095   0782           00210         addwf   PCL,F
0096   343C 346E 346F 00211         dt      "<none>", 0
       346E 3465 343E 
       3400 
009D                  00212 Logs_Msg1
009D   0782           00213         addwf   PCL,F
009E   3431 342D 3434 00214         dt      "1-4 to see log",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3400 
00AD                  00215 Logs_Msg2
00AD   0782           00216         addwf   PCL,F
00AE   3453 3454 3441 00217         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
       3400 
                      00218 
                      00219 ;***************************************
                      00220 ; MAIN PROGRAM
                      00221 ;***************************************
                      00222 
00BE                  00223 init
                      00224         movlf     b'10000000', INTCON   ;interrupts enabled
00BE   3080               M         movlw   b'10000000'
00BF   008B               M         movwf   INTCON
                      00225 
00C0   1683           00226         bsf       STATUS,RP0            ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C1   0185           00227         clrf      TRISA                 ; PortA is output - not yet used
                      00228         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs (rest unused; RB0 may be 
                            external interrupt)
00C2   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C3   0086               M         movwf   TRISB
                      00229                                         ; note can disable keypad to free up these ports during operatio
                            n if necessary.
                      00230         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC (rest unused; [7:6] may be RS-232)
00C4   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C6   0188           00231         clrf      TRISD                 ; PortD[2:7] is LCD output (rest unused)
                      00232 
00C7   1283           00233         bcf       STATUS,RP0     ; select bank 0
00C8   0185           00234         clrf      PORTA
00C9   0186           00235         clrf      PORTB
00CA   0187           00236         clrf      PORTC
00CB   0188           00237         clrf      PORTD
                      00238 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   2???           00239         call      i2c_common_setup  ;Set up I2C for communication
00CD   2???           00240         call      InitLCD           ;Initialize the LCD
00CE   2???           00241         call      InitUSART         ;Set up USART for RS232
                      00242 
00CF   1283           00243         bcf       STATUS,RP0          ; bank0
                      00244                 
                      00245         Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
00D0   01B9               M                 clrf    Table_Counter
00D1   0103               M                 clrw
00D2                      M loop_disp
00D2   0839               M         movf    Table_Counter,W
00D3   2???               M                 call    Standby_Msg
00D4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00D5   1903               M                 btfsc   STATUS,Z
00D6   2???               M                 goto    end_disp
00D7   2???               M                 call    WR_DATA
00D8   0AB9               M                 incf    Table_Counter,F
00D9   2???               M                 goto    loop_disp
00DA                      M end_disp
00DA   2???           00246         call    Switch_Lines
                      00247       
                      00248  ;--------------------------------------------------
                      00249  ;      STANDBY MODE
                      00250 
00DB                  00251 waiting
                      00252         ; Display date and time. 
                      00253         ; Also save starting time for log (will stop updating once we start)
00DB   3032           00254         movlw   "2"                             ;First line shows 20**/**/**
00DC   2???           00255                 call    WR_DATA
00DD   3030           00256                 movlw   "0"
00DE   2???           00257                 call    WR_DATA
                      00258                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00DF   3006               M         movlw   0x06
00E0   1283 1303          M         banksel 0x73
00E2   00F3               M         movwf   0x73
00E3   2???               M         call    read_rtc
00E4   1283 1303          M         banksel 0x75
00E6   0875               M         movf    0x75,w
00E7   2???               M         call    rtc_convert   
00E8   0877           00259                 movf    0x77,W
00E9   00AD           00260         movwf    start_year10    ;Save starting year dig10
00EA   2???           00261                 call    WR_DATA
00EB   0878           00262                 movf    0x78,W
00EC   00AE           00263         movwf    start_year1    ;Save starting year dig1
00ED   2???           00264                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EE   302F           00265                 movlw   "/"
00EF   2???           00266                 call    WR_DATA
                      00267                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00F0   3005               M         movlw   0x05
00F1   1283 1303          M         banksel 0x73
00F3   00F3               M         movwf   0x73
00F4   2???               M         call    read_rtc
00F5   1283 1303          M         banksel 0x75
00F7   0875               M         movf    0x75,w
00F8   2???               M         call    rtc_convert   
00F9   0877           00268                 movf    0x77,W
00FA   00AF           00269         movwf    start_month10    ;Save starting month dig10
00FB   2???           00270                 call    WR_DATA
00FC   0878           00271                 movf    0x78,W
00FD   00B0           00272         movwf    start_month1    ;Save starting month dig1
00FE   2???           00273                 call    WR_DATA
00FF   302F           00274                 movlw   "/"
0100   2???           00275                 call    WR_DATA
                      00276                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0101   3004               M         movlw   0x04
0102   1283 1303          M         banksel 0x73
0104   00F3               M         movwf   0x73
0105   2???               M         call    read_rtc
0106   1283 1303          M         banksel 0x75
0108   0875               M         movf    0x75,w
0109   2???               M         call    rtc_convert   
010A   0877           00277                 movf    0x77,W
010B   00B1           00278         movwf    start_date10    ;Save starting date dig10
010C   2???           00279                 call    WR_DATA
010D   0878           00280                 movf    0x78,W
010E   00B2           00281         movwf    start_date1    ;Save starting date dig1
010F   2???           00282                 call    WR_DATA
                      00283                 spacebar
0110   3014               M             movlw   B'00010100'
0111   2???               M             call    WR_INS
                      00284                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;                       0x77 and the ones digit is placed in 0x78
0112   3002               M         movlw   0x02
0113   1283 1303          M         banksel 0x73
0115   00F3               M         movwf   0x73
0116   2???               M         call    read_rtc
0117   1283 1303          M         banksel 0x75
0119   0875               M         movf    0x75,w
011A   2???               M         call    rtc_convert   
011B   0877           00285                 movf    0x77,W
011C   00B3           00286         movwf    start_hour10    ;Save starting hour dig10
011D   2???           00287                 call    WR_DATA
011E   0878           00288                 movf    0x78,W
011F   00B4           00289         movwf    start_hour1    ;Save starting hour dig1
0120   2???           00290                 call    WR_DATA
0121   303A           00291                 movlw   ":"
0122   2???           00292                 call    WR_DATA
                      00293                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0123   3001               M         movlw   0x01
0124   1283 1303          M         banksel 0x73
0126   00F3               M         movwf   0x73
0127   2???               M         call    read_rtc
0128   1283 1303          M         banksel 0x75
012A   0875               M         movf    0x75,w
012B   2???               M         call    rtc_convert   
012C   0877           00294                 movf    0x77,W
012D   00B5           00295         movwf    start_min10    ;Save starting min dig10
012E   2???           00296                 call    WR_DATA
012F   0878           00297                 movf    0x78,W
0130   00B6           00298         movwf    start_min1    ;Save starting min dig1
0131   2???           00299                 call    WR_DATA
                      00300                       
                      00301         ; Move cursor back to start of second line
                      00302         ; We will update displayed time but not the word "STANDBY"
0132   30C0           00303         movlw   B'11000000'
0133   2???           00304         call    WR_INS
                      00305 
                      00306         ;Poll to start (will have to hold key for ~0.5sec)
0134   1C86           00307          btfss          PORTB,1     ;Wait until data is available from the keypad
0135   2???           00308          goto           waiting
                      00309 
0136   0E06           00310          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0137   390F           00311          andlw          0x0F
0138   00B7           00312          movwf      keytemp
0139   3A0C           00313          xorlw      0xC         ;Will be all zeros if its "START"
013A   1903           00314          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
013B   2???           00315          goto       start
                      00316 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

013C   0837           00317          movf       keytemp,W     ;Go to log interface
013D   3A0E           00318          xorlw      0xE
013E   1903           00319          btfsc      STATUS,Z
013F   2???           00320          goto       logs
                      00321 
0140   1886           00322          btfsc          PORTB,1     ;Wait until key is released
0141   2???           00323          goto           $-1
0142   2???           00324          goto       waiting
                      00325 
                      00326 ;-----------------------------------------------------------
                      00327 ;       ACTUAL OPERATION (I'm just adding values manually now)
                      00328 
0143                  00329 start
                      00330         ;Start the timer
                      00331         movlf       D'38', count38
0143   3026               M         movlw   D'38'
0144   00C6               M         movwf   count38
0145   01A0           00332         clrf        op_time
0146   168B           00333         bsf         INTCON, T0IE ;enable Timer0 interrupt
0147   0181           00334         clrf        TMR0
0148   1683 1303      00335         banksel     OPTION_REG
                      00336         movlf       B'11000111', OPTION_REG ; 1:256 prescaler
014A   30C7               M         movlw   B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
014B   0081               M         movwf   OPTION_REG
014C   1283           00337         bcf        STATUS,RP0     ; back to bank 0
                      00338 
                      00339         ;Display starting message
014D   2???           00340         call        Clear_Display
                      00341         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
014E   01B9               M                 clrf    Table_Counter
014F   0103               M                 clrw
0150                      M loop_disp
0150   0839               M         movf    Table_Counter,W
0151   2???               M                 call    Start_Msg
0152   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0153   1903               M                 btfsc   STATUS,Z
0154   2???               M                 goto    end_disp
0155   2???               M                 call    WR_DATA
0156   0AB9               M                 incf    Table_Counter,F
0157   2???               M                 goto    loop_disp
0158                      M end_disp
                      00342 
                      00343 
                      00344 ;****FAKE CODE ******************************************
                      00345         ; just delaying for now 
0158   2???           00346         call        HalfS
0159   2???           00347         call        HalfS
                      00348         
                      00349        ; Putting values in manually. This will be done automatically in main program
                      00350         movlf     B'01', state1     ;pass
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015A   3001               M         movlw   B'01'
015B   00A1               M         movwf   state1
                      00351         movlf     B'01', state2     ;pass
015C   3001               M         movlw   B'01'
015D   00A2               M         movwf   state2
                      00352         movlf     B'10', state3     ;LED fail
015E   3002               M         movlw   B'10'
015F   00A3               M         movwf   state3
                      00353         movlf     B'10', state4     ;LED fail
0160   3002               M         movlw   B'10'
0161   00A4               M         movwf   state4
                      00354         movlf     B'01', state5     ;pass
0162   3001               M         movlw   B'01'
0163   00A5               M         movwf   state5
                      00355         movlf     B'00', state6     ;not present
0164   3000               M         movlw   B'00'
0165   00A6               M         movwf   state6
                      00356         movlf     B'01', state7     ;pass
0166   3001               M         movlw   B'01'
0167   00A7               M         movwf   state7
                      00357         movlf     B'11', state8     ;flicker fail
0168   3003               M         movlw   B'11'
0169   00A8               M         movwf   state8
                      00358         movlf     B'01', state9     ;pass
016A   3001               M         movlw   B'01'
016B   00A9               M         movwf   state9
                      00359         movlf     D'2', num_LF
016C   3002               M         movlw   D'2'
016D   00AA               M         movwf   num_LF
                      00360         movlf     D'1', num_FF
016E   3001               M         movlw   D'1'
016F   00AB               M         movwf   num_FF
                      00361         movlf     D'8', num_tot
0170   3008               M         movlw   D'8'
0171   00AC               M         movwf   num_tot
                      00362 ;*******************************************************
                      00363 
                      00364 ; choose fake or real!
                      00365 
                      00366 ;;****REAL CODE ******************************************
                      00367 ;    movlf    D'0', candle_index
                      00368 ;    bcf        STATUS, IRP
                      00369 ;    movlf   0x21, FSR       ;pointing at state1
                      00370 ;
                      00371 ;rotate
                      00372 ;       movlw   0x9                 ; stop operation after 9 rotations
                      00373 ;    subwf   candle_index,W      ; candle_index is # you've already tested before rotating
                      00374 ;    btfsc   STATUS,Z
                      00375 ;       goto    end_operation
                      00376 ;       call    PULSEMOTOR          ; else rotate motor and n++
                      00377 ;       incf    candle_index, F
                      00378 ;    incf    FSR, F
                      00379 ;
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00380 ;detect_candle
                      00381 ;       bsf     IRLIGHT     ;turn on IR
                      00382 ;       btfss   IRDATA      ;IRDATA is 1 if there's no light, 0 if there's a light
                      00383 ;       goto    test_candle     ;yes candle, go test it
                      00384 ;    movlf   D'0', INDF      ;no candle, state = not present
                      00385 ;       goto rotate                 ;and go try next
                      00386 ;
                      00387 ;test_candle
                      00388 ;       incf    num_tot, F                      ; keeping track of total number of candles
                      00389 ;       ; Assume candle is already turned on
                      00390 ;       clrf    photocount
                      00391 ;       call    HalfS       ; delay 2 sec or whatever
                      00392 ;    call    HalfS
                      00393 ;    call    HalfS
                      00394 ;    call    HalfS
                      00395 ;       movff   photocount, photoval        ;to ensure it wont change again
                      00396 ;check_threshold1
                      00397 ;    movf    threshold1, W
                      00398 ;    subwf   photoval, W
                      00399 ;    btfsc   STATUS, C       ;if  photoval < threshold 1, C = 0
                      00400 ;    goto check_threshold2
                      00401 ;    movlf   D'2', INDF      ;< threshold 1 means led fail
                      00402 ;       incf    num_LF, F
                      00403 ;    goto    end_test_candle
                      00404 ;check_threshold2
                      00405 ;    movf    threshold2, W
                      00406 ;    subwf   photoval, W
                      00407 ;    btfsc   STATUS, C       ;if  photoval < threshold 2, C = 0
                      00408 ;    goto between
                      00409 ;    movlf   D'1', INDF      ;< threshold 2 means pass
                      00410 ;    goto    end_test_candle
                      00411 ;between
                      00412 ;   movlf   D'3', INDF       ;else flicker fail
                      00413 ;   incf    num_FF, F
                      00414 ;end_test_candle
                      00415 ;       call    TURNOFF     ;pulse solenoid to turn off candle
                      00416 ;    goto    rotate
                      00417 ;
                      00418 ;
                      00419 ; ;****************************************************
                      00420 
0172                  00421 end_operation
                      00422         ; Stop the timer
0172   128B           00423          bcf         INTCON, T0IE  ;disable Timer0 interrupt
                      00424 
                      00425 
                      00426         ;GOOD PLACE TO SAVE INFO FOR LOGS
                      00427 
                      00428 
                      00429         ; Display ending messages
0173   2???           00430         call       Clear_Display
                      00431         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_disp
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_disp
0174   01B9               M                 clrf    Table_Counter
0175   0103               M                 clrw
0176                      M loop_disp
0176   0839               M         movf    Table_Counter,W
0177   2???               M                 call    End_Msg
0178   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0179   1903               M                 btfsc   STATUS,Z
017A   2???               M                 goto    end_disp
017B   2???               M                 call    WR_DATA
017C   0AB9               M                 incf    Table_Counter,F
017D   2???               M                 goto    loop_disp
017E                      M end_disp
017E   2???           00432         call       HalfS
017F   2???           00433         call       time             ; "Operation time: X sec"
0180   2???           00434         call       HalfS
0181   2???           00435         call       HalfS
0182   2???           00436         call       summary          ; "Total candles: X. Defective: Y"
0183   2???           00437         call       HalfS
0184   2???           00438         call       HalfS
0185   2???           00439         call       defective        ; "FF: a b c. LF: d e f"
                      00440 ;-----------------------------------------------------------------------
                      00441 ; Data display interface
                      00442 
0186   1C86           00443 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
0187   2???           00444          goto           $-1
                      00445 
0188   0E06           00446          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0189   390F           00447          andlw          0x0F
018A   2???           00448          call       information ;Do the right thing
                      00449 
018B   1886           00450          btfsc          PORTB,1     ;Wait until key is released
018C   2???           00451          goto           $-1
018D   2???           00452          goto       poll
                      00453 
                      00454 
                      00455 ;-------------------------------------------------------------------------
                      00456 ; LOGS INTERFACE            (DONT ACTUALLY HAVE LOGS YET!)
                      00457 ; Eventually this will show logs
                      00458 ; Right now it just displays random crap
                      00459 ; Access from STANDBY and return to STANDBY
                      00460 
018E                  00461 logs
018E   2???           00462     call    Clear_Display
                      00463     Display Logs_Msg1
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
018F   01B9               M                 clrf    Table_Counter
0190   0103               M                 clrw
0191                      M loop_disp
0191   0839               M         movf    Table_Counter,W
0192   2???               M                 call    Logs_Msg1
0193   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0194   1903               M                 btfsc   STATUS,Z
0195   2???               M                 goto    end_disp
0196   2???               M                 call    WR_DATA
0197   0AB9               M                 incf    Table_Counter,F
0198   2???               M                 goto    loop_disp
0199                      M end_disp
0199   2???           00464     call    Switch_Lines
                      00465     Display Logs_Msg2
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
019A   01B9               M                 clrf    Table_Counter
019B   0103               M                 clrw
019C                      M loop_disp
019C   0839               M         movf    Table_Counter,W
019D   2???               M                 call    Logs_Msg2
019E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
019F   1903               M                 btfsc   STATUS,Z
01A0   2???               M                 goto    end_disp
01A1   2???               M                 call    WR_DATA
01A2   0AB9               M                 incf    Table_Counter,F
01A3   2???               M                 goto    loop_disp
01A4                      M end_disp
                      00466 
01A4                  00467 polling
01A4   1C86           00468     btfss               PORTB,1     ;Wait until data is available from the keypad
01A5   2???           00469     goto                $-1
                      00470 
01A6   0E06           00471     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
01A7   390F           00472     andlw               0x0F
01A8   00B7           00473     movwf       keytemp     ; Save which key was pressed
                      00474 
01A9                  00475 check_log1
01A9   3A00           00476     xorlw   0x0         ;will be all zeros if its 1
01AA   1D03           00477     btfss   STATUS,Z    ;and Z will be high, so skip
01AB   2???           00478     goto    check_log2
01AC   2???           00479     call    Clear_Display
                      00480     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01AD   01B9               M                 clrf    Table_Counter
01AE   0103               M                 clrw
01AF                      M loop_disp
01AF   0839               M         movf    Table_Counter,W
01B0   2???               M                 call    None
01B1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01B2   1903               M                 btfsc   STATUS,Z
01B3   2???               M                 goto    end_disp
01B4   2???               M                 call    WR_DATA
01B5   0AB9               M                 incf    Table_Counter,F
01B6   2???               M                 goto    loop_disp
01B7                      M end_disp
01B7   2???           00481     call    HalfS
01B8   2???           00482     goto    logs
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00483 
01B9                  00484 check_log2
01B9   0837           00485     movf    keytemp, W
01BA   3A01           00486     xorlw   0x1
01BB   1D03           00487     btfss   STATUS,Z
01BC   2???           00488     goto    check_log3
01BD   2???           00489     call    Clear_Display
                      00490     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01BE   01B9               M                 clrf    Table_Counter
01BF   0103               M                 clrw
01C0                      M loop_disp
01C0   0839               M         movf    Table_Counter,W
01C1   2???               M                 call    None
01C2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C3   1903               M                 btfsc   STATUS,Z
01C4   2???               M                 goto    end_disp
01C5   2???               M                 call    WR_DATA
01C6   0AB9               M                 incf    Table_Counter,F
01C7   2???               M                 goto    loop_disp
01C8                      M end_disp
01C8   2???           00491     call    HalfS
01C9   2???           00492     goto    logs
                      00493 
01CA                  00494 check_log3
01CA   0837           00495     movf    keytemp, W
01CB   3A02           00496     xorlw   0x2
01CC   1D03           00497     btfss   STATUS,Z
01CD   2???           00498     goto    check_log4
01CE   2???           00499     call    Clear_Display
                      00500     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01CF   01B9               M                 clrf    Table_Counter
01D0   0103               M                 clrw
01D1                      M loop_disp
01D1   0839               M         movf    Table_Counter,W
01D2   2???               M                 call    None
01D3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D4   1903               M                 btfsc   STATUS,Z
01D5   2???               M                 goto    end_disp
01D6   2???               M                 call    WR_DATA
01D7   0AB9               M                 incf    Table_Counter,F
01D8   2???               M                 goto    loop_disp
01D9                      M end_disp
01D9   2???           00501     call    HalfS
01DA   2???           00502     goto    logs
                      00503 
01DB                  00504 check_log4
01DB   0837           00505     movf    keytemp, W
01DC   3A04           00506     xorlw   0x4
01DD   1D03           00507     btfss   STATUS,Z
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01DE   2???           00508     goto    check_done
01DF   2???           00509     call    Clear_Display
                      00510     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01E0   01B9               M                 clrf    Table_Counter
01E1   0103               M                 clrw
01E2                      M loop_disp
01E2   0839               M         movf    Table_Counter,W
01E3   2???               M                 call    None
01E4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E5   1903               M                 btfsc   STATUS,Z
01E6   2???               M                 goto    end_disp
01E7   2???               M                 call    WR_DATA
01E8   0AB9               M                 incf    Table_Counter,F
01E9   2???               M                 goto    loop_disp
01EA                      M end_disp
01EA   2???           00511     call    HalfS
01EB   2???           00512     goto    logs
                      00513 
01EC                  00514 check_done
01EC   0837           00515     movf    keytemp, W
01ED   3A0D           00516     xorlw   0xD
01EE   1D03           00517     btfss   STATUS,Z
01EF   2???           00518     goto    badkey
01F0   2???           00519     call    Clear_Display
                      00520     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01F1   01B9               M                 clrf    Table_Counter
01F2   0103               M                 clrw
01F3                      M loop_disp
01F3   0839               M         movf    Table_Counter,W
01F4   2???               M                 call    Standby_Msg
01F5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F6   1903               M                 btfsc   STATUS,Z
01F7   2???               M                 goto    end_disp
01F8   2???               M                 call    WR_DATA
01F9   0AB9               M                 incf    Table_Counter,F
01FA   2???               M                 goto    loop_disp
01FB                      M end_disp
01FB   2???           00521     call    Switch_Lines
01FC   2???           00522     goto    waiting
                      00523 
01FD                  00524 badkey
01FD   1886           00525     btfsc               PORTB,1     ;Wait until key is released
01FE   2???           00526     goto                $-1
01FF   2???           00527     goto        polling
                      00528   
                      00529 ; END OF MAIN PROGRAM
                      00530 ;------------------------------------------------------------
                      00531 
                      00532 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00533 ;***************************************
                      00534 ; DATA DISPLAY ROUTINE
                      00535 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00536 ; Determines which key it was and displays appropriate info / branch
                      00537 ;***************************************
                      00538 
0200                  00539 information
0200   00B7           00540     movwf   keytemp             ; Save which key was pressed
                      00541 
0201                  00542 check_1
0201   3A00           00543     xorlw   0x0         ;will be all zeros if its 1
0202   1D03           00544     btfss   STATUS,Z    ;and Z will be high, so skip
0203   2???           00545     goto    check_2
0204   2???           00546     call    Clear_Display
                      00547     writenum 0x1
0205   3001               M             movlw    0x1
0206   3E30               M             addlw   B'00110000'
0207   00BB               M             movwf   dat
0208   2???               M             call WR_DATA
0209   0821           00548     movf    state1, W
020A   2???           00549     call    display_state
020B   0008           00550     return
                      00551 
020C                  00552 check_2
020C   0837           00553     movf    keytemp, W
020D   3A01           00554     xorlw   0x1
020E   1D03           00555     btfss   STATUS,Z
020F   2???           00556     goto    check_3
0210   2???           00557     call    Clear_Display
                      00558     writenum 0x2
0211   3002               M             movlw    0x2
0212   3E30               M             addlw   B'00110000'
0213   00BB               M             movwf   dat
0214   2???               M             call WR_DATA
0215   0822           00559     movf    state2, W
0216   2???           00560     call    display_state
0217   0008           00561     return
                      00562 
0218                  00563 check_3
0218   0837           00564     movf    keytemp, W
0219   3A02           00565     xorlw   0x2
021A   1D03           00566     btfss   STATUS,Z
021B   2???           00567     goto    check_4
021C   2???           00568     call    Clear_Display
                      00569     writenum 0x3
021D   3003               M             movlw    0x3
021E   3E30               M             addlw   B'00110000'
021F   00BB               M             movwf   dat
0220   2???               M             call WR_DATA
0221   0823           00570     movf    state3, W
0222   2???           00571     call    display_state
0223   0008           00572     return
                      00573 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0224                  00574 check_4
0224   0837           00575     movf    keytemp, W
0225   3A04           00576     xorlw   0x4
0226   1D03           00577     btfss   STATUS,Z
0227   2???           00578     goto    check_5
0228   2???           00579     call    Clear_Display
                      00580     writenum 0x4
0229   3004               M             movlw    0x4
022A   3E30               M             addlw   B'00110000'
022B   00BB               M             movwf   dat
022C   2???               M             call WR_DATA
022D   0824           00581     movf    state4, W
022E   2???           00582     call    display_state
022F   0008           00583     return
                      00584 
0230                  00585 check_5
0230   0837           00586     movf    keytemp, W
0231   3A05           00587     xorlw   0x5
0232   1D03           00588     btfss   STATUS,Z
0233   2???           00589     goto    check_6
0234   2???           00590     call    Clear_Display
                      00591     writenum 0x5
0235   3005               M             movlw    0x5
0236   3E30               M             addlw   B'00110000'
0237   00BB               M             movwf   dat
0238   2???               M             call WR_DATA
0239   0825           00592     movf    state5, W
023A   2???           00593     call    display_state
023B   0008           00594     return
                      00595 
023C                  00596 check_6
023C   0837           00597     movf    keytemp, W
023D   3A06           00598     xorlw   0x6
023E   1D03           00599     btfss   STATUS,Z
023F   2???           00600     goto    check_7
0240   2???           00601     call    Clear_Display
                      00602     writenum 0x6
0241   3006               M             movlw    0x6
0242   3E30               M             addlw   B'00110000'
0243   00BB               M             movwf   dat
0244   2???               M             call WR_DATA
0245   0826           00603     movf    state6, W
0246   2???           00604     call    display_state
0247   0008           00605     return
                      00606 
0248                  00607 check_7
0248   0837           00608     movf    keytemp, W
0249   3A08           00609     xorlw   0x8
024A   1D03           00610     btfss   STATUS,Z
024B   2???           00611     goto    check_8
024C   2???           00612     call    Clear_Display
                      00613     writenum 0x7
024D   3007               M             movlw    0x7
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024E   3E30               M             addlw   B'00110000'
024F   00BB               M             movwf   dat
0250   2???               M             call WR_DATA
0251   0827           00614     movf    state7, W
0252   2???           00615     call    display_state
0253   0008           00616     return
                      00617 
0254                  00618 check_8
0254   0837           00619     movf    keytemp, W
0255   3A09           00620     xorlw   0x9
0256   1D03           00621     btfss   STATUS,Z
0257   2???           00622     goto    check_9
0258   2???           00623     call    Clear_Display
                      00624     writenum 0x8
0259   3008               M             movlw    0x8
025A   3E30               M             addlw   B'00110000'
025B   00BB               M             movwf   dat
025C   2???               M             call WR_DATA
025D   0828           00625     movf    state8, W
025E   2???           00626     call    display_state
025F   0008           00627     return
                      00628 
0260                  00629 check_9
0260   0837           00630     movf    keytemp, W
0261   3A0A           00631     xorlw   0xA
0262   1D03           00632     btfss   STATUS,Z
0263   2???           00633     goto    check_summary
0264   2???           00634     call    Clear_Display
                      00635     writenum 0x9
0265   3009               M             movlw    0x9
0266   3E30               M             addlw   B'00110000'
0267   00BB               M             movwf   dat
0268   2???               M             call WR_DATA
0269   0829           00636     movf    state9, W
026A   2???           00637     call    display_state
026B   0008           00638     return
                      00639 
026C                  00640 check_summary
026C   0837           00641     movf    keytemp, W
026D   3A03           00642     xorlw   0x3
026E   1D03           00643     btfss   STATUS,Z
026F   2???           00644     goto    check_defective
0270   2???           00645     call    summary
0271   0008           00646     return
                      00647 
0272                  00648 check_defective
0272   0837           00649     movf    keytemp, W
0273   3A07           00650     xorlw   0x7
0274   1D03           00651     btfss   STATUS,Z
0275   2???           00652     goto    check_time
0276   2???           00653     call    defective
0277   0008           00654     return
                      00655 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0278                  00656 check_time
0278   0837           00657     movf    keytemp, W
0279   3A0B           00658     xorlw   0xB
027A   1D03           00659     btfss   STATUS,Z
027B   2???           00660     goto    check_export
027C   2???           00661     call    time
027D   0008           00662     return
                      00663 
027E                  00664 check_export               
027E   0837           00665     movf    keytemp, W
027F   3A0F           00666     xorlw   0xF
0280   1D03           00667     btfss   STATUS,Z
0281   2???           00668     goto    check_standby
0282   2???           00669     call    export
0283   0008           00670     return
                      00671 
0284                  00672 check_standby
0284   0837           00673     movf    keytemp, W
0285   3A0D           00674     xorlw   0xD
0286   1D03           00675     btfss   STATUS,Z
0287   2???           00676     goto    check_start
0288   2???           00677     call    Clear_Display
                      00678     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0289   01B9               M                 clrf    Table_Counter
028A   0103               M                 clrw
028B                      M loop_disp
028B   0839               M         movf    Table_Counter,W
028C   2???               M                 call    Standby_Msg
028D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
028E   1903               M                 btfsc   STATUS,Z
028F   2???               M                 goto    end_disp
0290   2???               M                 call    WR_DATA
0291   0AB9               M                 incf    Table_Counter,F
0292   2???               M                 goto    loop_disp
0293                      M end_disp
0293   2???           00679     call    Switch_Lines
0294   2???           00680     goto    waiting
                      00681 
0295                  00682 check_start
0295   0837           00683     movf    keytemp, W
0296   3A0C           00684     xorlw   0xC
0297   1D03           00685     btfss   STATUS,Z
0298   2???           00686     goto    default_key
0299   2???           00687     goto    start
                      00688 
029A                  00689 default_key         ; will never get here
029A   0008           00690     return
                      00691 
                      00692 
                      00693 ;Display state subroutine
                      00694 ;stateN is in W
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

029B                  00695 display_state
029B   00B8           00696     movwf  statetemp    ; save stateN
                      00697 
029C                  00698 check_none
029C   3A00           00699     xorlw   0x0
029D   1D03           00700     btfss   STATUS,Z
029E   2???           00701     goto    check_pass
                      00702     Display Not_present
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
029F   01B9               M                 clrf    Table_Counter
02A0   0103               M                 clrw
02A1                      M loop_disp
02A1   0839               M         movf    Table_Counter,W
02A2   2???               M                 call    Not_present
02A3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A4   1903               M                 btfsc   STATUS,Z
02A5   2???               M                 goto    end_disp
02A6   2???               M                 call    WR_DATA
02A7   0AB9               M                 incf    Table_Counter,F
02A8   2???               M                 goto    loop_disp
02A9                      M end_disp
02A9   0008           00703     return
                      00704 
02AA                  00705 check_pass
02AA   0838           00706     movf    statetemp, W
02AB   3A01           00707     xorlw   0x1
02AC   1D03           00708     btfss   STATUS,Z
02AD   2???           00709     goto    check_LED
                      00710     Display Pass
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02AE   01B9               M                 clrf    Table_Counter
02AF   0103               M                 clrw
02B0                      M loop_disp
02B0   0839               M         movf    Table_Counter,W
02B1   2???               M                 call    Pass
02B2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B3   1903               M                 btfsc   STATUS,Z
02B4   2???               M                 goto    end_disp
02B5   2???               M                 call    WR_DATA
02B6   0AB9               M                 incf    Table_Counter,F
02B7   2???               M                 goto    loop_disp
02B8                      M end_disp
02B8   0008           00711     return
                      00712 
02B9                  00713 check_LED
02B9   0838           00714     movf    statetemp, W
02BA   3A02           00715     xorlw   0x2
02BB   1D03           00716     btfss   STATUS,Z
02BC   2???           00717     goto    check_flick
                      00718     Display LED_fail
  0000                    M                 local   loop_disp
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_disp
02BD   01B9               M                 clrf    Table_Counter
02BE   0103               M                 clrw
02BF                      M loop_disp
02BF   0839               M         movf    Table_Counter,W
02C0   2???               M                 call    LED_fail
02C1   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C2   1903               M                 btfsc   STATUS,Z
02C3   2???               M                 goto    end_disp
02C4   2???               M                 call    WR_DATA
02C5   0AB9               M                 incf    Table_Counter,F
02C6   2???               M                 goto    loop_disp
02C7                      M end_disp
02C7   0008           00719     return
                      00720 
02C8                  00721 check_flick
02C8   0838           00722     movf    statetemp, W
02C9   3A03           00723     xorlw   0x3
02CA   1D03           00724     btfss   STATUS,Z
02CB   2???           00725     goto    default_state
                      00726     Display Flick_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02CC   01B9               M                 clrf    Table_Counter
02CD   0103               M                 clrw
02CE                      M loop_disp
02CE   0839               M         movf    Table_Counter,W
02CF   2???               M                 call    Flick_fail
02D0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D1   1903               M                 btfsc   STATUS,Z
02D2   2???               M                 goto    end_disp
02D3   2???               M                 call    WR_DATA
02D4   0AB9               M                 incf    Table_Counter,F
02D5   2???               M                 goto    loop_disp
02D6                      M end_disp
02D6   0008           00727     return
                      00728 
02D7                  00729 default_state   ; should never get here
02D7   0008           00730     return
                      00731 
                      00732 ; Summary Subroutine
                      00733 ; Displays total number of candles and number of defective candles
                      00734 ; Reads data from num_tot, num_LF, num_FF
02D8                  00735 summary
02D8   2???           00736     call            Clear_Display
                      00737     Display         Total_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02D9   01B9               M                 clrf    Table_Counter
02DA   0103               M                 clrw
02DB                      M loop_disp
02DB   0839               M         movf    Table_Counter,W
02DC   2???               M                 call    Total_Msg
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02DD   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02DE   1903               M                 btfsc   STATUS,Z
02DF   2???               M                 goto    end_disp
02E0   2???               M                 call    WR_DATA
02E1   0AB9               M                 incf    Table_Counter,F
02E2   2???               M                 goto    loop_disp
02E3                      M end_disp
                      00738     writenum_reg    num_tot
02E3   082C               M             movf    num_tot,W
02E4   3E30               M             addlw   B'00110000'
02E5   00BB               M             movwf   dat
02E6   2???               M             call WR_DATA
02E7   2???           00739     call            Switch_Lines
                      00740     Display         LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02E8   01B9               M                 clrf    Table_Counter
02E9   0103               M                 clrw
02EA                      M loop_disp
02EA   0839               M         movf    Table_Counter,W
02EB   2???               M                 call    LF
02EC   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02ED   1903               M                 btfsc   STATUS,Z
02EE   2???               M                 goto    end_disp
02EF   2???               M                 call    WR_DATA
02F0   0AB9               M                 incf    Table_Counter,F
02F1   2???               M                 goto    loop_disp
02F2                      M end_disp
                      00741     writenum_reg    num_LF
02F2   082A               M             movf    num_LF,W
02F3   3E30               M             addlw   B'00110000'
02F4   00BB               M             movwf   dat
02F5   2???               M             call WR_DATA
                      00742     spacebar
02F6   3014               M             movlw   B'00010100'
02F7   2???               M             call    WR_INS
                      00743     spacebar
02F8   3014               M             movlw   B'00010100'
02F9   2???               M             call    WR_INS
                      00744     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02FA   01B9               M                 clrf    Table_Counter
02FB   0103               M                 clrw
02FC                      M loop_disp
02FC   0839               M         movf    Table_Counter,W
02FD   2???               M                 call    FF
02FE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02FF   1903               M                 btfsc   STATUS,Z
0300   2???               M                 goto    end_disp
0301   2???               M                 call    WR_DATA
0302   0AB9               M                 incf    Table_Counter,F
0303   2???               M                 goto    loop_disp
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0304                      M end_disp
                      00745     writenum_reg    num_FF
0304   082B               M             movf    num_FF,W
0305   3E30               M             addlw   B'00110000'
0306   00BB               M             movwf   dat
0307   2???               M             call WR_DATA
0308   0008           00746     return
                      00747 
                      00748 ; Defective candles Subroutine
                      00749 ; Displays index of each defective candle (LF or FF)
                      00750 ; Reads data from state1 - state9
0309                  00751 defective
0309   2???           00752     call            Clear_Display
                      00753 
                      00754     Display         LF              ; first look at LF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
030A   01B9               M                 clrf    Table_Counter
030B   0103               M                 clrw
030C                      M loop_disp
030C   0839               M         movf    Table_Counter,W
030D   2???               M                 call    LF
030E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
030F   1903               M                 btfsc   STATUS,Z
0310   2???               M                 goto    end_disp
0311   2???               M                 call    WR_DATA
0312   0AB9               M                 incf    Table_Counter,F
0313   2???               M                 goto    loop_disp
0314                      M end_disp
0314   08AA           00755     movf            num_LF, F
0315   1D03           00756     btfss           STATUS,Z         ;if none LF, just say "none"
0316   2???           00757     goto            check_LF
                      00758     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0317   01B9               M                 clrf    Table_Counter
0318   0103               M                 clrw
0319                      M loop_disp
0319   0839               M         movf    Table_Counter,W
031A   2???               M                 call    None
031B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031C   1903               M                 btfsc   STATUS,Z
031D   2???               M                 goto    end_disp
031E   2???               M                 call    WR_DATA
031F   0AB9               M                 incf    Table_Counter,F
0320   2???               M                 goto    loop_disp
0321                      M end_disp
0321   2???           00759     goto            now_FF
                      00760 
0322                  00761 check_LF                            ; list all LF candles
0322   3002           00762     movlw           B'00000010'
0323   2???           00763     call            check_for_fail
                      00764 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0324                  00765 now_FF                              ; now look at FF
0324   2???           00766     call            Switch_Lines
                      00767     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0325   01B9               M                 clrf    Table_Counter
0326   0103               M                 clrw
0327                      M loop_disp
0327   0839               M         movf    Table_Counter,W
0328   2???               M                 call    FF
0329   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032A   1903               M                 btfsc   STATUS,Z
032B   2???               M                 goto    end_disp
032C   2???               M                 call    WR_DATA
032D   0AB9               M                 incf    Table_Counter,F
032E   2???               M                 goto    loop_disp
032F                      M end_disp
032F   08AB           00768     movf            num_FF, F
0330   1D03           00769     btfss           STATUS,Z         ;if none FF, just say "none"
0331   2???           00770     goto            check_FF
                      00771     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0332   01B9               M                 clrf    Table_Counter
0333   0103               M                 clrw
0334                      M loop_disp
0334   0839               M         movf    Table_Counter,W
0335   2???               M                 call    None
0336   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0337   1903               M                 btfsc   STATUS,Z
0338   2???               M                 goto    end_disp
0339   2???               M                 call    WR_DATA
033A   0AB9               M                 incf    Table_Counter,F
033B   2???               M                 goto    loop_disp
033C                      M end_disp
033C   0008           00772     return
                      00773 
033D                  00774 check_FF                            ; list all FF candles
033D   3003           00775     movlw           B'00000011'
033E   2???           00776     call            check_for_fail
033F   0008           00777     return
                      00778 
0340                  00779 check_for_fail  ;lists all candles that have status currently in W "stateX"
0340   00B8           00780     movwf   statetemp
                      00781         movlf   D'0', candle_index
0341   3000               M         movlw   D'0'
0342   00C7               M         movwf   candle_index
0343   1383           00782         bcf     STATUS, IRP
                      00783         movlf   0x20, FSR           ;index of right before state1
0344   3020               M         movlw   0x20
0345   0084               M         movwf   FSR
0346                  00784 check_next
0346   3009           00785         movlw   D'9'                ;exit loop if at 9
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0347   0247           00786         subwf   candle_index, W
0348   1803           00787         btfsc   STATUS,W
0349   2???           00788         goto    end_check_fail
034A   0A84           00789         incf    FSR,F               ; increment
034B   0AC7           00790         incf    candle_index,F
034C   0838           00791         movf    statetemp, W            ;see if stateN = stateX
034D   0200           00792         subwf   INDF, W
034E   1D03           00793         btfss   STATUS, Z
034F   2???           00794         goto    check_next              ;if not, go to next
                      00795         writenum_reg    candle_index    ;if so, write down the number
0350   0847               M             movf    candle_index,W
0351   3E30               M             addlw   B'00110000'
0352   00BB               M             movwf   dat
0353   2???               M             call WR_DATA
                      00796         spacebar
0354   3014               M             movlw   B'00010100'
0355   2???               M             call    WR_INS
0356   2???           00797         goto check_next
0357                  00798 end_check_fail
0357   0008           00799         return
                      00800 
                      00801 ; Time subroutine
                      00802 ; Right now this takes the time in seconds as a binary number in op_time
                      00803 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00804 ; incremented every second. However I may just take the stop time - start time
                      00805 ; from the RTC data so this might change a lot.
0358                  00806 time
0358   2???           00807     call    Clear_Display
                      00808     Display Time_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0359   01B9               M                 clrf    Table_Counter
035A   0103               M                 clrw
035B                      M loop_disp
035B   0839               M         movf    Table_Counter,W
035C   2???               M                 call    Time_Msg
035D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
035E   1903               M                 btfsc   STATUS,Z
035F   2???               M                 goto    end_disp
0360   2???               M                 call    WR_DATA
0361   0AB9               M                 incf    Table_Counter,F
0362   2???               M                 goto    loop_disp
0363                      M end_disp
0363   2???           00809     call    Switch_Lines
0364   0820           00810     movf    op_time, W
0365   2???           00811     call    big_number
0366   08C2           00812     movf    huns, F
0367   1903           00813     btfsc   STATUS,Z        ;if huns is zero don't display it
0368   2???           00814     goto    no_huns
                      00815     writenum_reg    huns
0369   0842               M             movf    huns,W
036A   3E30               M             addlw   B'00110000'
036B   00BB               M             movwf   dat
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

036C   2???               M             call WR_DATA
036D                  00816 no_huns
036D   08C3           00817     movf    tens, F
036E   1903           00818     btfsc   STATUS,Z        ;if tens is zero don't display it
036F   2???           00819     goto    no_tens
                      00820     writenum_reg    tens
0370   0843               M             movf    tens,W
0371   3E30               M             addlw   B'00110000'
0372   00BB               M             movwf   dat
0373   2???               M             call WR_DATA
0374                  00821 no_tens
                      00822     writenum_reg    ones
0374   0844               M             movf    ones,W
0375   3E30               M             addlw   B'00110000'
0376   00BB               M             movwf   dat
0377   2???               M             call WR_DATA
                      00823     Display Seconds
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0378   01B9               M                 clrf    Table_Counter
0379   0103               M                 clrw
037A                      M loop_disp
037A   0839               M         movf    Table_Counter,W
037B   2???               M                 call    Seconds
037C   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
037D   1903               M                 btfsc   STATUS,Z
037E   2???               M                 goto    end_disp
037F   2???               M                 call    WR_DATA
0380   0AB9               M                 incf    Table_Counter,F
0381   2???               M                 goto    loop_disp
0382                      M end_disp
0382   0008           00824     return
                      00825 
                      00826 ; Export subroutine         
                      00827 ; Exports data from current run to hyperterminal
                      00828 ; reads start time and num_tot/num_ff/num_lf data
0383                  00829 export
                      00830     printchar   0x7       ;makes a noise on the PC
0383   3007               M             movlw   0x7
0384   2???               M             call    writetoPC
                      00831     printchar   0xD       ;go back to left edge
0385   300D               M             movlw   0xD
0386   2???               M             call    writetoPC
                      00832     printchar   "T"
0387   3054               M             movlw   "T"
0388   2???               M             call    writetoPC
                      00833     printchar   "e"
0389   3065               M             movlw   "e"
038A   2???               M             call    writetoPC
                      00834     printchar   "s"
038B   3073               M             movlw   "s"
038C   2???               M             call    writetoPC
                      00835     printchar   "t"
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

038D   3074               M             movlw   "t"
038E   2???               M             call    writetoPC
                      00836     printchar   " "
038F   3020               M             movlw   " "
0390   2???               M             call    writetoPC
                      00837     printchar   "a"
0391   3061               M             movlw   "a"
0392   2???               M             call    writetoPC
                      00838     printchar   "t"
0393   3074               M             movlw   "t"
0394   2???               M             call    writetoPC
                      00839     printchar   ":"
0395   303A               M             movlw   ":"
0396   2???               M             call    writetoPC
                      00840     printchar   " "
0397   3020               M             movlw   " "
0398   2???               M             call    writetoPC
                      00841     printchar   "2"
0399   3032               M             movlw   "2"
039A   2???               M             call    writetoPC
                      00842     printchar   "0"
039B   3030               M             movlw   "0"
039C   2???               M             call    writetoPC
                      00843     printASC   start_year10
039D   1283 1303          M             banksel start_year10
039F   082D               M             movf    start_year10,W
03A0   2???               M             call    writetoPC
                      00844     printASC   start_year1
03A1   1283 1303          M             banksel start_year1
03A3   082E               M             movf    start_year1,W
03A4   2???               M             call    writetoPC
                      00845     printchar   "/"
03A5   302F               M             movlw   "/"
03A6   2???               M             call    writetoPC
                      00846     printASC   start_month10
03A7   1283 1303          M             banksel start_month10
03A9   082F               M             movf    start_month10,W
03AA   2???               M             call    writetoPC
                      00847     printASC   start_month1
03AB   1283 1303          M             banksel start_month1
03AD   0830               M             movf    start_month1,W
03AE   2???               M             call    writetoPC
                      00848     printchar   "/"
03AF   302F               M             movlw   "/"
03B0   2???               M             call    writetoPC
                      00849     printASC   start_date10
03B1   1283 1303          M             banksel start_date10
03B3   0831               M             movf    start_date10,W
03B4   2???               M             call    writetoPC
                      00850     printASC   start_date1
03B5   1283 1303          M             banksel start_date1
03B7   0832               M             movf    start_date1,W
03B8   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00851     printchar   " "
03B9   3020               M             movlw   " "
03BA   2???               M             call    writetoPC
                      00852     printASC   start_hour10
03BB   1283 1303          M             banksel start_hour10
03BD   0833               M             movf    start_hour10,W
03BE   2???               M             call    writetoPC
                      00853     printASC   start_hour1
03BF   1283 1303          M             banksel start_hour1
03C1   0834               M             movf    start_hour1,W
03C2   2???               M             call    writetoPC
                      00854     printchar   ":"
03C3   303A               M             movlw   ":"
03C4   2???               M             call    writetoPC
                      00855     printASC   start_min10
03C5   1283 1303          M             banksel start_min10
03C7   0835               M             movf    start_min10,W
03C8   2???               M             call    writetoPC
                      00856     printASC   start_min1
03C9   1283 1303          M             banksel start_min1
03CB   0836               M             movf    start_min1,W
03CC   2???               M             call    writetoPC
                      00857     newline
                          M             printchar   0xA ;changes line
03CD   300A               M             movlw   0xA
03CE   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
03CF   300D               M             movlw   0xD
03D0   2???               M             call    writetoPC
                      00858     printchar   "T"
03D1   3054               M             movlw   "T"
03D2   2???               M             call    writetoPC
                      00859     printchar   "i"
03D3   3069               M             movlw   "i"
03D4   2???               M             call    writetoPC
                      00860     printchar   "m"
03D5   306D               M             movlw   "m"
03D6   2???               M             call    writetoPC
                      00861     printchar   "e"
03D7   3065               M             movlw   "e"
03D8   2???               M             call    writetoPC
                      00862     printchar   ":"
03D9   303A               M             movlw   ":"
03DA   2???               M             call    writetoPC
                      00863     printchar   " "
03DB   3020               M             movlw   " "
03DC   2???               M             call    writetoPC
                      00864     printchar   " "
03DD   3020               M             movlw   " "
03DE   2???               M             call    writetoPC
                      00865     printchar   " "
03DF   3020               M             movlw   " "
03E0   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00866     printchar   " "
03E1   3020               M             movlw   " "
03E2   2???               M             call    writetoPC
03E3   1283 1303      00867     banksel huns
03E5   08C2           00868     movf    huns, F
03E6   1903           00869     btfsc   STATUS,Z        ;if huns is zero don't display it
03E7   2???           00870     goto    nohuns
                      00871     printBCD   huns
03E8   1283 1303          M             banksel huns
03EA   0842               M             movf    huns, W
03EB   3E30               M             addlw   0x30
03EC   2???               M             call    writetoPC
03ED                  00872 nohuns
03ED   1283 1303      00873     banksel tens
03EF   08C3           00874     movf    tens, F
03F0   1903           00875     btfsc   STATUS,Z        ;if tens is zero don't display it
03F1   2???           00876     goto    notens
                      00877     printBCD   tens
03F2   1283 1303          M             banksel tens
03F4   0843               M             movf    tens, W
03F5   3E30               M             addlw   0x30
03F6   2???               M             call    writetoPC
03F7                  00878 notens
                      00879     printBCD   ones
03F7   1283 1303          M             banksel ones
03F9   0844               M             movf    ones, W
03FA   3E30               M             addlw   0x30
03FB   2???               M             call    writetoPC
                      00880     printchar   " "
03FC   3020               M             movlw   " "
03FD   2???               M             call    writetoPC
                      00881     printchar   "s"
03FE   3073               M             movlw   "s"
03FF   2???               M             call    writetoPC
                      00882     printchar   "e"
0400   3065               M             movlw   "e"
0401   2???               M             call    writetoPC
                      00883     printchar   "c"
0402   3063               M             movlw   "c"
0403   2???               M             call    writetoPC
                      00884     newline
                          M             printchar   0xA ;changes line
0404   300A               M             movlw   0xA
0405   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0406   300D               M             movlw   0xD
0407   2???               M             call    writetoPC
                      00885     printchar   "C"
0408   3043               M             movlw   "C"
0409   2???               M             call    writetoPC
                      00886     printchar   "a"
040A   3061               M             movlw   "a"
040B   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00887     printchar   "n"
040C   306E               M             movlw   "n"
040D   2???               M             call    writetoPC
                      00888     printchar   "d"
040E   3064               M             movlw   "d"
040F   2???               M             call    writetoPC
                      00889     printchar   "l"
0410   306C               M             movlw   "l"
0411   2???               M             call    writetoPC
                      00890     printchar   "e"
0412   3065               M             movlw   "e"
0413   2???               M             call    writetoPC
                      00891     printchar   "s"
0414   3073               M             movlw   "s"
0415   2???               M             call    writetoPC
                      00892     printchar   ":"
0416   303A               M             movlw   ":"
0417   2???               M             call    writetoPC
                      00893     printchar   " "
0418   3020               M             movlw   " "
0419   2???               M             call    writetoPC
                      00894     printchar   " "
041A   3020               M             movlw   " "
041B   2???               M             call    writetoPC
                      00895     printchar   " "
041C   3020               M             movlw   " "
041D   2???               M             call    writetoPC
                      00896     printchar   " "
041E   3020               M             movlw   " "
041F   2???               M             call    writetoPC
                      00897     printchar   " "
0420   3020               M             movlw   " "
0421   2???               M             call    writetoPC
                      00898     printchar   " "
0422   3020               M             movlw   " "
0423   2???               M             call    writetoPC
                      00899     printBCD    num_tot
0424   1283 1303          M             banksel num_tot
0426   082C               M             movf    num_tot, W
0427   3E30               M             addlw   0x30
0428   2???               M             call    writetoPC
                      00900     newline
                          M             printchar   0xA ;changes line
0429   300A               M             movlw   0xA
042A   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
042B   300D               M             movlw   0xD
042C   2???               M             call    writetoPC
                      00901     printchar   "L"
042D   304C               M             movlw   "L"
042E   2???               M             call    writetoPC
                      00902     printchar   "E"
042F   3045               M             movlw   "E"
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0430   2???               M             call    writetoPC
                      00903     printchar   "D"
0431   3044               M             movlw   "D"
0432   2???               M             call    writetoPC
                      00904     printchar   " "
0433   3020               M             movlw   " "
0434   2???               M             call    writetoPC
                      00905     printchar   "f"
0435   3066               M             movlw   "f"
0436   2???               M             call    writetoPC
                      00906     printchar   "a"
0437   3061               M             movlw   "a"
0438   2???               M             call    writetoPC
                      00907     printchar   "i"
0439   3069               M             movlw   "i"
043A   2???               M             call    writetoPC
                      00908     printchar   "l"
043B   306C               M             movlw   "l"
043C   2???               M             call    writetoPC
                      00909     printchar   ":"
043D   303A               M             movlw   ":"
043E   2???               M             call    writetoPC
                      00910     printchar   " "
043F   3020               M             movlw   " "
0440   2???               M             call    writetoPC
                      00911     printchar   " "
0441   3020               M             movlw   " "
0442   2???               M             call    writetoPC
                      00912     printchar   " "
0443   3020               M             movlw   " "
0444   2???               M             call    writetoPC
                      00913     printchar   " "
0445   3020               M             movlw   " "
0446   2???               M             call    writetoPC
                      00914     printchar   " "
0447   3020               M             movlw   " "
0448   2???               M             call    writetoPC
                      00915     printBCD    num_LF
0449   1283 1303          M             banksel num_LF
044B   082A               M             movf    num_LF, W
044C   3E30               M             addlw   0x30
044D   2???               M             call    writetoPC
                      00916     newline
                          M             printchar   0xA ;changes line
044E   300A               M             movlw   0xA
044F   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0450   300D               M             movlw   0xD
0451   2???               M             call    writetoPC
                      00917     printchar   "F"
0452   3046               M             movlw   "F"
0453   2???               M             call    writetoPC
                      00918     printchar   "l"
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0454   306C               M             movlw   "l"
0455   2???               M             call    writetoPC
                      00919     printchar   "i"
0456   3069               M             movlw   "i"
0457   2???               M             call    writetoPC
                      00920     printchar   "c"
0458   3063               M             movlw   "c"
0459   2???               M             call    writetoPC
                      00921     printchar   "k"
045A   306B               M             movlw   "k"
045B   2???               M             call    writetoPC
                      00922     printchar   "e"
045C   3065               M             movlw   "e"
045D   2???               M             call    writetoPC
                      00923     printchar   "r"
045E   3072               M             movlw   "r"
045F   2???               M             call    writetoPC
                      00924     printchar   " "
0460   3020               M             movlw   " "
0461   2???               M             call    writetoPC
                      00925     printchar   "f"
0462   3066               M             movlw   "f"
0463   2???               M             call    writetoPC
                      00926     printchar   "a"
0464   3061               M             movlw   "a"
0465   2???               M             call    writetoPC
                      00927     printchar   "i"
0466   3069               M             movlw   "i"
0467   2???               M             call    writetoPC
                      00928     printchar   "l"
0468   306C               M             movlw   "l"
0469   2???               M             call    writetoPC
                      00929     printchar   ":"
046A   303A               M             movlw   ":"
046B   2???               M             call    writetoPC
                      00930     printchar   " "
046C   3020               M             movlw   " "
046D   2???               M             call    writetoPC
                      00931     printBCD    num_FF
046E   1283 1303          M             banksel num_FF
0470   082B               M             movf    num_FF, W
0471   3E30               M             addlw   0x30
0472   2???               M             call    writetoPC
                      00932     newline
                          M             printchar   0xA ;changes line
0473   300A               M             movlw   0xA
0474   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0475   300D               M             movlw   0xD
0476   2???               M             call    writetoPC
                      00933     newline  
                          M             printchar   0xA ;changes line
0477   300A               M             movlw   0xA
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0478   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0479   300D               M             movlw   0xD
047A   2???               M             call    writetoPC
047B   1283           00934     bcf STATUS,RP0  ; back to bank 0
047C   0008           00935     return
                      00936 
                      00937 
                      00938 ;***************************************
                      00939 ; GENERAL PURPOSE SUBROUTINES
                      00940 ;***************************************
                      00941 
                      00942 ; DISPLAY BIG NUMBER SUBROUTINE
                      00943 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00944 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00945 ; Uses "shift and add 3" algorithm
047D                  00946 big_number
                      00947     movff   op_time, op_time_save         ;save the original op_time
047D   0820               M         movf    op_time, W
047E   00C1               M         movwf   op_time_save
                      00948     movlf   8, bignumcount                ;will shift 8 times
047F   3008               M         movlw   8
0480   00C5               M         movwf   bignumcount
0481   01C2           00949     clrf    huns
0482   01C3           00950     clrf    tens
0483   01C4           00951     clrf    ones
                      00952 
0484                  00953 BCDadd3                             ; if any digit > 5, add3
0484   3005           00954     movlw   0x5
0485   0242           00955     subwf   huns, W
0486   1803           00956     btfsc   STATUS, C
0487   2???           00957     call    add3huns
                      00958 
0488   3005           00959     movlw   0x5
0489   0243           00960     subwf   tens, W
048A   1803           00961     btfsc   STATUS, C
048B   2???           00962     call    add3tens
                      00963 
048C   3005           00964     movlw   0x5
048D   0244           00965     subwf   ones, W
048E   1803           00966     btfsc   STATUS, C
048F   2???           00967     call    add3ones
                      00968 
0490   03C5           00969     decf    bignumcount, 1
0491   1003           00970     bcf     STATUS, C
0492   0DA0           00971     rlf     op_time, 1              ; shift
0493   0DC4           00972     rlf     ones, 1
0494   1A44           00973     btfsc   ones,4 ;
0495   2???           00974     call    carryones               ; carry if too large
0496   0DC3           00975     rlf     tens, 1
                      00976 
0497   1A43           00977     btfsc   tens,4 ;
0498   2???           00978     call    carrytens
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0499   0DC2           00979     rlf     huns,1
049A   1003           00980     bcf     STATUS, C
                      00981 
049B   0845           00982     movf    bignumcount, W
049C   1D03           00983     btfss   STATUS, Z
049D   2???           00984     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00985 
                      00986     movff    op_time_save, op_time     ;restore the original op_time
049E   0841               M         movf    op_time_save, W
049F   00A0               M         movwf   op_time
04A0   0008           00987     return
                      00988 
04A1                  00989 add3huns
04A1   3003           00990     movlw 0x3
04A2   07C2           00991     addwf huns,F
04A3   0008           00992     return
04A4                  00993 add3tens
04A4   3003           00994     movlw 0x3
04A5   07C3           00995     addwf tens,F
04A6   0008           00996     return
04A7                  00997 add3ones
04A7   3003           00998     movlw 0x3
04A8   07C4           00999     addwf ones,F
04A9   0008           01000     return
04AA                  01001 carryones
04AA   1244           01002     bcf ones, 4
04AB   1403           01003     bsf STATUS, C
04AC   0008           01004     return
04AD                  01005 carrytens
04AD   1243           01006     bcf tens, 4
04AE   1403           01007     bsf STATUS, C
04AF   0008           01008     return
                      01009 
                      01010 
                      01011 ; DELAY 0.5S SUBROUTINE (from sample code)
                      01012 ; Delays exactly 0.5sec
04B0                  01013 HalfS
  0000                01014         local   HalfS_0
04B0   3088           01015       movlw 0x88
04B1   00BE           01016       movwf COUNTH
04B2   30BD           01017       movlw 0xBD
04B3   00BF           01018       movwf COUNTM
04B4   3003           01019       movlw 0x03
04B5   00C0           01020       movwf COUNTL
                      01021 
04B6                  01022 HalfS_0
04B6   0BBE           01023       decfsz COUNTH, f
04B7   2???           01024       goto   $+2
04B8   0BBF           01025       decfsz COUNTM, f
04B9   2???           01026       goto   $+2
04BA   0BC0           01027       decfsz COUNTL, f
04BB   2???           01028       goto   HalfS_0
                      01029 
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04BC   2???           01030       goto $+1
04BD   0000           01031       nop
04BE   0000           01032       nop
04BF   0008           01033                 return
                      01034 
                      01035 
                      01036 ;***************************************
                      01037 ; LCD SUBROUTINES (from sample code)
                      01038 ;***************************************
                      01039 
                      01040 ; Initialize the LCD
04C0                  01041 InitLCD
04C0   1283           01042         bcf STATUS,RP0
04C1   1588           01043         bsf E     ;E default high
                      01044 
                      01045         ;Wait for LCD POR to finish (~15ms)
04C2   2???           01046         call lcdLongDelay
04C3   2???           01047         call lcdLongDelay
04C4   2???           01048         call lcdLongDelay
                      01049 
                      01050         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      01051         ; -> Send b'0011' 3 times
04C5   3033           01052         movlw   b'00110011'
04C6   2???           01053         call    WR_INS
04C7   2???           01054         call lcdLongDelay
04C8   2???           01055         call lcdLongDelay
04C9   3032           01056         movlw   b'00110010'
04CA   2???           01057         call    WR_INS
04CB   2???           01058         call lcdLongDelay
04CC   2???           01059         call lcdLongDelay
                      01060 
                      01061         ; 4 bits, 2 lines, 5x7 dots
04CD   3028           01062         movlw   b'00101000'
04CE   2???           01063         call    WR_INS
04CF   2???           01064         call lcdLongDelay
04D0   2???           01065         call lcdLongDelay
                      01066 
                      01067         ; display on/off
04D1   300C           01068         movlw   b'00001100'
04D2   2???           01069         call    WR_INS
04D3   2???           01070         call lcdLongDelay
04D4   2???           01071         call lcdLongDelay
                      01072 
                      01073         ; Entry mode
04D5   3006           01074         movlw   b'00000110'
04D6   2???           01075         call    WR_INS
04D7   2???           01076         call lcdLongDelay
04D8   2???           01077         call lcdLongDelay
                      01078 
                      01079         ; Clear ram
04D9   3001           01080         movlw   b'00000001'
04DA   2???           01081         call    WR_INS
04DB   2???           01082         call lcdLongDelay
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04DC   2???           01083         call lcdLongDelay
04DD   0008           01084         return
                      01085 
                      01086 ; Clear the display
04DE                  01087 Clear_Display
04DE   3001           01088                 movlw   B'00000001'
04DF   2???           01089                 call    WR_INS
04E0   0008           01090                 return
                      01091 
                      01092 ;Switch lines
04E1                  01093 Switch_Lines
04E1   30C0           01094                 movlw   B'11000000'
04E2   2???           01095                 call    WR_INS
04E3   0008           01096                 return
                      01097 
                      01098 ; Write an instruction to the LCD (see page 7-104)
                      01099 ; The instruction must be in W
04E4                  01100 WR_INS
04E4   1108           01101         bcf             RS                              ;clear RS
04E5   00BA           01102         movwf   com                             ;W --> com
04E6   39F0           01103         andlw   0xF0                    ;mask 4 bits MSB w = X0
04E7   0088           01104         movwf   PORTD                   ;Send 4 bits MSB
04E8   1588           01105         bsf             E                               ;
04E9   2???           01106         call    lcdLongDelay    ;__    __
04EA   1188           01107         bcf             E                               ;  |__|
04EB   0E3A           01108         swapf   com,w
04EC   39F0           01109         andlw   0xF0                    ;1111 0010
04ED   0088           01110         movwf   PORTD                   ;send 4 bits LSB
04EE   1588           01111         bsf             E                               ;
04EF   2???           01112         call    lcdLongDelay    ;__    __
04F0   1188           01113         bcf             E                               ;  |__|
04F1   2???           01114         call    lcdLongDelay
04F2   0008           01115         return
                      01116 
                      01117 ; Write data at current cursor location
                      01118 ; Character code (see page 7-104) must be in W
04F3                  01119 WR_DATA
04F3   1508           01120         bsf             RS
04F4   00BB           01121         movwf   dat
04F5   083B           01122         movf    dat,w
04F6   39F0           01123         andlw   0xF0
04F7   3E04           01124         addlw   4
04F8   0088           01125         movwf   PORTD
04F9   1588           01126         bsf             E                               ;
04FA   2???           01127         call    lcdLongDelay    ;__    __
04FB   1188           01128         bcf             E                               ;  |__|
04FC   0E3B           01129         swapf   dat,w
04FD   39F0           01130         andlw   0xF0
04FE   3E04           01131         addlw   4
04FF   0088           01132         movwf   PORTD
0500   1588           01133         bsf             E                               ;
0501   2???           01134         call    lcdLongDelay    ;__    __
0502   1188           01135         bcf             E                               ;  |__|
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0503   0008           01136         return
                      01137 
                      01138 ;Delay routine because PIC is way faster than the LCD can handle
0504                  01139 lcdLongDelay
0504   3014           01140     movlw d'20'
0505   00BD           01141     movwf lcd_d2
0506                  01142 LLD_LOOP
                      01143     LCD_DELAY
0506   30FF               M             movlw   0xFF
0507   00BC               M             movwf   lcd_d1
0508   0BBC               M             decfsz  lcd_d1,f
0509   2???               M             goto    $-1
050A   0BBD           01144     decfsz lcd_d2,f
050B   2???           01145     goto LLD_LOOP
050C   0008           01146     return
                      01147 
                      01148 
                      01149 ;***************************************
                      01150 ; PC INTERFACE SUBROUTINES (from sample code)
                      01151 ;***************************************
050D                  01152 InitUSART
050D   1683           01153         bsf       STATUS,RP0     ; select bank 1
050E   300F           01154         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
050F   0099           01155         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0510   0198           01156         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01157 
0511   1283           01158         bcf       STATUS,RP0     ; select bank 0
0512   1798           01159         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
0513   1618           01160         bsf       RCSTA,CREN     ; continuous receive
                      01161 
0514   1683           01162         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0515   1698           01163         bsf       TXSTA,TXEN     ; Transmit enable
0516   0008           01164         return
                      01165 
                      01166 
0517                  01167 writetoPC
                      01168 ; Writes the data in W to the PC
                      01169 ; end up in bank1!
0517   1283           01170         bcf       STATUS,RP0     ; Go to bank 0
0518   0099           01171         movwf     TXREG          ; Send contents of W to RS232
0519   1683           01172         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
051A   1C98           01173         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
051B   2???           01174         goto      $-1
051C   0008           01175         return
                      01176 
                      01177 
                      01178 ;***************************************
                      01179 ; ISR
                      01180 ; Currently only care about TMR0
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01181 ; TMR0 overflows at 256*256; each time, decrement count38
                      01182 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      01183 ; When this hapens, op_time increments
                      01184 ;***************************************
051D                  01185 isr
051D   00F9           01186     movwf   w_isr           ;save W and status
051E   0E03           01187     swapf   STATUS, W
051F   0183           01188     clrf    STATUS
0520   00FA           01189     movwf   status_isr
                      01190 ;    movf    PCLATH, W      ;if using pages
                      01191 ;    movwf   pclath_isr
                      01192 ;    clrf    PCLATH
                      01193 
0521   0BC6           01194     decfsz  count38, F     ;if count38 gets to 38 it's been one second
0522   2???           01195     goto    end_isr
                      01196     movlf   D'38', count38  ;so reset count38
0523   3026               M         movlw   D'38'
0524   00C6               M         movwf   count38
0525   0AA0           01197     incf    op_time, F         ; and increment op_time
                      01198 
0526                  01199 end_isr
                      01200 
                      01201 ;    btfss   PHOTODATA       ;if PHOTODATA is 1, light is off
                      01202 ;    incf    photocout       ;if it is 0, light is on so photocount++
                      01203 
                      01204 ;    movf    pclath_isr, W  ;if using pages
                      01205 ;    movwf    PCLATH
0526   0E7A           01206     swapf   status_isr, W   ;restore W and status
0527   0083           01207     movwf   STATUS
0528   0EF9           01208     swapf   w_isr, F
0529   0E79           01209     swapf   w_isr, W
052A   110B           01210     bcf     INTCON, T0IF    ;clear the interrupt flag
052B   0009           01211     retfie
                      01212 
                      01213 
3F72                  01214     END
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           00000484
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            0000003E
COUNTL                            00000040
COUNTM                            0000003F
CREN                              00000004
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CSRC                              00000007
Clear_Display                     000004DE
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
F                                 00000001
FERR                              00000002
FF                                0000008F
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000004B0
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           000004C0
InitUSART                         0000050D
LCD_DELAY                         
LED_fail                          0000005C
LF                                00000089
LLD_LOOP                          00000506
Logs_Msg1                         0000009D
Logs_Msg2                         000000AD
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000095
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      000004E1
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000039
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           000004F3
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

WR_INS                            000004E4
Z                                 00000002
_.org_1_0141                      00000141
_.org_1_0187                      00000187
_.org_1_018C                      0000018C
_.org_1_01A5                      000001A5
_.org_1_01FE                      000001FE
_.org_1_04B7                      000004B7
_.org_1_04B9                      000004B9
_.org_1_04BC                      000004BC
_.org_1_0509                      00000509
_.org_1_051B                      0000051B
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          000004A1
add3ones                          000004A7
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

add3tens                          000004A4
badkey                            000001FD
big_number                        0000047D
bignumcount                       00000045
candle_index                      00000047
carryones                         000004AA
carrytens                         000004AD
check_1                           00000201
check_2                           0000020C
check_3                           00000218
check_4                           00000224
check_5                           00000230
check_6                           0000023C
check_7                           00000248
check_8                           00000254
check_9                           00000260
check_FF                          0000033D
check_LED                         000002B9
check_LF                          00000322
check_defective                   00000272
check_done                        000001EC
check_export                      0000027E
check_flick                       000002C8
check_for_fail                    00000340
check_log1                        000001A9
check_log2                        000001B9
check_log3                        000001CA
check_log4                        000001DB
check_next                        00000346
check_none                        0000029C
check_pass                        000002AA
check_standby                     00000284
check_start                       00000295
check_summary                     0000026C
check_time                        00000278
com                               0000003A
count38                           00000046
dat                               0000003B
default_key                       0000029A
default_state                     000002D7
defective                         00000309
display_state                     0000029B
end_check_fail                    00000357
end_isr                           00000526
end_operation                     00000172
export                            00000383
huns                              00000042
i2c_common_setup                  00000000
information                       00000200
init                              000000BE
isr                               0000051D
keytemp                           00000037
lcdLongDelay                      00000504
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

lcd_d1                            0000003C
lcd_d2                            0000003D
logs                              0000018E
movff                             
movlf                             
newline                           
no_huns                           0000036D
no_tens                           00000374
nohuns                            000003ED
notens                            000003F7
now_FF                            00000324
num_FF                            0000002B
num_LF                            0000002A
num_tot                           0000002C
ones                              00000044
op_time                           00000020
op_time_save                      00000041
poll                              00000186
polling                           000001A4
printASC                          
printBCD                          
printchar                         
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
spacebar                          
start                             00000143
start_date1                       00000032
start_date10                      00000031
start_hour1                       00000034
start_hour10                      00000033
start_min1                        00000036
start_min10                       00000035
start_month1                      00000030
start_month10                     0000002F
start_year1                       0000002E
start_year10                      0000002D
state1                            00000021
state2                            00000022
state3                            00000023
state4                            00000024
state5                            00000025
state6                            00000026
state7                            00000027
state8                            00000028
state9                            00000029
statetemp                         00000038
status_isr                        0000007A
summary                           000002D8
tens                              00000043
time                              00000358
MPASM 5.54                          MAIN.ASM   2-12-2014  16:50:45         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

w_isr                             00000079
waiting                           000000DB
write_rtc                         00000000
writenum                          
writenum_reg                      
writetoPC                         00000517

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     9 reported,     0 suppressed

