MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013 
                      00014 
                      00015 ;***************************************
                      00016 ; VARIABLES
                      00017 ;***************************************
                      00018 
                      00019 ; Also see i2c_commmon.asm -> has stuff at 0x70 on for RTC
                      00020 
                      00021     cblock      0x20
                      00022         ; temps, counters, etc.
  00000020            00023         keytemp         ; for data display mode
  00000021            00024         statetemp
  00000022            00025                 Table_Counter   ; for LCD stuff
  00000023            00026                 com
  00000024            00027                 dat
  00000025            00028         lcd_d1
  00000026            00029         lcd_d2
  00000027            00030         COUNTH          ;for delay 0.5s routine
  00000028            00031         COUNTM
  00000029            00032         COUNTL
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002A            00033         op_time_save    ;for operation time
  0000002B            00034         huns
  0000002C            00035         tens
  0000002D            00036         ones
  0000002E            00037         bignumcount
  0000002F            00038         count38         ;for isr
  00000030            00039         w_isr               ;I think this needs to be in all banks??
  00000031            00040         status_isr
                      00041 
                      00042         ; important information
  00000032            00043         op_time    ;in seconds
  00000033            00044         state1     ;where   0 = none      1 = pass
  00000034            00045         state2     ;        2 = led fail  3 = flicker fail
  00000035            00046         state3
  00000036            00047         state4
  00000037            00048         state5
  00000038            00049         state6
  00000039            00050         state7
  0000003A            00051         state8
  0000003B            00052         state9
  0000003C            00053         num_LF      ;BCD
  0000003D            00054         num_FF      ;BCD
  0000003E            00055         num_tot     ;BCD
  0000003F            00056         start_year10    ;starting time (for log)
  00000040            00057         start_year1     ; note: ALREADY ASCII!
  00000041            00058         start_month10
  00000042            00059         start_month1
  00000043            00060         start_date10
  00000044            00061         start_date1
  00000045            00062         start_hour10
  00000046            00063         start_hour1
  00000047            00064         start_min10
  00000048            00065         start_min1
                      00066 
                      00067         endc
                      00068 
                      00069 
                      00070 ;***************************************
                      00071 ; MACROS
                      00072 ;***************************************
                      00073 
                      00074 ;LCD Delay
                      00075 LCD_DELAY   macro
                      00076             movlw   0xFF
                      00077             movwf   lcd_d1
                      00078             decfsz  lcd_d1,f
                      00079             goto    $-1
                      00080             endm
                      00081 
                      00082 ; Display a msg on LCD
                      00083 Display macro   Message
                      00084                 local   loop_disp
                      00085                 local   end_disp
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086                 clrf    Table_Counter
                      00087                 clrw
                      00088 loop_disp
                      00089         movf    Table_Counter,W
                      00090                 call    Message
                      00091                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00092                 btfsc   STATUS,Z
                      00093                 goto    end_disp
                      00094                 call    WR_DATA
                      00095                 incf    Table_Counter,F
                      00096                 goto    loop_disp
                      00097 end_disp
                      00098                 endm
                      00099 
                      00100 ;Move cursor right one position
                      00101 spacebar    macro
                      00102             movlw   B'00010100'
                      00103             call    WR_INS
                      00104             endm
                      00105 
                      00106 ;Shortcuts for moving literals / registers
                      00107 movlf   macro   l, f
                      00108         movlw   l
                      00109         movwf   f
                      00110         endm
                      00111 
                      00112 movff   macro   source, dest
                      00113         movf    source, W
                      00114         movwf   dest
                      00115         endm
                      00116 
                      00117 ; Display a BCD on LCD as decimal
                      00118 writenum    macro   number          ; literal
                      00119             movlw    number
                      00120             addlw   B'00110000'
                      00121             movwf   dat
                      00122             call WR_DATA
                      00123             endm
                      00124 
                      00125 writenum_reg    macro   reg         ; from a register containing BCD
                      00126             movfw    reg
                      00127             addlw   B'00110000'
                      00128             movwf   dat
                      00129             call WR_DATA
                      00130             endm
                      00131 
                      00132 ;Write to PC (hyperterminal)
                      00133 printchar   macro   char            ;direct ASCII code literal (or in "")
                      00134             movlw   char
                      00135             call    writetoPC
                      00136             endm
                      00137 
                      00138 printASC    macro   reg            ;ASCII code inside a register
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139             banksel reg
                      00140             movfw   reg
                      00141             call    writetoPC
                      00142             endm
                      00143 
                      00144 printBCD    macro   BCD            ;BCD inside a register
                      00145             banksel BCD
                      00146             movfw   BCD
                      00147             addlw   0x30
                      00148             call    writetoPC
                      00149             endm
                      00150 
                      00151 newline     macro
                      00152             printchar   0xA ;changes line
                      00153             printchar   0xD ;goes back to left
                      00154             endm
                      00155 ;***************************************
                      00156 ; VECTORS
                      00157 ;***************************************
                      00158 
                      00159     ORG       0x000
0000   2???           00160          goto      init
                      00161     ORG       0x004
0004   2???           00162         goto    isr
                      00163 
                      00164 
                      00165 ;***************************************
                      00166 ; TABLES (MESSAGES)
                      00167 ;***************************************
0005                  00168 Standby_Msg
0005   0782           00169                 addwf   PCL,F
0006   3453 3454 3441 00170                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00171 Start_Msg
000E   0782           00172         addwf   PCL,F
000F   3449 346E 3473 00173         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00174 End_Msg
0020   0782           00175         addwf   PCL,F
0021   3443 346F 346D 00176         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00177 Time_Msg
002A   0782           00178                 addwf   PCL,F
002B   344F 3470 3465 00179                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       346D 3465 343A 
       3400 
003B                  00180 Seconds
003B   0782           00181         addwf   PCL,F
003C   3420 3473 3465 00182         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00183 Not_present
0045   0782           00184         addwf   PCL,F
0046   343A 3420 344E 00185         dt      ": Not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00186 Pass
0054   0782           00187                 addwf   PCL,F
0055   343A 3420 3450 00188                 dt              ": Pass",0
       3461 3473 3473 
       3400 
005C                  00189 LED_fail
005C   0782           00190                 addwf   PCL,F
005D   343A 3420 344C 00191                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
       346C 3400 
0068                  00192 Flick_fail
0068   0782           00193                 addwf   PCL,F
0069   343A 3420 3446 00194                 dt              ": Flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00195 Total_Msg
0078   0782           00196         addwf   PCL,F
0079   3454 346F 3474 00197         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00198 LF
0089   0782           00199         addwf   PCL,F
008A   344C 3446 343A 00200         dt      "LF: ",0
       3420 3400 
008F                  00201 FF
008F   0782           00202         addwf   PCL,F
0090   3446 3446 343A 00203         dt      "FF: ",0
       3420 3400 
0095                  00204 None
0095   0782           00205         addwf   PCL,F
0096   343C 346E 346F 00206         dt      "<none>", 0
       346E 3465 343E 
       3400 
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009D                  00207 Logs_Msg1
009D   0782           00208         addwf   PCL,F
009E   3431 342D 3434 00209         dt      "1-4 to see log",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3400 
00AD                  00210 Logs_Msg2
00AD   0782           00211         addwf   PCL,F
00AE   3453 3454 3441 00212         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
       3400 
                      00213 
                      00214 ;***************************************
                      00215 ; MAIN PROGRAM
                      00216 ;***************************************
                      00217 
00BE                  00218 init
                      00219         movlf     b'10000000', INTCON   ;interrupts enabled
00BE   3080               M         movlw   b'10000000'
00BF   008B               M         movwf   INTCON
                      00220 
00C0   1683           00221         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C1   0185           00222         clrf      TRISA                 ; PortA is output - not yet used
                      00223         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs (rest unused; RB0 may be 
                            external interrupt)
00C2   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C3   0086               M         movwf   TRISB
                      00224                                         ; note can disable keypad to free up these ports during operatio
                            n if necessary.
                      00225         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC (rest unused; [7:6] may be RS-232)
00C4   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C6   0188           00226         clrf      TRISD                 ; PortD[2:7] is LCD output (rest unused)
                      00227 
00C7   1283           00228         bcf       STATUS,RP0     ; select bank 0
00C8   0185           00229         clrf      PORTA
00C9   0186           00230         clrf      PORTB
00CA   0187           00231         clrf      PORTC
00CB   0188           00232         clrf      PORTD
                      00233 
00CC   2???           00234         call      i2c_common_setup  ;Set up I2C for communication
00CD   2???           00235         call      InitLCD           ;Initialize the LCD
00CE   2???           00236         call      InitUSART         ;Set up USART for RS232
                      00237 
00CF   1283           00238         bcf STATUS,RP0          ; bank0
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00239                 
                      00240         Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
00D0   01A2               M                 clrf    Table_Counter
00D1   0103               M                 clrw
00D2                      M loop_disp
00D2   0822               M         movf    Table_Counter,W
00D3   2???               M                 call    Standby_Msg
00D4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00D5   1903               M                 btfsc   STATUS,Z
00D6   2???               M                 goto    end_disp
00D7   2???               M                 call    WR_DATA
00D8   0AA2               M                 incf    Table_Counter,F
00D9   2???               M                 goto    loop_disp
00DA                      M end_disp
00DA   2???           00241         call    Switch_Lines
                      00242       
                      00243  ;--------------------------------------------------
                      00244  ;      STANDBY MODE
                      00245 
00DB                  00246 waiting
                      00247         ; Display date and time. 
                      00248         ; Also save starting time for log (will stop updating once we start)
00DB   3032           00249         movlw   "2"                             ;First line shows 20**/**/**
00DC   2???           00250                 call    WR_DATA
00DD   3030           00251                 movlw   "0"
00DE   2???           00252                 call    WR_DATA
                      00253                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00DF   3006               M         movlw   0x06
00E0   1283 1303          M         banksel 0x73
00E2   00F3               M         movwf   0x73
00E3   2???               M         call    read_rtc
00E4   1283 1303          M         banksel 0x75
00E6   0875               M         movf    0x75,w
00E7   2???               M         call    rtc_convert   
00E8   0877           00254                 movfw   0x77
00E9   00BF           00255         movwf    start_year10    ;Save starting year dig10
00EA   2???           00256                 call    WR_DATA
00EB   0878           00257                 movfw   0x78
00EC   00C0           00258         movwf    start_year1    ;Save starting year dig1
00ED   2???           00259                 call    WR_DATA
00EE   302F           00260                 movlw   "/"
00EF   2???           00261                 call    WR_DATA
                      00262                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00F0   3005               M         movlw   0x05
00F1   1283 1303          M         banksel 0x73
00F3   00F3               M         movwf   0x73
00F4   2???               M         call    read_rtc
00F5   1283 1303          M         banksel 0x75
00F7   0875               M         movf    0x75,w
00F8   2???               M         call    rtc_convert   
00F9   0877           00263                 movfw   0x77
00FA   00C1           00264         movwf    start_month10    ;Save starting month dig10
00FB   2???           00265                 call    WR_DATA
00FC   0878           00266                 movfw   0x78
00FD   00C2           00267         movwf    start_month1    ;Save starting month dig1
00FE   2???           00268                 call    WR_DATA
00FF   302F           00269                 movlw   "/"
0100   2???           00270                 call    WR_DATA
                      00271                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0101   3004               M         movlw   0x04
0102   1283 1303          M         banksel 0x73
0104   00F3               M         movwf   0x73
0105   2???               M         call    read_rtc
0106   1283 1303          M         banksel 0x75
0108   0875               M         movf    0x75,w
0109   2???               M         call    rtc_convert   
010A   0877           00272                 movfw   0x77
010B   00C3           00273         movwf    start_date10    ;Save starting date dig10
010C   2???           00274                 call    WR_DATA
010D   0878           00275                 movfw   0x78
010E   00C4           00276         movwf    start_date1    ;Save starting date dig1
010F   2???           00277                 call    WR_DATA
                      00278                 spacebar
0110   3014               M             movlw   B'00010100'
0111   2???               M             call    WR_INS
                      00279                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0112   3002               M         movlw   0x02
0113   1283 1303          M         banksel 0x73
0115   00F3               M         movwf   0x73
0116   2???               M         call    read_rtc
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0117   1283 1303          M         banksel 0x75
0119   0875               M         movf    0x75,w
011A   2???               M         call    rtc_convert   
011B   0877           00280                 movfw   0x77
011C   00C5           00281         movwf    start_hour10    ;Save starting hour dig10
011D   2???           00282                 call    WR_DATA
011E   0878           00283                 movfw   0x78
011F   00C6           00284         movwf    start_hour1    ;Save starting hour dig1
0120   2???           00285                 call    WR_DATA
0121   303A           00286                 movlw   ":"
0122   2???           00287                 call    WR_DATA
                      00288                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0123   3001               M         movlw   0x01
0124   1283 1303          M         banksel 0x73
0126   00F3               M         movwf   0x73
0127   2???               M         call    read_rtc
0128   1283 1303          M         banksel 0x75
012A   0875               M         movf    0x75,w
012B   2???               M         call    rtc_convert   
012C   0877           00289                 movfw   0x77
012D   00C7           00290         movwf    start_min10    ;Save starting min dig10
012E   2???           00291                 call    WR_DATA
012F   0878           00292                 movfw   0x78
0130   00C8           00293         movwf    start_min1    ;Save starting min dig1
0131   2???           00294                 call    WR_DATA
                      00295                       
                      00296         ; Move cursor back to start of second line
                      00297         ; We will update displayed time but not the word "STANDBY"
0132   30C0           00298         movlw   B'11000000'
0133   2???           00299         call    WR_INS
                      00300 
                      00301         ;Poll to start (will have to hold key for ~0.5sec)
0134   1C86           00302          btfss          PORTB,1     ;Wait until data is available from the keypad
0135   2???           00303          goto           waiting
                      00304 
0136   0E06           00305          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
0137   390F           00306          andlw          0x0F
0138   00A0           00307          movwf      keytemp
0139   3A0C           00308          xorlw      0xC         ;Will be all zeros if its "START"
013A   1903           00309          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
013B   2???           00310          goto       start
                      00311 
013C   0820           00312          movf       keytemp,W     ;Go to log interface
013D   3A0E           00313          xorlw      0xE
013E   1903           00314          btfsc      STATUS,Z
013F   2???           00315          goto       logs
                      00316 
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0140   1886           00317          btfsc          PORTB,1     ;Wait until key is released
0141   2???           00318          goto           $-1
0142   2???           00319          goto       waiting
                      00320 
                      00321 ;-----------------------------------------------------------
                      00322 ;       ACTUAL OPERATION (I'm just adding values manually now)
                      00323 
0143                  00324 start
                      00325         ;Start the timer
                      00326         movlf       D'38', count38
0143   3026               M         movlw   D'38'
0144   00AF               M         movwf   count38
0145   01B2           00327         clrf        op_time
0146   168B           00328         bsf         INTCON, T0IE ;enable Timer0 interrupt
0147   0181           00329         clrf        TMR0
0148   1683 1303      00330         banksel     OPTION_REG
                      00331         movlf       B'11000111', OPTION_REG ; 1:256 prescaler
014A   30C7               M         movlw   B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
014B   0081               M         movwf   OPTION_REG
014C   1283           00332         bcf        STATUS,RP0     ; back to bank 0
                      00333 
                      00334         ;Display starting message
014D   2???           00335         call        Clear_Display
                      00336         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
014E   01A2               M                 clrf    Table_Counter
014F   0103               M                 clrw
0150                      M loop_disp
0150   0822               M         movf    Table_Counter,W
0151   2???               M                 call    Start_Msg
0152   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0153   1903               M                 btfsc   STATUS,Z
0154   2???               M                 goto    end_disp
0155   2???               M                 call    WR_DATA
0156   0AA2               M                 incf    Table_Counter,F
0157   2???               M                 goto    loop_disp
0158                      M end_disp
                      00337 
                      00338         ; just delaying for now 
0158   2???           00339         call        HalfS
0159   2???           00340         call        HalfS
015A   2???           00341         call        HalfS
015B   2???           00342         call        HalfS
                      00343         
                      00344         ; Putting values in manually. This will be done automatically in main program
                      00345         movlf     B'01', state1     ;pass
015C   3001               M         movlw   B'01'
015D   00B3               M         movwf   state1
                      00346         movlf     B'01', state2     ;pass
015E   3001               M         movlw   B'01'
015F   00B4               M         movwf   state2
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00347         movlf     B'11', state3     ;flicker fail
0160   3003               M         movlw   B'11'
0161   00B5               M         movwf   state3
                      00348         movlf     B'11', state4     ;flicker fail
0162   3003               M         movlw   B'11'
0163   00B6               M         movwf   state4
                      00349         movlf     B'01', state5     ;pass
0164   3001               M         movlw   B'01'
0165   00B7               M         movwf   state5
                      00350         movlf     B'00', state6     ;not present
0166   3000               M         movlw   B'00'
0167   00B8               M         movwf   state6
                      00351         movlf     B'01', state7     ;pass
0168   3001               M         movlw   B'01'
0169   00B9               M         movwf   state7
                      00352         movlf     B'11', state8     ;flicker fail
016A   3003               M         movlw   B'11'
016B   00BA               M         movwf   state8
                      00353         movlf     B'01', state9     ;pass
016C   3001               M         movlw   B'01'
016D   00BB               M         movwf   state9
                      00354         movlf     D'0', num_LF
016E   3000               M         movlw   D'0'
016F   00BC               M         movwf   num_LF
                      00355         movlf     D'3', num_FF
0170   3003               M         movlw   D'3'
0171   00BD               M         movwf   num_FF
                      00356         movlf     D'8', num_tot
0172   3008               M         movlw   D'8'
0173   00BE               M         movwf   num_tot
                      00357 
                      00358         ; Stop the timer
0174   128B           00359          bcf         INTCON, T0IE  ;disable Timer0 interrupt
                      00360 
                      00361         ; Display ending messages
0175   2???           00362         call       Clear_Display
                      00363         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0176   01A2               M                 clrf    Table_Counter
0177   0103               M                 clrw
0178                      M loop_disp
0178   0822               M         movf    Table_Counter,W
0179   2???               M                 call    End_Msg
017A   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
017B   1903               M                 btfsc   STATUS,Z
017C   2???               M                 goto    end_disp
017D   2???               M                 call    WR_DATA
017E   0AA2               M                 incf    Table_Counter,F
017F   2???               M                 goto    loop_disp
0180                      M end_disp
0180   2???           00364         call       HalfS
0181   2???           00365         call       time             ; "Operation time: X sec"
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0182   2???           00366         call       HalfS
0183   2???           00367         call       HalfS
0184   2???           00368         call       summary          ; "Total candles: X. Defective: Y"
0185   2???           00369         call       HalfS
0186   2???           00370         call       HalfS
0187   2???           00371         call       defective        ; "FF: a b c. LF: d e f"
                      00372 ;-----------------------------------------------------------------------
                      00373 ; Data display interface
                      00374 
0188   1C86           00375 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
0189   2???           00376          goto           $-1
                      00377 
018A   0E06           00378          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
018B   390F           00379          andlw          0x0F
018C   2???           00380          call       information ;Do the right thing
                      00381 
018D   1886           00382          btfsc          PORTB,1     ;Wait until key is released
018E   2???           00383          goto           $-1
018F   2???           00384          goto       poll
                      00385 
                      00386 
                      00387 ;-------------------------------------------------------------------------
                      00388 ; LOGS INTERFACE            (DONT ACTUALLY HAVE LOGS YET!)
                      00389 ; Eventually this will show logs
                      00390 ; Right now it just displays random crap
                      00391 ; Access from STANDBY and return to STANDBY
                      00392 
0190                  00393 logs
0190   2???           00394     call    Clear_Display
                      00395     Display Logs_Msg1
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0191   01A2               M                 clrf    Table_Counter
0192   0103               M                 clrw
0193                      M loop_disp
0193   0822               M         movf    Table_Counter,W
0194   2???               M                 call    Logs_Msg1
0195   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0196   1903               M                 btfsc   STATUS,Z
0197   2???               M                 goto    end_disp
0198   2???               M                 call    WR_DATA
0199   0AA2               M                 incf    Table_Counter,F
019A   2???               M                 goto    loop_disp
019B                      M end_disp
019B   2???           00396     call    Switch_Lines
                      00397     Display Logs_Msg2
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
019C   01A2               M                 clrf    Table_Counter
019D   0103               M                 clrw
019E                      M loop_disp
019E   0822               M         movf    Table_Counter,W
019F   2???               M                 call    Logs_Msg2
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01A1   1903               M                 btfsc   STATUS,Z
01A2   2???               M                 goto    end_disp
01A3   2???               M                 call    WR_DATA
01A4   0AA2               M                 incf    Table_Counter,F
01A5   2???               M                 goto    loop_disp
01A6                      M end_disp
                      00398 
01A6                  00399 polling
01A6   1C86           00400     btfss               PORTB,1     ;Wait until data is available from the keypad
01A7   2???           00401     goto                $-1
                      00402 
01A8   0E06           00403     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
01A9   390F           00404     andlw               0x0F
01AA   00A0           00405     movwf       keytemp     ; Save which key was pressed
                      00406 
01AB                  00407 check_log1
01AB   3A00           00408     xorlw   0x0         ;will be all zeros if its 1
01AC   1D03           00409     btfss   STATUS,Z    ;and Z will be high, so skip
01AD   2???           00410     goto    check_log2
01AE   2???           00411     call    Clear_Display
                      00412     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01AF   01A2               M                 clrf    Table_Counter
01B0   0103               M                 clrw
01B1                      M loop_disp
01B1   0822               M         movf    Table_Counter,W
01B2   2???               M                 call    None
01B3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01B4   1903               M                 btfsc   STATUS,Z
01B5   2???               M                 goto    end_disp
01B6   2???               M                 call    WR_DATA
01B7   0AA2               M                 incf    Table_Counter,F
01B8   2???               M                 goto    loop_disp
01B9                      M end_disp
01B9   2???           00413     call    HalfS
01BA   2???           00414     goto    logs
                      00415 
01BB                  00416 check_log2
01BB   0820           00417     movf    keytemp, W
01BC   3A01           00418     xorlw   0x1
01BD   1D03           00419     btfss   STATUS,Z
01BE   2???           00420     goto    check_log3
01BF   2???           00421     call    Clear_Display
                      00422     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01C0   01A2               M                 clrf    Table_Counter
01C1   0103               M                 clrw
01C2                      M loop_disp
01C2   0822               M         movf    Table_Counter,W
01C3   2???               M                 call    None
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01C4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C5   1903               M                 btfsc   STATUS,Z
01C6   2???               M                 goto    end_disp
01C7   2???               M                 call    WR_DATA
01C8   0AA2               M                 incf    Table_Counter,F
01C9   2???               M                 goto    loop_disp
01CA                      M end_disp
01CA   2???           00423     call    HalfS
01CB   2???           00424     goto    logs
                      00425 
01CC                  00426 check_log3
01CC   0820           00427     movf    keytemp, W
01CD   3A02           00428     xorlw   0x2
01CE   1D03           00429     btfss   STATUS,Z
01CF   2???           00430     goto    check_log4
01D0   2???           00431     call    Clear_Display
                      00432     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01D1   01A2               M                 clrf    Table_Counter
01D2   0103               M                 clrw
01D3                      M loop_disp
01D3   0822               M         movf    Table_Counter,W
01D4   2???               M                 call    None
01D5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D6   1903               M                 btfsc   STATUS,Z
01D7   2???               M                 goto    end_disp
01D8   2???               M                 call    WR_DATA
01D9   0AA2               M                 incf    Table_Counter,F
01DA   2???               M                 goto    loop_disp
01DB                      M end_disp
01DB   2???           00433     call    HalfS
01DC   2???           00434     goto    logs
                      00435 
01DD                  00436 check_log4
01DD   0820           00437     movf    keytemp, W
01DE   3A04           00438     xorlw   0x4
01DF   1D03           00439     btfss   STATUS,Z
01E0   2???           00440     goto    check_done
01E1   2???           00441     call    Clear_Display
                      00442     Display None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01E2   01A2               M                 clrf    Table_Counter
01E3   0103               M                 clrw
01E4                      M loop_disp
01E4   0822               M         movf    Table_Counter,W
01E5   2???               M                 call    None
01E6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01E7   1903               M                 btfsc   STATUS,Z
01E8   2???               M                 goto    end_disp
01E9   2???               M                 call    WR_DATA
01EA   0AA2               M                 incf    Table_Counter,F
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01EB   2???               M                 goto    loop_disp
01EC                      M end_disp
01EC   2???           00443     call    HalfS
01ED   2???           00444     goto    logs
                      00445 
01EE                  00446 check_done
01EE   0820           00447     movf    keytemp, W
01EF   3A0D           00448     xorlw   0xD
01F0   1D03           00449     btfss   STATUS,Z
01F1   2???           00450     goto    badkey
01F2   2???           00451     call    Clear_Display
                      00452     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
01F3   01A2               M                 clrf    Table_Counter
01F4   0103               M                 clrw
01F5                      M loop_disp
01F5   0822               M         movf    Table_Counter,W
01F6   2???               M                 call    Standby_Msg
01F7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01F8   1903               M                 btfsc   STATUS,Z
01F9   2???               M                 goto    end_disp
01FA   2???               M                 call    WR_DATA
01FB   0AA2               M                 incf    Table_Counter,F
01FC   2???               M                 goto    loop_disp
01FD                      M end_disp
01FD   2???           00453     call    Switch_Lines
01FE   2???           00454     goto    waiting
                      00455 
01FF                  00456 badkey
01FF   1886           00457     btfsc               PORTB,1     ;Wait until key is released
0200   2???           00458     goto                $-1
0201   2???           00459     goto        polling
                      00460   
                      00461 ; END OF MAIN PROGRAM
                      00462 ;------------------------------------------------------------
                      00463 
                      00464 
                      00465 ;***************************************
                      00466 ; DATA DISPLAY ROUTINE
                      00467 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00468 ; Determines which key it was and displays appropriate info / branch
                      00469 ;***************************************
                      00470 
0202                  00471 information
0202   00A0           00472     movwf   keytemp             ; Save which key was pressed
                      00473 
0203                  00474 check_1
0203   3A00           00475     xorlw   0x0         ;will be all zeros if its 1
0204   1D03           00476     btfss   STATUS,Z    ;and Z will be high, so skip
0205   2???           00477     goto    check_2
0206   2???           00478     call    Clear_Display
                      00479     writenum 0x1
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0207   3001               M             movlw    0x1
0208   3E30               M             addlw   B'00110000'
0209   00A4               M             movwf   dat
020A   2???               M             call WR_DATA
020B   0833           00480     movf    state1, W
020C   2???           00481     call    display_state
020D   0008           00482     return
                      00483 
020E                  00484 check_2
020E   0820           00485     movf    keytemp, W
020F   3A01           00486     xorlw   0x1
0210   1D03           00487     btfss   STATUS,Z
0211   2???           00488     goto    check_3
0212   2???           00489     call    Clear_Display
                      00490     writenum 0x2
0213   3002               M             movlw    0x2
0214   3E30               M             addlw   B'00110000'
0215   00A4               M             movwf   dat
0216   2???               M             call WR_DATA
0217   0834           00491     movf    state2, W
0218   2???           00492     call    display_state
0219   0008           00493     return
                      00494 
021A                  00495 check_3
021A   0820           00496     movf    keytemp, W
021B   3A02           00497     xorlw   0x2
021C   1D03           00498     btfss   STATUS,Z
021D   2???           00499     goto    check_4
021E   2???           00500     call    Clear_Display
                      00501     writenum 0x3
021F   3003               M             movlw    0x3
0220   3E30               M             addlw   B'00110000'
0221   00A4               M             movwf   dat
0222   2???               M             call WR_DATA
0223   0835           00502     movf    state3, W
0224   2???           00503     call    display_state
0225   0008           00504     return
                      00505 
0226                  00506 check_4
0226   0820           00507     movf    keytemp, W
0227   3A04           00508     xorlw   0x4
0228   1D03           00509     btfss   STATUS,Z
0229   2???           00510     goto    check_5
022A   2???           00511     call    Clear_Display
                      00512     writenum 0x4
022B   3004               M             movlw    0x4
022C   3E30               M             addlw   B'00110000'
022D   00A4               M             movwf   dat
022E   2???               M             call WR_DATA
022F   0836           00513     movf    state4, W
0230   2???           00514     call    display_state
0231   0008           00515     return
                      00516 
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0232                  00517 check_5
0232   0820           00518     movf    keytemp, W
0233   3A05           00519     xorlw   0x5
0234   1D03           00520     btfss   STATUS,Z
0235   2???           00521     goto    check_6
0236   2???           00522     call    Clear_Display
                      00523     writenum 0x5
0237   3005               M             movlw    0x5
0238   3E30               M             addlw   B'00110000'
0239   00A4               M             movwf   dat
023A   2???               M             call WR_DATA
023B   0837           00524     movf    state5, W
023C   2???           00525     call    display_state
023D   0008           00526     return
                      00527 
023E                  00528 check_6
023E   0820           00529     movf    keytemp, W
023F   3A06           00530     xorlw   0x6
0240   1D03           00531     btfss   STATUS,Z
0241   2???           00532     goto    check_7
0242   2???           00533     call    Clear_Display
                      00534     writenum 0x6
0243   3006               M             movlw    0x6
0244   3E30               M             addlw   B'00110000'
0245   00A4               M             movwf   dat
0246   2???               M             call WR_DATA
0247   0838           00535     movf    state6, W
0248   2???           00536     call    display_state
0249   0008           00537     return
                      00538 
024A                  00539 check_7
024A   0820           00540     movf    keytemp, W
024B   3A08           00541     xorlw   0x8
024C   1D03           00542     btfss   STATUS,Z
024D   2???           00543     goto    check_8
024E   2???           00544     call    Clear_Display
                      00545     writenum 0x7
024F   3007               M             movlw    0x7
0250   3E30               M             addlw   B'00110000'
0251   00A4               M             movwf   dat
0252   2???               M             call WR_DATA
0253   0839           00546     movf    state7, W
0254   2???           00547     call    display_state
0255   0008           00548     return
                      00549 
0256                  00550 check_8
0256   0820           00551     movf    keytemp, W
0257   3A09           00552     xorlw   0x9
0258   1D03           00553     btfss   STATUS,Z
0259   2???           00554     goto    check_9
025A   2???           00555     call    Clear_Display
                      00556     writenum 0x8
025B   3008               M             movlw    0x8
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

025C   3E30               M             addlw   B'00110000'
025D   00A4               M             movwf   dat
025E   2???               M             call WR_DATA
025F   083A           00557     movf    state8, W
0260   2???           00558     call    display_state
0261   0008           00559     return
                      00560 
0262                  00561 check_9
0262   0820           00562     movf    keytemp, W
0263   3A0A           00563     xorlw   0xA
0264   1D03           00564     btfss   STATUS,Z
0265   2???           00565     goto    check_summary
0266   2???           00566     call    Clear_Display
                      00567     writenum 0x9
0267   3009               M             movlw    0x9
0268   3E30               M             addlw   B'00110000'
0269   00A4               M             movwf   dat
026A   2???               M             call WR_DATA
026B   083B           00568     movf    state9, W
026C   2???           00569     call    display_state
026D   0008           00570     return
                      00571 
026E                  00572 check_summary
026E   0820           00573     movf    keytemp, W
026F   3A03           00574     xorlw   0x3
0270   1D03           00575     btfss   STATUS,Z
0271   2???           00576     goto    check_defective
0272   2???           00577     call    summary
0273   0008           00578     return
                      00579 
0274                  00580 check_defective
0274   0820           00581     movf    keytemp, W
0275   3A07           00582     xorlw   0x7
0276   1D03           00583     btfss   STATUS,Z
0277   2???           00584     goto    check_time
0278   2???           00585     call    defective
0279   0008           00586     return
                      00587 
027A                  00588 check_time
027A   0820           00589     movf    keytemp, W
027B   3A0B           00590     xorlw   0xB
027C   1D03           00591     btfss   STATUS,Z
027D   2???           00592     goto    check_export
027E   2???           00593     call    time
027F   0008           00594     return
                      00595 
0280                  00596 check_export                ;doesn't actually export yet
0280   0820           00597     movf    keytemp, W
0281   3A0F           00598     xorlw   0xF
0282   1D03           00599     btfss   STATUS,Z
0283   2???           00600     goto    check_standby
0284   2???           00601     call    export
0285   0008           00602     return
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00603 
0286                  00604 check_standby
0286   0820           00605     movf    keytemp, W
0287   3A0D           00606     xorlw   0xD
0288   1D03           00607     btfss   STATUS,Z
0289   2???           00608     goto    check_start
028A   2???           00609     call    Clear_Display
                      00610     Display Standby_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
028B   01A2               M                 clrf    Table_Counter
028C   0103               M                 clrw
028D                      M loop_disp
028D   0822               M         movf    Table_Counter,W
028E   2???               M                 call    Standby_Msg
028F   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0290   1903               M                 btfsc   STATUS,Z
0291   2???               M                 goto    end_disp
0292   2???               M                 call    WR_DATA
0293   0AA2               M                 incf    Table_Counter,F
0294   2???               M                 goto    loop_disp
0295                      M end_disp
0295   2???           00611     call    Switch_Lines
0296   2???           00612     goto    waiting
                      00613 
0297                  00614 check_start
0297   0820           00615     movf    keytemp, W
0298   3A0C           00616     xorlw   0xC
0299   1D03           00617     btfss   STATUS,Z
029A   2???           00618     goto    default_key
029B   2???           00619     goto    start
                      00620 
029C                  00621 default_key         ; will never get here
029C   0008           00622     return
                      00623 
                      00624 
                      00625 ;Display state subroutine
                      00626 ;stateN is in W
029D                  00627 display_state
029D   00A1           00628     movwf  statetemp    ; save stateN
                      00629 
029E                  00630 check_none
029E   3A00           00631     xorlw   0x0
029F   1D03           00632     btfss   STATUS,Z
02A0   2???           00633     goto    check_pass
                      00634     Display Not_present
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02A1   01A2               M                 clrf    Table_Counter
02A2   0103               M                 clrw
02A3                      M loop_disp
02A3   0822               M         movf    Table_Counter,W
02A4   2???               M                 call    Not_present
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A5   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A6   1903               M                 btfsc   STATUS,Z
02A7   2???               M                 goto    end_disp
02A8   2???               M                 call    WR_DATA
02A9   0AA2               M                 incf    Table_Counter,F
02AA   2???               M                 goto    loop_disp
02AB                      M end_disp
02AB   0008           00635     return
                      00636 
02AC                  00637 check_pass
02AC   0821           00638     movf    statetemp, W
02AD   3A01           00639     xorlw   0x1
02AE   1D03           00640     btfss   STATUS,Z
02AF   2???           00641     goto    check_LED
                      00642     Display Pass
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02B0   01A2               M                 clrf    Table_Counter
02B1   0103               M                 clrw
02B2                      M loop_disp
02B2   0822               M         movf    Table_Counter,W
02B3   2???               M                 call    Pass
02B4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02B5   1903               M                 btfsc   STATUS,Z
02B6   2???               M                 goto    end_disp
02B7   2???               M                 call    WR_DATA
02B8   0AA2               M                 incf    Table_Counter,F
02B9   2???               M                 goto    loop_disp
02BA                      M end_disp
02BA   0008           00643     return
                      00644 
02BB                  00645 check_LED
02BB   0821           00646     movf    statetemp, W
02BC   3A02           00647     xorlw   0x2
02BD   1D03           00648     btfss   STATUS,Z
02BE   2???           00649     goto    check_flick
                      00650     Display LED_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02BF   01A2               M                 clrf    Table_Counter
02C0   0103               M                 clrw
02C1                      M loop_disp
02C1   0822               M         movf    Table_Counter,W
02C2   2???               M                 call    LED_fail
02C3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02C4   1903               M                 btfsc   STATUS,Z
02C5   2???               M                 goto    end_disp
02C6   2???               M                 call    WR_DATA
02C7   0AA2               M                 incf    Table_Counter,F
02C8   2???               M                 goto    loop_disp
02C9                      M end_disp
02C9   0008           00651     return
                      00652 
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02CA                  00653 check_flick
02CA   0821           00654     movf    statetemp, W
02CB   3A03           00655     xorlw   0x3
02CC   1D03           00656     btfss   STATUS,Z
02CD   2???           00657     goto    default_state
                      00658     Display Flick_fail
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02CE   01A2               M                 clrf    Table_Counter
02CF   0103               M                 clrw
02D0                      M loop_disp
02D0   0822               M         movf    Table_Counter,W
02D1   2???               M                 call    Flick_fail
02D2   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D3   1903               M                 btfsc   STATUS,Z
02D4   2???               M                 goto    end_disp
02D5   2???               M                 call    WR_DATA
02D6   0AA2               M                 incf    Table_Counter,F
02D7   2???               M                 goto    loop_disp
02D8                      M end_disp
02D8   0008           00659     return
                      00660 
02D9                  00661 default_state   ; should never get here
02D9   0008           00662     return
                      00663 
                      00664 ; Summary Subroutine
                      00665 ; Displays total number of candles and number of defective candles
                      00666 ; Reads data from num_tot, num_LF, num_FF
02DA                  00667 summary
02DA   2???           00668     call            Clear_Display
                      00669     Display         Total_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02DB   01A2               M                 clrf    Table_Counter
02DC   0103               M                 clrw
02DD                      M loop_disp
02DD   0822               M         movf    Table_Counter,W
02DE   2???               M                 call    Total_Msg
02DF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E0   1903               M                 btfsc   STATUS,Z
02E1   2???               M                 goto    end_disp
02E2   2???               M                 call    WR_DATA
02E3   0AA2               M                 incf    Table_Counter,F
02E4   2???               M                 goto    loop_disp
02E5                      M end_disp
                      00670     writenum_reg    num_tot
02E5   083E               M             movfw    num_tot
02E6   3E30               M             addlw   B'00110000'
02E7   00A4               M             movwf   dat
02E8   2???               M             call WR_DATA
02E9   2???           00671     call            Switch_Lines
                      00672     Display         LF
  0000                    M                 local   loop_disp
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_disp
02EA   01A2               M                 clrf    Table_Counter
02EB   0103               M                 clrw
02EC                      M loop_disp
02EC   0822               M         movf    Table_Counter,W
02ED   2???               M                 call    LF
02EE   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02EF   1903               M                 btfsc   STATUS,Z
02F0   2???               M                 goto    end_disp
02F1   2???               M                 call    WR_DATA
02F2   0AA2               M                 incf    Table_Counter,F
02F3   2???               M                 goto    loop_disp
02F4                      M end_disp
                      00673     writenum_reg    num_LF
02F4   083C               M             movfw    num_LF
02F5   3E30               M             addlw   B'00110000'
02F6   00A4               M             movwf   dat
02F7   2???               M             call WR_DATA
                      00674     spacebar
02F8   3014               M             movlw   B'00010100'
02F9   2???               M             call    WR_INS
                      00675     spacebar
02FA   3014               M             movlw   B'00010100'
02FB   2???               M             call    WR_INS
                      00676     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
02FC   01A2               M                 clrf    Table_Counter
02FD   0103               M                 clrw
02FE                      M loop_disp
02FE   0822               M         movf    Table_Counter,W
02FF   2???               M                 call    FF
0300   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0301   1903               M                 btfsc   STATUS,Z
0302   2???               M                 goto    end_disp
0303   2???               M                 call    WR_DATA
0304   0AA2               M                 incf    Table_Counter,F
0305   2???               M                 goto    loop_disp
0306                      M end_disp
                      00677     writenum_reg    num_FF
0306   083D               M             movfw    num_FF
0307   3E30               M             addlw   B'00110000'
0308   00A4               M             movwf   dat
0309   2???               M             call WR_DATA
030A   0008           00678     return
                      00679 
                      00680 ; Defective candles Subroutine
                      00681 ; Displays index of each defective candle (LF or FF)
                      00682 ; Reads data from state1 - state9
030B                  00683 defective
030B   2???           00684     call            Clear_Display
                      00685 
                      00686     Display         LF              ; first look at LF
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
030C   01A2               M                 clrf    Table_Counter
030D   0103               M                 clrw
030E                      M loop_disp
030E   0822               M         movf    Table_Counter,W
030F   2???               M                 call    LF
0310   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0311   1903               M                 btfsc   STATUS,Z
0312   2???               M                 goto    end_disp
0313   2???               M                 call    WR_DATA
0314   0AA2               M                 incf    Table_Counter,F
0315   2???               M                 goto    loop_disp
0316                      M end_disp
0316   08BC           00687     movf            num_LF, F
0317   1D03           00688     btfss           STATUS,Z         ;if none LF, just say "none"
0318   2???           00689     goto            check_LF
                      00690     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0319   01A2               M                 clrf    Table_Counter
031A   0103               M                 clrw
031B                      M loop_disp
031B   0822               M         movf    Table_Counter,W
031C   2???               M                 call    None
031D   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
031E   1903               M                 btfsc   STATUS,Z
031F   2???               M                 goto    end_disp
0320   2???               M                 call    WR_DATA
0321   0AA2               M                 incf    Table_Counter,F
0322   2???               M                 goto    loop_disp
0323                      M end_disp
0323   2???           00691     goto            now_FF
                      00692 
0324                  00693 check_LF                            ; list all LF candles
0324   3002           00694     movlw           B'00000010'
0325   2???           00695     call            check_for_fail
                      00696 
0326                  00697 now_FF                              ; now look at FF
0326   2???           00698     call            Switch_Lines
                      00699     Display         FF
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0327   01A2               M                 clrf    Table_Counter
0328   0103               M                 clrw
0329                      M loop_disp
0329   0822               M         movf    Table_Counter,W
032A   2???               M                 call    FF
032B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
032C   1903               M                 btfsc   STATUS,Z
032D   2???               M                 goto    end_disp
032E   2???               M                 call    WR_DATA
032F   0AA2               M                 incf    Table_Counter,F
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0330   2???               M                 goto    loop_disp
0331                      M end_disp
0331   08BD           00700     movf            num_FF, F
0332   1D03           00701     btfss           STATUS,Z         ;if none FF, just say "none"
0333   2???           00702     goto            check_FF
                      00703     Display         None
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
0334   01A2               M                 clrf    Table_Counter
0335   0103               M                 clrw
0336                      M loop_disp
0336   0822               M         movf    Table_Counter,W
0337   2???               M                 call    None
0338   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0339   1903               M                 btfsc   STATUS,Z
033A   2???               M                 goto    end_disp
033B   2???               M                 call    WR_DATA
033C   0AA2               M                 incf    Table_Counter,F
033D   2???               M                 goto    loop_disp
033E                      M end_disp
033E   0008           00704     return
                      00705 
033F                  00706 check_FF                            ; list all FF candles
033F   3003           00707     movlw           B'00000011'
0340   2???           00708     call            check_for_fail
0341   0008           00709     return
                      00710 
0342                  00711 check_for_fail  ;lists all candles that have status currently in W
0342   00A1           00712     movwf           statetemp
0343                  00713 one
0343   0233           00714     subwf           state1, W          ;defective state1 = W
0344   1D03           00715     btfss           STATUS,Z
0345   2???           00716     goto            two
                      00717     writenum        0x1
0346   3001               M             movlw    0x1
0347   3E30               M             addlw   B'00110000'
0348   00A4               M             movwf   dat
0349   2???               M             call WR_DATA
                      00718     spacebar
034A   3014               M             movlw   B'00010100'
034B   2???               M             call    WR_INS
034C                  00719 two
034C   0821           00720     movf            statetemp, W
034D   0234           00721     subwf           state2, W          ;defective state1 = W
034E   1D03           00722     btfss           STATUS,Z
034F   2???           00723     goto            three
                      00724     writenum        0x2
0350   3002               M             movlw    0x2
0351   3E30               M             addlw   B'00110000'
0352   00A4               M             movwf   dat
0353   2???               M             call WR_DATA
                      00725     spacebar
0354   3014               M             movlw   B'00010100'
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0355   2???               M             call    WR_INS
0356                  00726 three
0356   0821           00727     movf            statetemp, W
0357   0235           00728     subwf           state3, W          ;defective state1 = W
0358   1D03           00729     btfss           STATUS,Z
0359   2???           00730     goto            four
                      00731     writenum        0x3
035A   3003               M             movlw    0x3
035B   3E30               M             addlw   B'00110000'
035C   00A4               M             movwf   dat
035D   2???               M             call WR_DATA
                      00732     spacebar
035E   3014               M             movlw   B'00010100'
035F   2???               M             call    WR_INS
0360                  00733 four
0360   0821           00734     movf            statetemp, W
0361   0236           00735     subwf           state4, W          ;defective state1 = W
0362   1D03           00736     btfss           STATUS,Z
0363   2???           00737     goto            five
                      00738     writenum        0x4
0364   3004               M             movlw    0x4
0365   3E30               M             addlw   B'00110000'
0366   00A4               M             movwf   dat
0367   2???               M             call WR_DATA
                      00739     spacebar
0368   3014               M             movlw   B'00010100'
0369   2???               M             call    WR_INS
036A                  00740 five
036A   0821           00741     movf            statetemp, W
036B   0237           00742     subwf           state5, W          ;defective state1 = W
036C   1D03           00743     btfss           STATUS,Z
036D   2???           00744     goto            six
                      00745     writenum        0x5
036E   3005               M             movlw    0x5
036F   3E30               M             addlw   B'00110000'
0370   00A4               M             movwf   dat
0371   2???               M             call WR_DATA
                      00746     spacebar
0372   3014               M             movlw   B'00010100'
0373   2???               M             call    WR_INS
0374                  00747 six
0374   0821           00748     movf            statetemp, W
0375   0238           00749     subwf           state6, W          ;defective state1 = W
0376   1D03           00750     btfss           STATUS,Z
0377   2???           00751     goto            seven
                      00752     writenum        0x6
0378   3006               M             movlw    0x6
0379   3E30               M             addlw   B'00110000'
037A   00A4               M             movwf   dat
037B   2???               M             call WR_DATA
                      00753     spacebar
037C   3014               M             movlw   B'00010100'
037D   2???               M             call    WR_INS
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

037E                  00754 seven
037E   0821           00755     movf            statetemp, W
037F   0239           00756     subwf           state7, W          ;defective state1 = W
0380   1D03           00757     btfss           STATUS,Z
0381   2???           00758     goto            eight
                      00759     writenum        0x7
0382   3007               M             movlw    0x7
0383   3E30               M             addlw   B'00110000'
0384   00A4               M             movwf   dat
0385   2???               M             call WR_DATA
                      00760     spacebar
0386   3014               M             movlw   B'00010100'
0387   2???               M             call    WR_INS
0388                  00761 eight
0388   0821           00762     movf            statetemp, W
0389   023A           00763     subwf           state8, W          ;defective state1 = W
038A   1D03           00764     btfss           STATUS,Z
038B   2???           00765     goto            nine
                      00766     writenum        0x8
038C   3008               M             movlw    0x8
038D   3E30               M             addlw   B'00110000'
038E   00A4               M             movwf   dat
038F   2???               M             call WR_DATA
                      00767     spacebar
0390   3014               M             movlw   B'00010100'
0391   2???               M             call    WR_INS
0392                  00768 nine
0392   0821           00769     movf            statetemp, W
0393   023B           00770     subwf           state9, W          ;defective state1 = W
0394   1D03           00771     btfss           STATUS,Z
0395   2???           00772     goto            end_check_fail
                      00773     writenum        0x9
0396   3009               M             movlw    0x9
0397   3E30               M             addlw   B'00110000'
0398   00A4               M             movwf   dat
0399   2???               M             call WR_DATA
039A                  00774 end_check_fail
039A   0008           00775     return
                      00776 
                      00777 ; Time subroutine
                      00778 ; Right now this takes the time in seconds as a binary number in op_time
                      00779 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00780 ; incremented every second. However I may just take the stop time - start time
                      00781 ; from the RTC data so this might change a lot.
039B                  00782 time
039B   2???           00783     call    Clear_Display
                      00784     Display Time_Msg
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
039C   01A2               M                 clrf    Table_Counter
039D   0103               M                 clrw
039E                      M loop_disp
039E   0822               M         movf    Table_Counter,W
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

039F   2???               M                 call    Time_Msg
03A0   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03A1   1903               M                 btfsc   STATUS,Z
03A2   2???               M                 goto    end_disp
03A3   2???               M                 call    WR_DATA
03A4   0AA2               M                 incf    Table_Counter,F
03A5   2???               M                 goto    loop_disp
03A6                      M end_disp
03A6   2???           00785     call    Switch_Lines
03A7   0832           00786     movf    op_time, W
03A8   2???           00787     call    big_number
03A9   08AB           00788     movf    huns, F
03AA   1903           00789     btfsc   STATUS,Z        ;if huns is zero don't display it
03AB   2???           00790     goto    no_huns
                      00791     writenum_reg    huns
03AC   082B               M             movfw    huns
03AD   3E30               M             addlw   B'00110000'
03AE   00A4               M             movwf   dat
03AF   2???               M             call WR_DATA
03B0                  00792 no_huns
03B0   08AC           00793     movf    tens, F
03B1   1903           00794     btfsc   STATUS,Z        ;if tens is zero don't display it
03B2   2???           00795     goto    no_tens
                      00796     writenum_reg    tens
03B3   082C               M             movfw    tens
03B4   3E30               M             addlw   B'00110000'
03B5   00A4               M             movwf   dat
03B6   2???               M             call WR_DATA
03B7                  00797 no_tens
                      00798     writenum_reg    ones
03B7   082D               M             movfw    ones
03B8   3E30               M             addlw   B'00110000'
03B9   00A4               M             movwf   dat
03BA   2???               M             call WR_DATA
                      00799     Display Seconds
  0000                    M                 local   loop_disp
  0000                    M                 local   end_disp
03BB   01A2               M                 clrf    Table_Counter
03BC   0103               M                 clrw
03BD                      M loop_disp
03BD   0822               M         movf    Table_Counter,W
03BE   2???               M                 call    Seconds
03BF   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03C0   1903               M                 btfsc   STATUS,Z
03C1   2???               M                 goto    end_disp
03C2   2???               M                 call    WR_DATA
03C3   0AA2               M                 incf    Table_Counter,F
03C4   2???               M                 goto    loop_disp
03C5                      M end_disp
03C5   0008           00800     return
                      00801 
                      00802 ; Export subroutine         
                      00803 ; Exports data from current run to hyperterminal
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00804 ; reads start time and num_tot/num_ff/num_lf data
03C6                  00805 export
                      00806     printchar 0x7       ;makes a noise on the PC
03C6   3007               M             movlw   0x7
03C7   2???               M             call    writetoPC
                      00807     printchar   "T"
03C8   3054               M             movlw   "T"
03C9   2???               M             call    writetoPC
                      00808     printchar   "e"
03CA   3065               M             movlw   "e"
03CB   2???               M             call    writetoPC
                      00809     printchar   "s"
03CC   3073               M             movlw   "s"
03CD   2???               M             call    writetoPC
                      00810     printchar   "t"
03CE   3074               M             movlw   "t"
03CF   2???               M             call    writetoPC
                      00811     printchar   " "
03D0   3020               M             movlw   " "
03D1   2???               M             call    writetoPC
                      00812     printchar   "a"
03D2   3061               M             movlw   "a"
03D3   2???               M             call    writetoPC
                      00813     printchar   "t"
03D4   3074               M             movlw   "t"
03D5   2???               M             call    writetoPC
                      00814     printchar   ":"
03D6   303A               M             movlw   ":"
03D7   2???               M             call    writetoPC
                      00815     printchar   " "
03D8   3020               M             movlw   " "
03D9   2???               M             call    writetoPC
                      00816     printchar   "2"
03DA   3032               M             movlw   "2"
03DB   2???               M             call    writetoPC
                      00817     printchar   "0"
03DC   3030               M             movlw   "0"
03DD   2???               M             call    writetoPC
                      00818     printASC   start_year10
03DE   1283 1303          M             banksel start_year10
03E0   083F               M             movfw   start_year10
03E1   2???               M             call    writetoPC
                      00819     printASC   start_year1
03E2   1283 1303          M             banksel start_year1
03E4   0840               M             movfw   start_year1
03E5   2???               M             call    writetoPC
                      00820     printchar   "/"
03E6   302F               M             movlw   "/"
03E7   2???               M             call    writetoPC
                      00821     printASC   start_month10
03E8   1283 1303          M             banksel start_month10
03EA   0841               M             movfw   start_month10
03EB   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00822     printASC   start_month1
03EC   1283 1303          M             banksel start_month1
03EE   0842               M             movfw   start_month1
03EF   2???               M             call    writetoPC
                      00823     printchar   "/"
03F0   302F               M             movlw   "/"
03F1   2???               M             call    writetoPC
                      00824     printASC   start_date10
03F2   1283 1303          M             banksel start_date10
03F4   0843               M             movfw   start_date10
03F5   2???               M             call    writetoPC
                      00825     printASC   start_date1
03F6   1283 1303          M             banksel start_date1
03F8   0844               M             movfw   start_date1
03F9   2???               M             call    writetoPC
                      00826     printchar   " "
03FA   3020               M             movlw   " "
03FB   2???               M             call    writetoPC
                      00827     printASC   start_hour10
03FC   1283 1303          M             banksel start_hour10
03FE   0845               M             movfw   start_hour10
03FF   2???               M             call    writetoPC
                      00828     printASC   start_hour1
0400   1283 1303          M             banksel start_hour1
0402   0846               M             movfw   start_hour1
0403   2???               M             call    writetoPC
                      00829     printchar   ":"
0404   303A               M             movlw   ":"
0405   2???               M             call    writetoPC
                      00830     printASC   start_min10
0406   1283 1303          M             banksel start_min10
0408   0847               M             movfw   start_min10
0409   2???               M             call    writetoPC
                      00831     printASC   start_min1
040A   1283 1303          M             banksel start_min1
040C   0848               M             movfw   start_min1
040D   2???               M             call    writetoPC
                      00832     newline
                          M             printchar   0xA ;changes line
040E   300A               M             movlw   0xA
040F   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0410   300D               M             movlw   0xD
0411   2???               M             call    writetoPC
                      00833     printchar   "T"
0412   3054               M             movlw   "T"
0413   2???               M             call    writetoPC
                      00834     printchar   "i"
0414   3069               M             movlw   "i"
0415   2???               M             call    writetoPC
                      00835     printchar   "m"
0416   306D               M             movlw   "m"
0417   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00836     printchar   "e"
0418   3065               M             movlw   "e"
0419   2???               M             call    writetoPC
                      00837     printchar   ":"
041A   303A               M             movlw   ":"
041B   2???               M             call    writetoPC
                      00838     printchar   " "
041C   3020               M             movlw   " "
041D   2???               M             call    writetoPC
041E   08AB           00839     movf    huns, F
041F   1903           00840     btfsc   STATUS,Z        ;if huns is zero don't display it
0420   2???           00841     goto    nohuns
                      00842     printBCD   huns
0421   1283 1303          M             banksel huns
0423   082B               M             movfw   huns
0424   3E30               M             addlw   0x30
0425   2???               M             call    writetoPC
0426                  00843 nohuns
0426   08AC           00844     movf    tens, F
0427   1903           00845     btfsc   STATUS,Z        ;if tens is zero don't display it (doesn't work?)
0428   2???           00846     goto    notens
                      00847     printBCD   tens
0429   1283 1303          M             banksel tens
042B   082C               M             movfw   tens
042C   3E30               M             addlw   0x30
042D   2???               M             call    writetoPC
042E                  00848 notens
                      00849     printBCD   ones
042E   1283 1303          M             banksel ones
0430   082D               M             movfw   ones
0431   3E30               M             addlw   0x30
0432   2???               M             call    writetoPC
                      00850     printchar   "s"
0433   3073               M             movlw   "s"
0434   2???               M             call    writetoPC
                      00851     printchar   "e"
0435   3065               M             movlw   "e"
0436   2???               M             call    writetoPC
                      00852     printchar   "c"
0437   3063               M             movlw   "c"
0438   2???               M             call    writetoPC
                      00853     newline
                          M             printchar   0xA ;changes line
0439   300A               M             movlw   0xA
043A   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
043B   300D               M             movlw   0xD
043C   2???               M             call    writetoPC
                      00854     printchar   "C"
043D   3043               M             movlw   "C"
043E   2???               M             call    writetoPC
                      00855     printchar   "a"
043F   3061               M             movlw   "a"
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0440   2???               M             call    writetoPC
                      00856     printchar   "n"
0441   306E               M             movlw   "n"
0442   2???               M             call    writetoPC
                      00857     printchar   "d"
0443   3064               M             movlw   "d"
0444   2???               M             call    writetoPC
                      00858     printchar   "l"
0445   306C               M             movlw   "l"
0446   2???               M             call    writetoPC
                      00859     printchar   "e"
0447   3065               M             movlw   "e"
0448   2???               M             call    writetoPC
                      00860     printchar   "s"
0449   3073               M             movlw   "s"
044A   2???               M             call    writetoPC
                      00861     printchar   ":"
044B   303A               M             movlw   ":"
044C   2???               M             call    writetoPC
                      00862     printchar   " "
044D   3020               M             movlw   " "
044E   2???               M             call    writetoPC
                      00863     printBCD    num_tot
044F   1283 1303          M             banksel num_tot
0451   083E               M             movfw   num_tot
0452   3E30               M             addlw   0x30
0453   2???               M             call    writetoPC
                      00864     newline
                          M             printchar   0xA ;changes line
0454   300A               M             movlw   0xA
0455   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0456   300D               M             movlw   0xD
0457   2???               M             call    writetoPC
                      00865     printchar   "L"
0458   304C               M             movlw   "L"
0459   2???               M             call    writetoPC
                      00866     printchar   "E"
045A   3045               M             movlw   "E"
045B   2???               M             call    writetoPC
                      00867     printchar   "D"
045C   3044               M             movlw   "D"
045D   2???               M             call    writetoPC
                      00868     printchar   " "
045E   3020               M             movlw   " "
045F   2???               M             call    writetoPC
                      00869     printchar   "f"
0460   3066               M             movlw   "f"
0461   2???               M             call    writetoPC
                      00870     printchar   "a"
0462   3061               M             movlw   "a"
0463   2???               M             call    writetoPC
                      00871     printchar   "i"
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0464   3069               M             movlw   "i"
0465   2???               M             call    writetoPC
                      00872     printchar   "l"
0466   306C               M             movlw   "l"
0467   2???               M             call    writetoPC
                      00873     printchar   ":"
0468   303A               M             movlw   ":"
0469   2???               M             call    writetoPC
                      00874     printchar   " "
046A   3020               M             movlw   " "
046B   2???               M             call    writetoPC
                      00875     printBCD    num_LF
046C   1283 1303          M             banksel num_LF
046E   083C               M             movfw   num_LF
046F   3E30               M             addlw   0x30
0470   2???               M             call    writetoPC
                      00876     newline
                          M             printchar   0xA ;changes line
0471   300A               M             movlw   0xA
0472   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0473   300D               M             movlw   0xD
0474   2???               M             call    writetoPC
                      00877     printchar   "F"
0475   3046               M             movlw   "F"
0476   2???               M             call    writetoPC
                      00878     printchar   "l"
0477   306C               M             movlw   "l"
0478   2???               M             call    writetoPC
                      00879     printchar   "i"
0479   3069               M             movlw   "i"
047A   2???               M             call    writetoPC
                      00880     printchar   "c"
047B   3063               M             movlw   "c"
047C   2???               M             call    writetoPC
                      00881     printchar   "k"
047D   306B               M             movlw   "k"
047E   2???               M             call    writetoPC
                      00882     printchar   "e"
047F   3065               M             movlw   "e"
0480   2???               M             call    writetoPC
                      00883     printchar   "r"
0481   3072               M             movlw   "r"
0482   2???               M             call    writetoPC
                      00884     printchar   " "
0483   3020               M             movlw   " "
0484   2???               M             call    writetoPC
                      00885     printchar   "f"
0485   3066               M             movlw   "f"
0486   2???               M             call    writetoPC
                      00886     printchar   "a"
0487   3061               M             movlw   "a"
0488   2???               M             call    writetoPC
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00887     printchar   "i"
0489   3069               M             movlw   "i"
048A   2???               M             call    writetoPC
                      00888     printchar   "l"
048B   306C               M             movlw   "l"
048C   2???               M             call    writetoPC
                      00889     printchar   ":"
048D   303A               M             movlw   ":"
048E   2???               M             call    writetoPC
                      00890     printchar   " "
048F   3020               M             movlw   " "
0490   2???               M             call    writetoPC
                      00891     printBCD    num_FF
0491   1283 1303          M             banksel num_FF
0493   083D               M             movfw   num_FF
0494   3E30               M             addlw   0x30
0495   2???               M             call    writetoPC
                      00892     newline
                          M             printchar   0xA ;changes line
0496   300A               M             movlw   0xA
0497   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
0498   300D               M             movlw   0xD
0499   2???               M             call    writetoPC
                      00893     newline  
                          M             printchar   0xA ;changes line
049A   300A               M             movlw   0xA
049B   2???               M             call    writetoPC
                          M             printchar   0xD ;goes back to left
049C   300D               M             movlw   0xD
049D   2???               M             call    writetoPC
049E   1283           00894     bcf STATUS,RP0  ;bank 0
049F   0008           00895     return
                      00896 
                      00897 
                      00898 ;***************************************
                      00899 ; GENERAL PURPOSE SUBROUTINES
                      00900 ;***************************************
                      00901 
                      00902 ; DISPLAY BIG NUMBER SUBROUTINE
                      00903 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00904 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00905 ; Uses "shift and add 3" algorithm
04A0                  00906 big_number
                      00907     movff   op_time, op_time_save         ;save the original op_time
04A0   0832               M         movf    op_time, W
04A1   00AA               M         movwf   op_time_save
                      00908     movlf   8, bignumcount                ;will shift 8 times
04A2   3008               M         movlw   8
04A3   00AE               M         movwf   bignumcount
04A4   01AB           00909     clrf    huns
04A5   01AC           00910     clrf    tens
04A6   01AD           00911     clrf    ones
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00912 
04A7                  00913 BCDadd3                             ; if any digit > 5, add3
04A7   3005           00914     movlw   0x5
04A8   022B           00915     subwf   huns, W
04A9   1803           00916     btfsc   STATUS, C
04AA   2???           00917     call    add3huns
                      00918 
04AB   3005           00919     movlw   0x5
04AC   022C           00920     subwf   tens, W
04AD   1803           00921     btfsc   STATUS, C
04AE   2???           00922     call    add3tens
                      00923 
04AF   3005           00924     movlw   0x5
04B0   022D           00925     subwf   ones, W
04B1   1803           00926     btfsc   STATUS, C
04B2   2???           00927     call    add3ones
                      00928 
04B3   03AE           00929     decf    bignumcount, 1
04B4   1003           00930     bcf     STATUS, C
04B5   0DB2           00931     rlf     op_time, 1              ; shift
04B6   0DAD           00932     rlf     ones, 1
04B7   1A2D           00933     btfsc   ones,4 ;
04B8   2???           00934     call    carryones               ; carry if too large
04B9   0DAC           00935     rlf     tens, 1
                      00936 
04BA   1A2C           00937     btfsc   tens,4 ;
04BB   2???           00938     call    carrytens
04BC   0DAB           00939     rlf     huns,1
04BD   1003           00940     bcf     STATUS, C
                      00941 
04BE   082E           00942     movf    bignumcount, W
04BF   1D03           00943     btfss   STATUS, Z
04C0   2???           00944     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00945 
                      00946     movff    op_time_save, op_time     ;restore the original op_time
04C1   082A               M         movf    op_time_save, W
04C2   00B2               M         movwf   op_time
04C3   0008           00947     return
                      00948 
04C4                  00949 add3huns
04C4   3003           00950     movlw 0x3
04C5   07AB           00951     addwf huns,F
04C6   0008           00952     return
04C7                  00953 add3tens
04C7   3003           00954     movlw 0x3
04C8   07AC           00955     addwf tens,F
04C9   0008           00956     return
04CA                  00957 add3ones
04CA   3003           00958     movlw 0x3
04CB   07AD           00959     addwf ones,F
04CC   0008           00960     return
04CD                  00961 carryones
04CD   122D           00962     bcf ones, 4
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04CE   1403           00963     bsf STATUS, C
04CF   0008           00964     return
04D0                  00965 carrytens
04D0   122C           00966     bcf tens, 4
04D1   1403           00967     bsf STATUS, C
04D2   0008           00968     return
                      00969 
                      00970 
                      00971 ; DELAY 0.5S SUBROUTINE (from sample code)
                      00972 ; Delays exactly 0.5sec
04D3                  00973 HalfS
  0000                00974         local   HalfS_0
04D3   3088           00975       movlw 0x88
04D4   00A7           00976       movwf COUNTH
04D5   30BD           00977       movlw 0xBD
04D6   00A8           00978       movwf COUNTM
04D7   3003           00979       movlw 0x03
04D8   00A9           00980       movwf COUNTL
                      00981 
04D9                  00982 HalfS_0
04D9   0BA7           00983       decfsz COUNTH, f
04DA   2???           00984       goto   $+2
04DB   0BA8           00985       decfsz COUNTM, f
04DC   2???           00986       goto   $+2
04DD   0BA9           00987       decfsz COUNTL, f
04DE   2???           00988       goto   HalfS_0
                      00989 
04DF   2???           00990       goto $+1
04E0   0000           00991       nop
04E1   0000           00992       nop
04E2   0008           00993                 return
                      00994 
                      00995 
                      00996 ;***************************************
                      00997 ; LCD SUBROUTINES (from sample code)
                      00998 ;***************************************
                      00999 
                      01000 ; Initialize the LCD
04E3                  01001 InitLCD
04E3   1283           01002         bcf STATUS,RP0
04E4   1588           01003         bsf E     ;E default high
                      01004 
                      01005         ;Wait for LCD POR to finish (~15ms)
04E5   2???           01006         call lcdLongDelay
04E6   2???           01007         call lcdLongDelay
04E7   2???           01008         call lcdLongDelay
                      01009 
                      01010         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      01011         ; -> Send b'0011' 3 times
04E8   3033           01012         movlw   b'00110011'
04E9   2???           01013         call    WR_INS
04EA   2???           01014         call lcdLongDelay
04EB   2???           01015         call lcdLongDelay
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

04EC   3032           01016         movlw   b'00110010'
04ED   2???           01017         call    WR_INS
04EE   2???           01018         call lcdLongDelay
04EF   2???           01019         call lcdLongDelay
                      01020 
                      01021         ; 4 bits, 2 lines, 5x7 dots
04F0   3028           01022         movlw   b'00101000'
04F1   2???           01023         call    WR_INS
04F2   2???           01024         call lcdLongDelay
04F3   2???           01025         call lcdLongDelay
                      01026 
                      01027         ; display on/off
04F4   300C           01028         movlw   b'00001100'
04F5   2???           01029         call    WR_INS
04F6   2???           01030         call lcdLongDelay
04F7   2???           01031         call lcdLongDelay
                      01032 
                      01033         ; Entry mode
04F8   3006           01034         movlw   b'00000110'
04F9   2???           01035         call    WR_INS
04FA   2???           01036         call lcdLongDelay
04FB   2???           01037         call lcdLongDelay
                      01038 
                      01039         ; Clear ram
04FC   3001           01040         movlw   b'00000001'
04FD   2???           01041         call    WR_INS
04FE   2???           01042         call lcdLongDelay
04FF   2???           01043         call lcdLongDelay
0500   0008           01044         return
                      01045 
                      01046 ; Clear the display
0501                  01047 Clear_Display
0501   3001           01048                 movlw   B'00000001'
0502   2???           01049                 call    WR_INS
0503   0008           01050                 return
                      01051 
                      01052 ;Switch lines
0504                  01053 Switch_Lines
0504   30C0           01054                 movlw   B'11000000'
0505   2???           01055                 call    WR_INS
0506   0008           01056                 return
                      01057 
                      01058 ; Write an instruction to the LCD (see page 7-104)
                      01059 ; The instruction must be in W
0507                  01060 WR_INS
0507   1108           01061         bcf             RS                              ;clear RS
0508   00A3           01062         movwf   com                             ;W --> com
0509   39F0           01063         andlw   0xF0                    ;mask 4 bits MSB w = X0
050A   0088           01064         movwf   PORTD                   ;Send 4 bits MSB
050B   1588           01065         bsf             E                               ;
050C   2???           01066         call    lcdLongDelay    ;__    __
050D   1188           01067         bcf             E                               ;  |__|
050E   0E23           01068         swapf   com,w
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

050F   39F0           01069         andlw   0xF0                    ;1111 0010
0510   0088           01070         movwf   PORTD                   ;send 4 bits LSB
0511   1588           01071         bsf             E                               ;
0512   2???           01072         call    lcdLongDelay    ;__    __
0513   1188           01073         bcf             E                               ;  |__|
0514   2???           01074         call    lcdLongDelay
0515   0008           01075         return
                      01076 
                      01077 ; Write data at current cursor location
                      01078 ; Character code (see page 7-104) must be in W
0516                  01079 WR_DATA
0516   1508           01080         bsf             RS
0517   00A4           01081         movwf   dat
0518   0824           01082         movf    dat,w
0519   39F0           01083         andlw   0xF0
051A   3E04           01084         addlw   4
051B   0088           01085         movwf   PORTD
051C   1588           01086         bsf             E                               ;
051D   2???           01087         call    lcdLongDelay    ;__    __
051E   1188           01088         bcf             E                               ;  |__|
051F   0E24           01089         swapf   dat,w
0520   39F0           01090         andlw   0xF0
0521   3E04           01091         addlw   4
0522   0088           01092         movwf   PORTD
0523   1588           01093         bsf             E                               ;
0524   2???           01094         call    lcdLongDelay    ;__    __
0525   1188           01095         bcf             E                               ;  |__|
0526   0008           01096         return
                      01097 
                      01098 ;Delay routine because PIC is way faster than the LCD can handle
0527                  01099 lcdLongDelay
0527   3014           01100     movlw d'20'
0528   00A6           01101     movwf lcd_d2
0529                  01102 LLD_LOOP
                      01103     LCD_DELAY
0529   30FF               M             movlw   0xFF
052A   00A5               M             movwf   lcd_d1
052B   0BA5               M             decfsz  lcd_d1,f
052C   2???               M             goto    $-1
052D   0BA6           01104     decfsz lcd_d2,f
052E   2???           01105     goto LLD_LOOP
052F   0008           01106     return
                      01107 
                      01108 
                      01109 ;***************************************
                      01110 ; PC INTERFACE SUBROUTINES (from sample code)
                      01111 ;***************************************
0530                  01112 InitUSART
0530   1683           01113         bsf       STATUS,RP0     ; select bank 1
0531   300F           01114         movlw     d'15'          ; BAUD rate 9600, assuming 10MHz oscillator
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0532   0099           01115         movwf     SPBRG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0533   0198           01116         clrf      TXSTA          ; 8 bits data ,no,1 stop
                      01117 
0534   1283           01118         bcf       STATUS,RP0     ; select bank 0
0535   1798           01119         bsf       RCSTA,SPEN     ; Asynchronous serial port enable
0536   1618           01120         bsf       RCSTA,CREN     ; continuous receive
                      01121 
0537   1683           01122         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0538   1698           01123         bsf       TXSTA,TXEN     ; Transmit enable
0539   0008           01124         return
                      01125 
                      01126 
053A                  01127 writetoPC
                      01128 ; Writes the data in W to the PC
                      01129 ; end up in bank1!
053A   1283           01130         bcf       STATUS,RP0     ; Go to bank 0
053B   0099           01131         movwf     TXREG          ; Send contents of W to RS232
053C   1683           01132         bsf       STATUS,RP0     ; Go to bank with TXSTA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
053D   1C98           01133         btfss     TXSTA,1        ; check TRMT bit in TXSTA (FSR) until TRMT=1
053E   2???           01134         goto      $-1
053F   0008           01135         return
                      01136 
                      01137 
                      01138 ;***************************************
                      01139 ; ISR
                      01140 ; Currently only care about TMR0
                      01141 ; TMR0 overflows at 256*256; each time, decrement count38
                      01142 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      01143 ; When this hapens, op_time increments
                      01144 ;***************************************
0540                  01145 isr
0540   00B0           01146     movwf   w_isr           ;save W and status
0541   0E03           01147     swapf   STATUS, W
0542   1283           01148     bcf     STATUS, RP0
0543   00B1           01149     movwf   status_isr
                      01150 
Message[305]: Using default destination of 1 (file).
0544   0BAF           01151     decfsz    count38     ;if count38 gets to 38 it's been one second
0545   2???           01152     goto end_isr
                      01153     movlf   D'38', count38  ;so reset count38
0546   3026               M         movlw   D'38'
0547   00AF               M         movwf   count38
Message[305]: Using default destination of 1 (file).
0548   0AB2           01154     incf    op_time         ; and increment op_time
                      01155 
0549                  01156 end_isr
0549   0E31           01157     swapf   status_isr, W   ;restore W and status
054A   0083           01158     movwf   STATUS
054B   0EB0           01159     swapf   w_isr, F
054C   0E30           01160     swapf   w_isr, W
054D   110B           01161     bcf     INTCON, T0IF    ;clear the interrupt flag
054E   0009           01162     retfie
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01163 
                      01164 
3F72                  01165     END
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           000004A7
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000027
COUNTL                            00000029
COUNTM                            00000028
CREN                              00000004
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

CSRC                              00000007
Clear_Display                     00000501
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
F                                 00000001
FERR                              00000002
FF                                0000008F
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             000004D3
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           000004E3
InitUSART                         00000530
LCD_DELAY                         
LED_fail                          0000005C
LF                                00000089
LLD_LOOP                          00000529
Logs_Msg1                         0000009D
Logs_Msg2                         000000AD
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000095
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      00000504
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000022
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000516
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

WR_INS                            00000507
Z                                 00000002
_.org_1_0141                      00000141
_.org_1_0189                      00000189
_.org_1_018E                      0000018E
_.org_1_01A7                      000001A7
_.org_1_0200                      00000200
_.org_1_04DA                      000004DA
_.org_1_04DC                      000004DC
_.org_1_04DF                      000004DF
_.org_1_052C                      0000052C
_.org_1_053E                      0000053E
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          000004C4
add3ones                          000004CA
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

add3tens                          000004C7
badkey                            000001FF
big_number                        000004A0
bignumcount                       0000002E
carryones                         000004CD
carrytens                         000004D0
check_1                           00000203
check_2                           0000020E
check_3                           0000021A
check_4                           00000226
check_5                           00000232
check_6                           0000023E
check_7                           0000024A
check_8                           00000256
check_9                           00000262
check_FF                          0000033F
check_LED                         000002BB
check_LF                          00000324
check_defective                   00000274
check_done                        000001EE
check_export                      00000280
check_flick                       000002CA
check_for_fail                    00000342
check_log1                        000001AB
check_log2                        000001BB
check_log3                        000001CC
check_log4                        000001DD
check_none                        0000029E
check_pass                        000002AC
check_standby                     00000286
check_start                       00000297
check_summary                     0000026E
check_time                        0000027A
com                               00000023
count38                           0000002F
dat                               00000024
default_key                       0000029C
default_state                     000002D9
defective                         0000030B
display_state                     0000029D
eight                             00000388
end_check_fail                    0000039A
end_isr                           00000549
export                            000003C6
five                              0000036A
four                              00000360
huns                              0000002B
i2c_common_setup                  00000000
information                       00000202
init                              000000BE
isr                               00000540
keytemp                           00000020
lcdLongDelay                      00000527
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

lcd_d1                            00000025
lcd_d2                            00000026
logs                              00000190
movff                             
movlf                             
newline                           
nine                              00000392
no_huns                           000003B0
no_tens                           000003B7
nohuns                            00000426
notens                            0000042E
now_FF                            00000326
num_FF                            0000003D
num_LF                            0000003C
num_tot                           0000003E
one                               00000343
ones                              0000002D
op_time                           00000032
op_time_save                      0000002A
poll                              00000188
polling                           000001A6
printASC                          
printBCD                          
printchar                         
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
seven                             0000037E
six                               00000374
spacebar                          
start                             00000143
start_date1                       00000044
start_date10                      00000043
start_hour1                       00000046
start_hour10                      00000045
start_min1                        00000048
start_min10                       00000047
start_month1                      00000042
start_month10                     00000041
start_year1                       00000040
start_year10                      0000003F
state1                            00000033
state2                            00000034
state3                            00000035
state4                            00000036
state5                            00000037
state6                            00000038
state7                            00000039
state8                            0000003A
state9                            0000003B
statetemp                         00000021
MPASM 5.54                          MAIN.ASM   2-7-2014  16:56:19         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

status_isr                        00000031
summary                           000002DA
tens                              0000002C
three                             00000356
time                              0000039B
two                               0000034C
w_isr                             00000030
waiting                           000000DB
write_rtc                         00000000
writenum                          
writenum_reg                      
writetoPC                         0000053A

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    11 reported,     0 suppressed

