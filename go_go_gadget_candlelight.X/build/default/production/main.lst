MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     list p=16f877                 ; list directive to define processor
                      00002       #include <p16f877.inc>        ; processor specific variable definitions
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00540         LIST
2007   3F72           00003       __CONFIG _CP_OFF & _WDT_OFF & _BODEN_ON & _PWRTE_ON & _HS_OSC & _WRT_ENABLE_ON & _CPD_OFF & _LVP_O
                            FF
                      00004 
                      00005       #include <rtc_macros.inc>
                      00001         ;External labels
  0000                00002         extern  write_rtc,read_rtc,rtc_convert,i2c_common_setup
                      00003 
                      00004 ;RTC Macros;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00005 
                      00006 rtc_resetAll    macro
                      00007 ;input:         none
                      00008 ;output:        none
                      00009 ;desc:          Resets all the time keeping registers on the RTC to zero
                      00010         banksel         0x74
                      00011         clrf            0x74
                      00012         banksel         0x73
                      00013         clrf            0x73
                      00014     call        write_rtc               ;Write 0 to Seconds
                      00015         banksel         0x73
                      00016     incf        0x73                    ;Set register address to 1
                      00017         call            write_rtc
                      00018         banksel         0x73
                      00019     incf        0x73                    ;Set register address to 2
                      00020         call            write_rtc
                      00021         banksel         0x73
                      00022     incf        0x73                    ;Set register address to 3
                      00023         call            write_rtc
                      00024         banksel         0x73
                      00025     incf        0x73                    ;Set register address to 4
                      00026         call            write_rtc
                      00027         banksel         0x73
                      00028     incf        0x73                    ;Set register address to 5
                      00029         call            write_rtc
                      00030         banksel         0x73
                      00031     incf        0x73                    ;Set register address to 6
                      00032         call            write_rtc
                      00033         endm
                      00034 
                      00035 rtc_set         macro   addliteral,datliteral
                      00036 ;input:         addliteral: value of address
                      00037 ;                       datliteral: value of data
                      00038 ;output:        none
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 ;desc:          loads the data in datliteral into the 
                      00040 ;                       address specified by addliteral in the RTC
                      00041         banksel 0x73
                      00042         movlw   addliteral
                      00043         movwf   0x73
                      00044         banksel 0x74
                      00045         movlw   datliteral
                      00046         movwf   0x74    
                      00047         call    write_rtc
                      00048         endm
                      00049 
                      00050 rtc_read        macro   addliteral
                      00051 ;input:         addliteral
                      00052 ;output:        0x75, 0x77, 0x78
                      00053 ;desc:          From the selected register in the RTC, read the data
                      00054 ;                       and load it into 0x75. 0x75 is also converted into 
                      00055 ;                       ASCII characters and the tens digit is placed into
                      00056 ;                       0x77 and the ones digit is placed in 0x78
                      00057         movlw   addliteral
                      00058         banksel 0x73
                      00059         movwf   0x73
                      00060         call    read_rtc
                      00061         banksel 0x75
                      00062         movf    0x75,w
                      00063         call    rtc_convert   
                      00064         endm
                      00006 
                      00007 
                      00008 ;***************************************
                      00009 ; DEFINITIONS
                      00010 ;***************************************
                      00011     #define     RS      PORTD,2
                      00012         #define E       PORTD,3
                      00013 
                      00014 
                      00015 ;***************************************
                      00016 ; VARIABLES
                      00017 ;***************************************
                      00018 
                      00019 ; Also see i2c_commmon.asm -> has stuff at 0x70 on for RTC
                      00020 
                      00021     cblock      0x20
                      00022         ; temps, counters, etc.
  00000020            00023         keytemp         ; for data display mode
  00000021            00024         statetemp
  00000022            00025                 Table_Counter   ; for LCD stuff
  00000023            00026                 com
  00000024            00027                 dat
  00000025            00028         lcd_d1
  00000026            00029         lcd_d2
  00000027            00030         COUNTH          ;for delay 0.5s routine
  00000028            00031         COUNTM
  00000029            00032         COUNTL
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002A            00033         op_time_save    ;for operation time
  0000002B            00034         huns
  0000002C            00035         tens
  0000002D            00036         ones
  0000002E            00037         bignumcount
  0000002F            00038         count38         ;for isr
  00000030            00039         w_isr               ;I think this needs to be in all banks??
  00000031            00040         status_isr
                      00041 
                      00042         ; important information
  00000032            00043         op_time    ;in seconds
  00000033            00044         state1     ;where   0 = none      1 = pass
  00000034            00045         state2     ;        2 = led fail  3 = flicker fail
  00000035            00046         state3
  00000036            00047         state4
  00000037            00048         state5
  00000038            00049         state6
  00000039            00050         state7
  0000003A            00051         state8
  0000003B            00052         state9
  0000003C            00053         num_def
  0000003D            00054         num_tot
  0000003E            00055         start_year10    ;starting time (for log)
  0000003F            00056         start_year1
  00000040            00057         start_month10
  00000041            00058         start_month1
  00000042            00059         start_date10
  00000043            00060         start_date1
  00000044            00061         start_hour10
  00000045            00062         start_hour1
  00000046            00063         start_min10
  00000047            00064         start_min1
                      00065 
                      00066         endc
                      00067 
                      00068 
                      00069 ;***************************************
                      00070 ; MACROS
                      00071 ;***************************************
                      00072 
                      00073 ;LCD Delay
                      00074 LCD_DELAY   macro
                      00075             movlw   0xFF
                      00076             movwf   lcd_d1
                      00077             decfsz  lcd_d1,f
                      00078             goto    $-1
                      00079             endm
                      00080 
                      00081 ; Display a msg on LCD
                      00082 Display macro   Message
                      00083                 local   loop_
                      00084                 local   end_
                      00085                 clrf    Table_Counter
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086                 clrw
                      00087 loop_   movf    Table_Counter,W
                      00088                 call    Message
                      00089                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
                      00090                 btfsc   STATUS,Z
                      00091                 goto    end_
                      00092                 call    WR_DATA
                      00093                 incf    Table_Counter,F
                      00094                 goto    loop_
                      00095 end_
                      00096                 endm
                      00097 
                      00098 ;Move cursor one to the right
                      00099 spacebar    macro
                      00100             movlw   B'00010100'
                      00101             call    WR_INS
                      00102             endm
                      00103 
                      00104 ;Shortcuts for moving literals / registers
                      00105 movlf   macro   l, f
                      00106         movlw   l
                      00107         movwf   f
                      00108         endm
                      00109 
                      00110 movff   macro   source, dest
                      00111         movf    source, W
                      00112         movwf   dest
                      00113         endm
                      00114 
                      00115 ; Display a single digit number (0x0 to 0x9) on LCD as decimal
                      00116 writenum    macro   number          ; literal
                      00117             movlw    number
                      00118             addlw   B'00110000'
                      00119             movwf   dat
                      00120             call WR_DATA
                      00121             endm
                      00122 
                      00123 writenum_reg    macro   reg         ; from a register
                      00124             movfw    reg
                      00125             addlw   B'00110000'
                      00126             movwf   dat
                      00127             call WR_DATA
                      00128             endm
                      00129 
                      00130 
                      00131 ;***************************************
                      00132 ; VECTORS
                      00133 ;***************************************
                      00134 
                      00135     ORG       0x000
0000   2???           00136          goto      init
                      00137     ORG       0x004
0004   2???           00138         goto    isr
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139 
                      00140 
                      00141 ;***************************************
                      00142 ; TABLES (MESSAGES)
                      00143 ;***************************************
0005                  00144 Standby_Msg
0005   0782           00145                 addwf   PCL,F
0006   3453 3454 3441 00146                 dt              "STANDBY", 0
       344E 3444 3442 
       3459 3400 
000E                  00147 Start_Msg
000E   0782           00148         addwf   PCL,F
000F   3449 346E 3473 00149         dt      "Inspecting . . .",0
       3470 3465 3463 
       3474 3469 346E 
       3467 3420 342E 
       3420 342E 3420 
       342E 3400 
0020                  00150 End_Msg
0020   0782           00151         addwf   PCL,F
0021   3443 346F 346D 00152         dt      "Complete",0
       3470 346C 3465 
       3474 3465 3400 
002A                  00153 Time_Msg
002A   0782           00154                 addwf   PCL,F
002B   344F 3470 3465 00155                 dt              "Operation time:",0
       3472 3461 3474 
       3469 346F 346E 
       3420 3474 3469 
       346D 3465 343A 
       3400 
003B                  00156 Seconds
003B   0782           00157         addwf   PCL,F
003C   3420 3473 3465 00158         dt      " seconds", 0
       3463 346F 346E 
       3464 3473 3400 
0045                  00159 Not_present
0045   0782           00160         addwf   PCL,F
0046   343A 3420 346E 00161         dt      ": not present",0
       346F 3474 3420 
       3470 3472 3465 
       3473 3465 346E 
       3474 3400 
0054                  00162 Pass
0054   0782           00163                 addwf   PCL,F
0055   343A 3420 3470 00164                 dt              ": pass",0
       3461 3473 3473 
       3400 
005C                  00165 LED_fail
005C   0782           00166                 addwf   PCL,F
005D   343A 3420 344C 00167                 dt              ": LED fail",0
       3445 3444 3420 
       3466 3461 3469 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       346C 3400 
0068                  00168 Flick_fail
0068   0782           00169                 addwf   PCL,F
0069   343A 3420 3466 00170                 dt              ": flicker fail",0
       346C 3469 3463 
       346B 3465 3472 
       3420 3466 3461 
       3469 346C 3400 
0078                  00171 Total_Msg
0078   0782           00172         addwf   PCL,F
0079   3454 346F 3474 00173         dt      "Total candles: ",0
       3461 346C 3420 
       3463 3461 346E 
       3464 346C 3465 
       3473 343A 3420 
       3400 
0089                  00174 Defective
0089   0782           00175         addwf   PCL,F
008A   3444 3465 3466 00176         dt      "Defective: ",0
       3465 3463 3474 
       3469 3476 3465 
       343A 3420 3400 
0096                  00177 None
0096   0782           00178         addwf   PCL,F
0097   3420 3420 3420 00179         dt      "      none", 0
       3420 3420 3420 
       346E 346F 346E 
       3465 3400 
00A2                  00180 Export_Msg
00A2   0782           00181         addwf   PCL,F
00A3   3445 3478 3470 00182         dt      "Exporting . . .",0
       346F 3472 3474 
       3469 346E 3467 
       3420 342E 3420 
       342E 3420 342E 
       3400 
00B3                  00183 Logs_Msg1
00B3   0782           00184         addwf   PCL,F
00B4   3431 342D 3434 00185         dt      "1-4 to see log",0
       3420 3474 346F 
       3420 3473 3465 
       3465 3420 346C 
       346F 3467 3400 
00C3                  00186 Logs_Msg2
00C3   0782           00187         addwf   PCL,F
00C4   3453 3454 3441 00188         dt      "STANDBY to exit",0
       344E 3444 3442 
       3459 3420 3474 
       346F 3420 3465 
       3478 3469 3474 
       3400 
                      00189 
                      00190 ;***************************************
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00191 ; MAIN PROGRAM
                      00192 ;***************************************
                      00193 
00D4                  00194 init
                      00195         movlf     b'10000000', INTCON   ;interrupts enabled
00D4   3080               M         movlw   b'10000000'
00D5   008B               M         movwf   INTCON
                      00196 
00D6   1683           00197         bsf       STATUS,RP0     ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D7   0185           00198         clrf      TRISA                 ; PortA is output - not yet used
                      00199         movlf     b'11110010', TRISB    ; PortB[7:4] and [1] are keypad inputs (rest unused; RB0 may be 
                            external interrupt)
00D8   30F2               M         movlw   b'11110010'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D9   0086               M         movwf   TRISB
                      00200                                         ; note can disable keypad to free up these ports during operatio
                            n if necessary.
                      00201         movlf     b'00011000', TRISC    ; PortC[4:3] is RTC (rest unused; [7:6] may be RS-232)
00DA   3018               M         movlw   b'00011000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DB   0087               M         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DC   0188           00202         clrf      TRISD                 ; PortD[2:7] is LCD output (rest unused)
                      00203 
00DD   1283           00204         bcf       STATUS,RP0     ; select bank 0
00DE   0185           00205         clrf      PORTA
00DF   0186           00206         clrf      PORTB
00E0   0187           00207         clrf      PORTC
00E1   0188           00208         clrf      PORTD
                      00209 
00E2   2???           00210         call      i2c_common_setup  ;Set up I2C for communication
00E3   2???           00211         call      InitLCD           ;Initialize the LCD
                      00212                 
                      00213         Display Standby_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
00E4   01A2               M                 clrf    Table_Counter
00E5   0103               M                 clrw
00E6   0822               M loop_   movf    Table_Counter,W
00E7   2???               M                 call    Standby_Msg
00E8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
00E9   1903               M                 btfsc   STATUS,Z
00EA   2???               M                 goto    end_
00EB   2???               M                 call    WR_DATA
00EC   0AA2               M                 incf    Table_Counter,F
00ED   2???               M                 goto    loop_
00EE                      M end_
00EE   2???           00214         call    Switch_Lines
                      00215       
                      00216  ;--------------------------------------------------
                      00217  ;      STANDBY MODE
                      00218 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EF                  00219 waiting
                      00220         ; Display date and time. 
                      00221         ; Also save starting time for log (will stop updating once we start)
00EF   3032           00222         movlw   "2"                             ;First line shows 20**/**/**
00F0   2???           00223                 call    WR_DATA
00F1   3030           00224                 movlw   "0"
00F2   2???           00225                 call    WR_DATA
                      00226                 rtc_read        0x06            ;Read Address 0x06 from DS1307---year
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
00F3   3006               M         movlw   0x06
00F4   1283 1303          M         banksel 0x73
00F6   00F3               M         movwf   0x73
00F7   2???               M         call    read_rtc
00F8   1283 1303          M         banksel 0x75
00FA   0875               M         movf    0x75,w
00FB   2???               M         call    rtc_convert   
00FC   0877           00227                 movfw   0x77
Message[305]: Using default destination of 1 (file).
00FD   08BE           00228         movf    start_year10    ;Save starting year dig10
00FE   2???           00229                 call    WR_DATA
00FF   0878           00230                 movfw   0x78
Message[305]: Using default destination of 1 (file).
0100   08BF           00231         movf    start_year1    ;Save starting year dig1
0101   2???           00232                 call    WR_DATA
0102   302F           00233                 movlw   "/"
0103   2???           00234                 call    WR_DATA
                      00235                 rtc_read        0x05            ;Read Address 0x05 from DS1307---month
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0104   3005               M         movlw   0x05
0105   1283 1303          M         banksel 0x73
0107   00F3               M         movwf   0x73
0108   2???               M         call    read_rtc
0109   1283 1303          M         banksel 0x75
010B   0875               M         movf    0x75,w
010C   2???               M         call    rtc_convert   
010D   0877           00236                 movfw   0x77
Message[305]: Using default destination of 1 (file).
010E   08C0           00237         movf    start_month10    ;Save starting month dig10
010F   2???           00238                 call    WR_DATA
0110   0878           00239                 movfw   0x78
Message[305]: Using default destination of 1 (file).
0111   08C1           00240         movf    start_month1    ;Save starting month dig1
0112   2???           00241                 call    WR_DATA
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0113   302F           00242                 movlw   "/"
0114   2???           00243                 call    WR_DATA
                      00244                 rtc_read        0x04            ;Read Address 0x04 from DS1307---date
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0115   3004               M         movlw   0x04
0116   1283 1303          M         banksel 0x73
0118   00F3               M         movwf   0x73
0119   2???               M         call    read_rtc
011A   1283 1303          M         banksel 0x75
011C   0875               M         movf    0x75,w
011D   2???               M         call    rtc_convert   
011E   0877           00245                 movfw   0x77
Message[305]: Using default destination of 1 (file).
011F   08C2           00246         movf    start_date10    ;Save starting date dig10
0120   2???           00247                 call    WR_DATA
0121   0878           00248                 movfw   0x78
Message[305]: Using default destination of 1 (file).
0122   08C3           00249         movf    start_date1    ;Save starting date dig1
0123   2???           00250                 call    WR_DATA
                      00251                 spacebar
0124   3014               M             movlw   B'00010100'
0125   2???               M             call    WR_INS
                      00252                 rtc_read        0x02            ;Read Address 0x02 from DS1307---hour
                          M ;input:         addliteral
                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0126   3002               M         movlw   0x02
0127   1283 1303          M         banksel 0x73
0129   00F3               M         movwf   0x73
012A   2???               M         call    read_rtc
012B   1283 1303          M         banksel 0x75
012D   0875               M         movf    0x75,w
012E   2???               M         call    rtc_convert   
012F   0877           00253                 movfw   0x77
Message[305]: Using default destination of 1 (file).
0130   08C4           00254         movf    start_hour10    ;Save starting hour dig10
0131   2???           00255                 call    WR_DATA
0132   0878           00256                 movfw   0x78
Message[305]: Using default destination of 1 (file).
0133   08C5           00257         movf    start_hour1    ;Save starting hour dig1
0134   2???           00258                 call    WR_DATA
0135   303A           00259                 movlw   ":"
0136   2???           00260                 call    WR_DATA
                      00261                 rtc_read        0x01            ;Read Address 0x01 from DS1307---min
                          M ;input:         addliteral
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M ;output:        0x75, 0x77, 0x78
                          M ;desc:          From the selected register in the RTC, read the data
                          M ;                       and load it into 0x75. 0x75 is also converted into 
                          M ;                       ASCII characters and the tens digit is placed into
                          M ;                       0x77 and the ones digit is placed in 0x78
0137   3001               M         movlw   0x01
0138   1283 1303          M         banksel 0x73
013A   00F3               M         movwf   0x73
013B   2???               M         call    read_rtc
013C   1283 1303          M         banksel 0x75
013E   0875               M         movf    0x75,w
013F   2???               M         call    rtc_convert   
0140   0877           00262                 movfw   0x77
Message[305]: Using default destination of 1 (file).
0141   08C6           00263         movf    start_min10    ;Save starting min dig10
0142   2???           00264                 call    WR_DATA
0143   0878           00265                 movfw   0x78
Message[305]: Using default destination of 1 (file).
0144   08C7           00266         movf    start_min1    ;Save starting min dig1
0145   2???           00267                 call    WR_DATA
                      00268                       
                      00269         ; Move cursor back to start of second line
                      00270         ; We will update displayed time but not the word "STANDBY"
0146   30C0           00271         movlw   B'11000000'
0147   2???           00272         call    WR_INS
                      00273 
                      00274         ;Poll to start (will have to hold key for ~0.5sec)
0148   1C86           00275          btfss          PORTB,1     ;Wait until data is available from the keypad
0149   2???           00276          goto           waiting
                      00277 
014A   0E06           00278          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
014B   390F           00279          andlw          0x0F
014C   00A0           00280          movwf      keytemp
014D   3A0C           00281          xorlw      0xC         ;Will be all zeros if its "START"
014E   1903           00282          btfsc      STATUS,Z    ;and Z will be high, so skip if not high
014F   2???           00283          goto       start
                      00284 
0150   0820           00285          movf       keytemp,W     ;Go to log interface
0151   3A0E           00286          xorlw      0xE
0152   1903           00287          btfsc      STATUS,Z
0153   2???           00288          goto       logs
                      00289 
0154   1886           00290          btfsc          PORTB,1     ;Wait until key is released
0155   2???           00291          goto           $-1
0156   2???           00292          goto       waiting
                      00293 
                      00294 ;-----------------------------------------------------------
                      00295 ;       ACTUAL OPERATION (I'm just adding values manually now)
                      00296 
0157                  00297 start
                      00298         ;Start the timer
                      00299         movlf       D'38', count38
0157   3026               M         movlw   D'38'
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0158   00AF               M         movwf   count38
0159   01B2           00300         clrf        op_time
015A   168B           00301         bsf         INTCON, T0IE ;enable Timer0 interrupt
015B   0181           00302         clrf        TMR0
015C   1683 1303      00303         banksel     OPTION_REG
                      00304         movlf       B'11000111', OPTION_REG ; 1:256 prescaler
015E   30C7               M         movlw   B'11000111'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015F   0081               M         movwf   OPTION_REG
0160   1283           00305         bcf        STATUS,RP0     ; back to bank 0
                      00306 
                      00307         ;Display starting message
0161   2???           00308         call        Clear_Display
                      00309         Display     Start_Msg       ;"Inspecting. . ."
  0000                    M                 local   loop_
  0000                    M                 local   end_
0162   01A2               M                 clrf    Table_Counter
0163   0103               M                 clrw
0164   0822               M loop_   movf    Table_Counter,W
0165   2???               M                 call    Start_Msg
0166   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0167   1903               M                 btfsc   STATUS,Z
0168   2???               M                 goto    end_
0169   2???               M                 call    WR_DATA
016A   0AA2               M                 incf    Table_Counter,F
016B   2???               M                 goto    loop_
016C                      M end_
                      00310 
                      00311         ; just delaying for now 
016C   2???           00312         call        HalfS
016D   2???           00313         call        HalfS
016E   2???           00314         call        HalfS
016F   2???           00315         call        HalfS
0170   2???           00316         call        HalfS
0171   2???           00317         call        HalfS
                      00318         
                      00319         ; Putting values in manually. This will be done automatically in main program
                      00320         movlf     B'00', state1     ;not present
0172   3000               M         movlw   B'00'
0173   00B3               M         movwf   state1
                      00321         movlf     B'01', state2     ;pass
0174   3001               M         movlw   B'01'
0175   00B4               M         movwf   state2
                      00322         movlf     B'10', state3     ;LED fail
0176   3002               M         movlw   B'10'
0177   00B5               M         movwf   state3
                      00323         movlf     B'11', state4     ;flicker fail
0178   3003               M         movlw   B'11'
0179   00B6               M         movwf   state4
                      00324         movlf     B'01', state5     ;pass
017A   3001               M         movlw   B'01'
017B   00B7               M         movwf   state5
                      00325         movlf     B'01', state6     ;pass
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017C   3001               M         movlw   B'01'
017D   00B8               M         movwf   state6
                      00326         movlf     B'01', state7     ;pass
017E   3001               M         movlw   B'01'
017F   00B9               M         movwf   state7
                      00327         movlf     B'11', state8     ;flicker fail
0180   3003               M         movlw   B'11'
0181   00BA               M         movwf   state8
                      00328         movlf     B'00', state9     ;not present
0182   3000               M         movlw   B'00'
0183   00BB               M         movwf   state9
                      00329         movlf     D'3', num_def
0184   3003               M         movlw   D'3'
0185   00BC               M         movwf   num_def
                      00330         movlf     D'7', num_tot
0186   3007               M         movlw   D'7'
0187   00BD               M         movwf   num_tot
                      00331 
                      00332         ; Stop the timer
0188   128B           00333          bcf         INTCON, T0IE  ;disable Timer0 interrupt
                      00334 
                      00335         ; Display ending messages
0189   2???           00336         call       Clear_Display
                      00337         Display    End_Msg          ; "Complete"
  0000                    M                 local   loop_
  0000                    M                 local   end_
018A   01A2               M                 clrf    Table_Counter
018B   0103               M                 clrw
018C   0822               M loop_   movf    Table_Counter,W
018D   2???               M                 call    End_Msg
018E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
018F   1903               M                 btfsc   STATUS,Z
0190   2???               M                 goto    end_
0191   2???               M                 call    WR_DATA
0192   0AA2               M                 incf    Table_Counter,F
0193   2???               M                 goto    loop_
0194                      M end_
0194   2???           00338         call       HalfS
0195   2???           00339         call       time             ; "Operation time: X sec"
0196   2???           00340         call       HalfS
0197   2???           00341         call       HalfS
0198   2???           00342         call       summary          ; "Total candles: X. Defective: Y"
0199   2???           00343         call       HalfS
019A   2???           00344         call       HalfS
019B   2???           00345         call       defective        ; "Defective: a b c"
                      00346 ;-----------------------------------------------------------------------
                      00347 ; Data display interface
                      00348 
019C   1C86           00349 poll     btfss          PORTB,1     ;Wait until data is available from the keypad
019D   2???           00350          goto           $-1
                      00351 
019E   0E06           00352          swapf          PORTB,W     ;Read PortB<7:4> into W<3:0>
019F   390F           00353          andlw          0x0F
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A0   2???           00354          call       information
                      00355 
01A1   1886           00356          btfsc          PORTB,1     ;Wait until key is released
01A2   2???           00357          goto           $-1
01A3   2???           00358          goto       poll
                      00359 
                      00360 ; END OF MAIN PROGRAM
                      00361 ;-------------------------------------------------------------------------
                      00362 
                      00363 
                      00364 ;***************************************
                      00365 ; LOGS INTERFACE            (DONT ACTUALLY HAVE LOGS YET!)
                      00366 ; Eventually this will show logs
                      00367 ; Right now it just displays random crap
                      00368 ; Access from STANDBY and return to STANDBY
                      00369 ;***************************************
                      00370 
01A4                  00371 logs
01A4   2???           00372     call    Clear_Display
                      00373     Display Logs_Msg1
  0000                    M                 local   loop_
  0000                    M                 local   end_
01A5   01A2               M                 clrf    Table_Counter
01A6   0103               M                 clrw
01A7   0822               M loop_   movf    Table_Counter,W
01A8   2???               M                 call    Logs_Msg1
01A9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01AA   1903               M                 btfsc   STATUS,Z
01AB   2???               M                 goto    end_
01AC   2???               M                 call    WR_DATA
01AD   0AA2               M                 incf    Table_Counter,F
01AE   2???               M                 goto    loop_
01AF                      M end_
01AF   2???           00374     call    Switch_Lines
                      00375     Display Logs_Msg2
  0000                    M                 local   loop_
  0000                    M                 local   end_
01B0   01A2               M                 clrf    Table_Counter
01B1   0103               M                 clrw
01B2   0822               M loop_   movf    Table_Counter,W
01B3   2???               M                 call    Logs_Msg2
01B4   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01B5   1903               M                 btfsc   STATUS,Z
01B6   2???               M                 goto    end_
01B7   2???               M                 call    WR_DATA
01B8   0AA2               M                 incf    Table_Counter,F
01B9   2???               M                 goto    loop_
01BA                      M end_
                      00376 
01BA                  00377 polling
01BA   1C86           00378     btfss               PORTB,1     ;Wait until data is available from the keypad
01BB   2???           00379     goto                $-1
                      00380 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BC   0E06           00381     swapf               PORTB,W     ;Read PortB<7:4> into W<3:0>
01BD   390F           00382     andlw               0x0F
01BE   00A0           00383     movwf       keytemp             ; Save which key was pressed
                      00384 
01BF                  00385 check_log1
01BF   3A00           00386     xorlw   0x0         ;will be all zeros if its 1
01C0   1D03           00387     btfss   STATUS,Z    ;and Z will be high, so skip
01C1   2???           00388     goto    check_log2
01C2   2???           00389     call    Clear_Display
                      00390     Display None
  0000                    M                 local   loop_
  0000                    M                 local   end_
01C3   01A2               M                 clrf    Table_Counter
01C4   0103               M                 clrw
01C5   0822               M loop_   movf    Table_Counter,W
01C6   2???               M                 call    None
01C7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01C8   1903               M                 btfsc   STATUS,Z
01C9   2???               M                 goto    end_
01CA   2???               M                 call    WR_DATA
01CB   0AA2               M                 incf    Table_Counter,F
01CC   2???               M                 goto    loop_
01CD                      M end_
01CD   2???           00391     call    HalfS
01CE   2???           00392     goto    logs
                      00393 
01CF                  00394 check_log2
01CF   0820           00395     movf    keytemp, W
01D0   3A01           00396     xorlw   0x1
01D1   1D03           00397     btfss   STATUS,Z
01D2   2???           00398     goto    check_log3
01D3   2???           00399     call    Clear_Display
                      00400     Display None
  0000                    M                 local   loop_
  0000                    M                 local   end_
01D4   01A2               M                 clrf    Table_Counter
01D5   0103               M                 clrw
01D6   0822               M loop_   movf    Table_Counter,W
01D7   2???               M                 call    None
01D8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01D9   1903               M                 btfsc   STATUS,Z
01DA   2???               M                 goto    end_
01DB   2???               M                 call    WR_DATA
01DC   0AA2               M                 incf    Table_Counter,F
01DD   2???               M                 goto    loop_
01DE                      M end_
01DE   2???           00401     call    HalfS
01DF   2???           00402     goto    logs
                      00403 
01E0                  00404 check_log3
01E0   0820           00405     movf    keytemp, W
01E1   3A02           00406     xorlw   0x2
01E2   1D03           00407     btfss   STATUS,Z
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E3   2???           00408     goto    check_log4
01E4   2???           00409     call    Clear_Display
                      00410     Display None
  0000                    M                 local   loop_
  0000                    M                 local   end_
01E5   01A2               M                 clrf    Table_Counter
01E6   0103               M                 clrw
01E7   0822               M loop_   movf    Table_Counter,W
01E8   2???               M                 call    None
01E9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01EA   1903               M                 btfsc   STATUS,Z
01EB   2???               M                 goto    end_
01EC   2???               M                 call    WR_DATA
01ED   0AA2               M                 incf    Table_Counter,F
01EE   2???               M                 goto    loop_
01EF                      M end_
01EF   2???           00411     call    HalfS
01F0   2???           00412     goto    logs
                      00413 
01F1                  00414 check_log4
01F1   0820           00415     movf    keytemp, W
01F2   3A04           00416     xorlw   0x4
01F3   1D03           00417     btfss   STATUS,Z
01F4   2???           00418     goto    check_done
01F5   2???           00419     call    Clear_Display
                      00420     Display None
  0000                    M                 local   loop_
  0000                    M                 local   end_
01F6   01A2               M                 clrf    Table_Counter
01F7   0103               M                 clrw
01F8   0822               M loop_   movf    Table_Counter,W
01F9   2???               M                 call    None
01FA   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
01FB   1903               M                 btfsc   STATUS,Z
01FC   2???               M                 goto    end_
01FD   2???               M                 call    WR_DATA
01FE   0AA2               M                 incf    Table_Counter,F
01FF   2???               M                 goto    loop_
0200                      M end_
0200   2???           00421     call    HalfS
0201   2???           00422     goto    logs
                      00423 
0202                  00424 check_done
0202   0820           00425     movf    keytemp, W
0203   3A0D           00426     xorlw   0xD
0204   1D03           00427     btfss   STATUS,Z
0205   2???           00428     goto    badkey
0206   2???           00429     call    Clear_Display
                      00430     Display Standby_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
0207   01A2               M                 clrf    Table_Counter
0208   0103               M                 clrw
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0209   0822               M loop_   movf    Table_Counter,W
020A   2???               M                 call    Standby_Msg
020B   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
020C   1903               M                 btfsc   STATUS,Z
020D   2???               M                 goto    end_
020E   2???               M                 call    WR_DATA
020F   0AA2               M                 incf    Table_Counter,F
0210   2???               M                 goto    loop_
0211                      M end_
0211   2???           00431     call    Switch_Lines
0212   2???           00432     goto    waiting
                      00433 
0213                  00434 badkey
0213   1886           00435     btfsc               PORTB,1     ;Wait until key is released
0214   2???           00436     goto                $-1
0215   2???           00437     goto        polling
                      00438   
                      00439 
                      00440 ;***************************************
                      00441 ; DATA DISPLAY ROUTINE
                      00442 ; Which key was pressed is stored in W (0000 for "1" to 1111 for "D")
                      00443 ; Determines which key it was and displays appropriate info / branch
                      00444 ;***************************************
                      00445 
0216                  00446 information
0216   00A0           00447     movwf   keytemp             ; Save which key was pressed
                      00448 
0217                  00449 check_1
0217   3A00           00450     xorlw   0x0         ;will be all zeros if its 1
0218   1D03           00451     btfss   STATUS,Z    ;and Z will be high, so skip
0219   2???           00452     goto    check_2
021A   2???           00453     call    Clear_Display
                      00454     writenum 0x1
021B   3001               M             movlw    0x1
021C   3E30               M             addlw   B'00110000'
021D   00A4               M             movwf   dat
021E   2???               M             call WR_DATA
021F   0833           00455     movf    state1, W
0220   2???           00456     call    display_state
0221   0008           00457     return
                      00458 
0222                  00459 check_2
0222   0820           00460     movf    keytemp, W
0223   3A01           00461     xorlw   0x1
0224   1D03           00462     btfss   STATUS,Z
0225   2???           00463     goto    check_3
0226   2???           00464     call    Clear_Display
                      00465     writenum 0x2
0227   3002               M             movlw    0x2
0228   3E30               M             addlw   B'00110000'
0229   00A4               M             movwf   dat
022A   2???               M             call WR_DATA
022B   0834           00466     movf    state2, W
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

022C   2???           00467     call    display_state
022D   0008           00468     return
                      00469 
022E                  00470 check_3
022E   0820           00471     movf    keytemp, W
022F   3A02           00472     xorlw   0x2
0230   1D03           00473     btfss   STATUS,Z
0231   2???           00474     goto    check_4
0232   2???           00475     call    Clear_Display
                      00476     writenum 0x3
0233   3003               M             movlw    0x3
0234   3E30               M             addlw   B'00110000'
0235   00A4               M             movwf   dat
0236   2???               M             call WR_DATA
0237   0835           00477     movf    state3, W
0238   2???           00478     call    display_state
0239   0008           00479     return
                      00480 
023A                  00481 check_4
023A   0820           00482     movf    keytemp, W
023B   3A04           00483     xorlw   0x4
023C   1D03           00484     btfss   STATUS,Z
023D   2???           00485     goto    check_5
023E   2???           00486     call    Clear_Display
                      00487     writenum 0x4
023F   3004               M             movlw    0x4
0240   3E30               M             addlw   B'00110000'
0241   00A4               M             movwf   dat
0242   2???               M             call WR_DATA
0243   0836           00488     movf    state4, W
0244   2???           00489     call    display_state
0245   0008           00490     return
                      00491 
0246                  00492 check_5
0246   0820           00493     movf    keytemp, W
0247   3A05           00494     xorlw   0x5
0248   1D03           00495     btfss   STATUS,Z
0249   2???           00496     goto    check_6
024A   2???           00497     call    Clear_Display
                      00498     writenum 0x5
024B   3005               M             movlw    0x5
024C   3E30               M             addlw   B'00110000'
024D   00A4               M             movwf   dat
024E   2???               M             call WR_DATA
024F   0837           00499     movf    state5, W
0250   2???           00500     call    display_state
0251   0008           00501     return
                      00502 
0252                  00503 check_6
0252   0820           00504     movf    keytemp, W
0253   3A06           00505     xorlw   0x6
0254   1D03           00506     btfss   STATUS,Z
0255   2???           00507     goto    check_7
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0256   2???           00508     call    Clear_Display
                      00509     writenum 0x6
0257   3006               M             movlw    0x6
0258   3E30               M             addlw   B'00110000'
0259   00A4               M             movwf   dat
025A   2???               M             call WR_DATA
025B   0838           00510     movf    state6, W
025C   2???           00511     call    display_state
025D   0008           00512     return
                      00513 
025E                  00514 check_7
025E   0820           00515     movf    keytemp, W
025F   3A08           00516     xorlw   0x8
0260   1D03           00517     btfss   STATUS,Z
0261   2???           00518     goto    check_8
0262   2???           00519     call    Clear_Display
                      00520     writenum 0x7
0263   3007               M             movlw    0x7
0264   3E30               M             addlw   B'00110000'
0265   00A4               M             movwf   dat
0266   2???               M             call WR_DATA
0267   0839           00521     movf    state7, W
0268   2???           00522     call    display_state
0269   0008           00523     return
                      00524 
026A                  00525 check_8
026A   0820           00526     movf    keytemp, W
026B   3A09           00527     xorlw   0x9
026C   1D03           00528     btfss   STATUS,Z
026D   2???           00529     goto    check_9
026E   2???           00530     call    Clear_Display
                      00531     writenum 0x8
026F   3008               M             movlw    0x8
0270   3E30               M             addlw   B'00110000'
0271   00A4               M             movwf   dat
0272   2???               M             call WR_DATA
0273   083A           00532     movf    state8, W
0274   2???           00533     call    display_state
0275   0008           00534     return
                      00535 
0276                  00536 check_9
0276   0820           00537     movf    keytemp, W
0277   3A0A           00538     xorlw   0xA
0278   1D03           00539     btfss   STATUS,Z
0279   2???           00540     goto    check_summary
027A   2???           00541     call    Clear_Display
                      00542     writenum 0x9
027B   3009               M             movlw    0x9
027C   3E30               M             addlw   B'00110000'
027D   00A4               M             movwf   dat
027E   2???               M             call WR_DATA
027F   083B           00543     movf    state9, W
0280   2???           00544     call    display_state
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0281   0008           00545     return
                      00546 
0282                  00547 check_summary
0282   0820           00548     movf    keytemp, W
0283   3A03           00549     xorlw   0x3
0284   1D03           00550     btfss   STATUS,Z
0285   2???           00551     goto    check_defective
0286   2???           00552     call    summary
0287   0008           00553     return
                      00554 
0288                  00555 check_defective
0288   0820           00556     movf    keytemp, W
0289   3A07           00557     xorlw   0x7
028A   1D03           00558     btfss   STATUS,Z
028B   2???           00559     goto    check_time
028C   2???           00560     call    defective
028D   0008           00561     return
                      00562 
028E                  00563 check_time
028E   0820           00564     movf    keytemp, W
028F   3A0B           00565     xorlw   0xB
0290   1D03           00566     btfss   STATUS,Z
0291   2???           00567     goto    check_export
0292   2???           00568     call    time
0293   0008           00569     return
                      00570 
0294                  00571 check_export                ;doesn't actually export yet
0294   0820           00572     movf    keytemp, W
0295   3A0F           00573     xorlw   0xF
0296   1D03           00574     btfss   STATUS,Z
0297   2???           00575     goto    check_standby
0298   2???           00576     call    export
0299   0008           00577     return
                      00578 
029A                  00579 check_standby
029A   0820           00580     movf    keytemp, W
029B   3A0D           00581     xorlw   0xD
029C   1D03           00582     btfss   STATUS,Z
029D   2???           00583     goto    check_start
029E   2???           00584     call    Clear_Display
                      00585     Display Standby_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
029F   01A2               M                 clrf    Table_Counter
02A0   0103               M                 clrw
02A1   0822               M loop_   movf    Table_Counter,W
02A2   2???               M                 call    Standby_Msg
02A3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02A4   1903               M                 btfsc   STATUS,Z
02A5   2???               M                 goto    end_
02A6   2???               M                 call    WR_DATA
02A7   0AA2               M                 incf    Table_Counter,F
02A8   2???               M                 goto    loop_
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02A9                      M end_
02A9   2???           00586     call    Switch_Lines
02AA   2???           00587     goto    waiting
                      00588 
02AB                  00589 check_start
02AB   0820           00590     movf    keytemp, W
02AC   3A0C           00591     xorlw   0xC
02AD   1D03           00592     btfss   STATUS,Z
02AE   2???           00593     goto    default_key
02AF   2???           00594     goto    start
                      00595 
02B0                  00596 default_key         ; will never get here
02B0   0008           00597     return
                      00598 
                      00599 
                      00600 ;Display state subroutine
                      00601 ;stateN is in W
02B1                  00602 display_state
02B1   00A1           00603     movwf  statetemp    ; save stateN
                      00604 
02B2                  00605 check_none
02B2   3A00           00606     xorlw   0x0
02B3   1D03           00607     btfss   STATUS,Z
02B4   2???           00608     goto    check_pass
                      00609     Display Not_present
  0000                    M                 local   loop_
  0000                    M                 local   end_
02B5   01A2               M                 clrf    Table_Counter
02B6   0103               M                 clrw
02B7   0822               M loop_   movf    Table_Counter,W
02B8   2???               M                 call    Not_present
02B9   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02BA   1903               M                 btfsc   STATUS,Z
02BB   2???               M                 goto    end_
02BC   2???               M                 call    WR_DATA
02BD   0AA2               M                 incf    Table_Counter,F
02BE   2???               M                 goto    loop_
02BF                      M end_
02BF   0008           00610     return
                      00611 
02C0                  00612 check_pass
02C0   0821           00613     movf    statetemp, W
02C1   3A01           00614     xorlw   0x1
02C2   1D03           00615     btfss   STATUS,Z
02C3   2???           00616     goto    check_LED
                      00617     Display Pass
  0000                    M                 local   loop_
  0000                    M                 local   end_
02C4   01A2               M                 clrf    Table_Counter
02C5   0103               M                 clrw
02C6   0822               M loop_   movf    Table_Counter,W
02C7   2???               M                 call    Pass
02C8   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

02C9   1903               M                 btfsc   STATUS,Z
02CA   2???               M                 goto    end_
02CB   2???               M                 call    WR_DATA
02CC   0AA2               M                 incf    Table_Counter,F
02CD   2???               M                 goto    loop_
02CE                      M end_
02CE   0008           00618     return
                      00619 
02CF                  00620 check_LED
02CF   0821           00621     movf    statetemp, W
02D0   3A02           00622     xorlw   0x2
02D1   1D03           00623     btfss   STATUS,Z
02D2   2???           00624     goto    check_flick
                      00625     Display LED_fail
  0000                    M                 local   loop_
  0000                    M                 local   end_
02D3   01A2               M                 clrf    Table_Counter
02D4   0103               M                 clrw
02D5   0822               M loop_   movf    Table_Counter,W
02D6   2???               M                 call    LED_fail
02D7   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02D8   1903               M                 btfsc   STATUS,Z
02D9   2???               M                 goto    end_
02DA   2???               M                 call    WR_DATA
02DB   0AA2               M                 incf    Table_Counter,F
02DC   2???               M                 goto    loop_
02DD                      M end_
02DD   0008           00626     return
                      00627 
02DE                  00628 check_flick
02DE   0821           00629     movf    statetemp, W
02DF   3A03           00630     xorlw   0x3
02E0   1D03           00631     btfss   STATUS,Z
02E1   2???           00632     goto    default_state
                      00633     Display Flick_fail
  0000                    M                 local   loop_
  0000                    M                 local   end_
02E2   01A2               M                 clrf    Table_Counter
02E3   0103               M                 clrw
02E4   0822               M loop_   movf    Table_Counter,W
02E5   2???               M                 call    Flick_fail
02E6   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02E7   1903               M                 btfsc   STATUS,Z
02E8   2???               M                 goto    end_
02E9   2???               M                 call    WR_DATA
02EA   0AA2               M                 incf    Table_Counter,F
02EB   2???               M                 goto    loop_
02EC                      M end_
02EC   0008           00634     return
                      00635 
02ED                  00636 default_state   ; should never get here
02ED   0008           00637     return
                      00638 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00639 ; Summary Subroutine
                      00640 ; Displays total number of candles and number of defective candles
                      00641 ; Reads data from num_tot and num_def
02EE                  00642 summary
02EE   2???           00643     call            Clear_Display
                      00644     Display         Total_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
02EF   01A2               M                 clrf    Table_Counter
02F0   0103               M                 clrw
02F1   0822               M loop_   movf    Table_Counter,W
02F2   2???               M                 call    Total_Msg
02F3   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
02F4   1903               M                 btfsc   STATUS,Z
02F5   2???               M                 goto    end_
02F6   2???               M                 call    WR_DATA
02F7   0AA2               M                 incf    Table_Counter,F
02F8   2???               M                 goto    loop_
02F9                      M end_
                      00645     writenum_reg    num_tot
02F9   083D               M             movfw    num_tot
02FA   3E30               M             addlw   B'00110000'
02FB   00A4               M             movwf   dat
02FC   2???               M             call WR_DATA
02FD   2???           00646     call            Switch_Lines
                      00647     Display         Defective
  0000                    M                 local   loop_
  0000                    M                 local   end_
02FE   01A2               M                 clrf    Table_Counter
02FF   0103               M                 clrw
0300   0822               M loop_   movf    Table_Counter,W
0301   2???               M                 call    Defective
0302   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0303   1903               M                 btfsc   STATUS,Z
0304   2???               M                 goto    end_
0305   2???               M                 call    WR_DATA
0306   0AA2               M                 incf    Table_Counter,F
0307   2???               M                 goto    loop_
0308                      M end_
                      00648     writenum_reg    num_def
0308   083C               M             movfw    num_def
0309   3E30               M             addlw   B'00110000'
030A   00A4               M             movwf   dat
030B   2???               M             call WR_DATA
030C   0008           00649     return
                      00650 
                      00651 ; Defective candles Subroutine
                      00652 ; Displays index of each defective candle
                      00653 ; Reads data from state1 - state9
030D                  00654 defective
030D   2???           00655     call            Clear_Display
                      00656     Display         Defective
  0000                    M                 local   loop_
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                    M                 local   end_
030E   01A2               M                 clrf    Table_Counter
030F   0103               M                 clrw
0310   0822               M loop_   movf    Table_Counter,W
0311   2???               M                 call    Defective
0312   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0313   1903               M                 btfsc   STATUS,Z
0314   2???               M                 goto    end_
0315   2???               M                 call    WR_DATA
0316   0AA2               M                 incf    Table_Counter,F
0317   2???               M                 goto    loop_
0318                      M end_
0318   2???           00657     call            Switch_Lines
0319   08BC           00658     movf            num_def, F
031A   1D03           00659     btfss           STATUS,Z         ;if none defective, just say "none"
031B   2???           00660     goto            one
                      00661     Display         None
  0000                    M                 local   loop_
  0000                    M                 local   end_
031C   01A2               M                 clrf    Table_Counter
031D   0103               M                 clrw
031E   0822               M loop_   movf    Table_Counter,W
031F   2???               M                 call    None
0320   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0321   1903               M                 btfsc   STATUS,Z
0322   2???               M                 goto    end_
0323   2???               M                 call    WR_DATA
0324   0AA2               M                 incf    Table_Counter,F
0325   2???               M                 goto    loop_
0326                      M end_
0326   0008           00662     return
0327                  00663 one
0327   1CB3           00664     btfss           state1, 1          ;defective if state is 10 or 11
0328   2???           00665     goto            two
                      00666     writenum        0x1
0329   3001               M             movlw    0x1
032A   3E30               M             addlw   B'00110000'
032B   00A4               M             movwf   dat
032C   2???               M             call WR_DATA
                      00667     spacebar
032D   3014               M             movlw   B'00010100'
032E   2???               M             call    WR_INS
032F                  00668 two
032F   1CB4           00669     btfss           state2, 1          ;defective if state is 10 or 11
0330   2???           00670     goto            three
                      00671     writenum        0x2
0331   3002               M             movlw    0x2
0332   3E30               M             addlw   B'00110000'
0333   00A4               M             movwf   dat
0334   2???               M             call WR_DATA
                      00672     spacebar
0335   3014               M             movlw   B'00010100'
0336   2???               M             call    WR_INS
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0337                  00673 three
0337   1CB5           00674     btfss           state3, 1          ;defective if state is 10 or 11
0338   2???           00675     goto            four
                      00676     writenum        0x3
0339   3003               M             movlw    0x3
033A   3E30               M             addlw   B'00110000'
033B   00A4               M             movwf   dat
033C   2???               M             call WR_DATA
                      00677     spacebar
033D   3014               M             movlw   B'00010100'
033E   2???               M             call    WR_INS
033F                  00678 four
033F   1CB6           00679     btfss           state4, 1          ;defective if state is 10 or 11
0340   2???           00680     goto            five
                      00681     writenum        0x4
0341   3004               M             movlw    0x4
0342   3E30               M             addlw   B'00110000'
0343   00A4               M             movwf   dat
0344   2???               M             call WR_DATA
                      00682     spacebar
0345   3014               M             movlw   B'00010100'
0346   2???               M             call    WR_INS
0347                  00683 five
0347   1CB7           00684     btfss           state5, 1          ;defective if state is 10 or 11
0348   2???           00685     goto            six
                      00686     writenum        0x5
0349   3005               M             movlw    0x5
034A   3E30               M             addlw   B'00110000'
034B   00A4               M             movwf   dat
034C   2???               M             call WR_DATA
                      00687     spacebar
034D   3014               M             movlw   B'00010100'
034E   2???               M             call    WR_INS
034F                  00688 six
034F   1CB8           00689     btfss           state6, 1          ;defective if state is 10 or 11
0350   2???           00690     goto            seven
                      00691     writenum        0x6
0351   3006               M             movlw    0x6
0352   3E30               M             addlw   B'00110000'
0353   00A4               M             movwf   dat
0354   2???               M             call WR_DATA
                      00692     spacebar
0355   3014               M             movlw   B'00010100'
0356   2???               M             call    WR_INS
0357                  00693 seven
0357   1CB9           00694     btfss           state7, 1          ;defective if state is 10 or 11
0358   2???           00695     goto            eight
                      00696     writenum        0x7
0359   3007               M             movlw    0x7
035A   3E30               M             addlw   B'00110000'
035B   00A4               M             movwf   dat
035C   2???               M             call WR_DATA
                      00697     spacebar
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

035D   3014               M             movlw   B'00010100'
035E   2???               M             call    WR_INS
035F                  00698 eight
035F   1CBA           00699     btfss           state8, 1          ;defective if state is 10 or 11
0360   2???           00700     goto            nine
                      00701     writenum        0x8
0361   3008               M             movlw    0x8
0362   3E30               M             addlw   B'00110000'
0363   00A4               M             movwf   dat
0364   2???               M             call WR_DATA
                      00702     spacebar
0365   3014               M             movlw   B'00010100'
0366   2???               M             call    WR_INS
0367                  00703 nine
0367   1CBB           00704     btfss           state9, 1          ;defective if state is 10 or 11
0368   2???           00705     goto            end_defective
                      00706     writenum        0x9
0369   3009               M             movlw    0x9
036A   3E30               M             addlw   B'00110000'
036B   00A4               M             movwf   dat
036C   2???               M             call WR_DATA
036D                  00707 end_defective
036D   0008           00708     return
                      00709 
                      00710 ; Time subroutine
                      00711 ; Right now this takes the time in seconds as a binary number in op_time
                      00712 ; and puts it into huns,tens,ones to display. It assumes op_time was getting
                      00713 ; incremented every second. However I may just take the stop time - start time
                      00714 ; from the RTC data so this might change a lot.
036E                  00715 time
036E   2???           00716     call    Clear_Display
                      00717     Display Time_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
036F   01A2               M                 clrf    Table_Counter
0370   0103               M                 clrw
0371   0822               M loop_   movf    Table_Counter,W
0372   2???               M                 call    Time_Msg
0373   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0374   1903               M                 btfsc   STATUS,Z
0375   2???               M                 goto    end_
0376   2???               M                 call    WR_DATA
0377   0AA2               M                 incf    Table_Counter,F
0378   2???               M                 goto    loop_
0379                      M end_
0379   2???           00718     call    Switch_Lines
037A   0832           00719     movf    op_time, W
037B   2???           00720     call    big_number
037C   082B           00721     movf    huns, W
037D   1903           00722     btfsc   STATUS,Z        ;if huns is zero don't display it
037E   2???           00723     goto    no_huns
                      00724     writenum_reg    huns
037F   082B               M             movfw    huns
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0380   3E30               M             addlw   B'00110000'
0381   00A4               M             movwf   dat
0382   2???               M             call WR_DATA
0383                  00725 no_huns
0383   082C           00726     movf    tens, W
0384   1903           00727     btfsc   STATUS,Z        ;if tens is zero don't display it
0385   2???           00728     goto    no_tens
                      00729     writenum_reg    tens
0386   082C               M             movfw    tens
0387   3E30               M             addlw   B'00110000'
0388   00A4               M             movwf   dat
0389   2???               M             call WR_DATA
038A                  00730 no_tens
                      00731     writenum_reg    ones
038A   082D               M             movfw    ones
038B   3E30               M             addlw   B'00110000'
038C   00A4               M             movwf   dat
038D   2???               M             call WR_DATA
                      00732     Display Seconds
  0000                    M                 local   loop_
  0000                    M                 local   end_
038E   01A2               M                 clrf    Table_Counter
038F   0103               M                 clrw
0390   0822               M loop_   movf    Table_Counter,W
0391   2???               M                 call    Seconds
0392   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
0393   1903               M                 btfsc   STATUS,Z
0394   2???               M                 goto    end_
0395   2???               M                 call    WR_DATA
0396   0AA2               M                 incf    Table_Counter,F
0397   2???               M                 goto    loop_
0398                      M end_
0398   0008           00733     return
                      00734 
                      00735 ; Export subroutine         (DOESNT ACTUALLY EXPORT YET!)
                      00736 ; Eventually this will export data to external source
                      00737 ; Right now it just displays "Exporting. . ." then "Complete"
0399                  00738 export
0399   2???           00739     call    Clear_Display
                      00740     Display Export_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
039A   01A2               M                 clrf    Table_Counter
039B   0103               M                 clrw
039C   0822               M loop_   movf    Table_Counter,W
039D   2???               M                 call    Export_Msg
039E   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
039F   1903               M                 btfsc   STATUS,Z
03A0   2???               M                 goto    end_
03A1   2???               M                 call    WR_DATA
03A2   0AA2               M                 incf    Table_Counter,F
03A3   2???               M                 goto    loop_
03A4                      M end_
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03A4   2???           00741     call    HalfS
03A5   2???           00742     call    HalfS
03A6   2???           00743     call    Clear_Display
                      00744     Display End_Msg
  0000                    M                 local   loop_
  0000                    M                 local   end_
03A7   01A2               M                 clrf    Table_Counter
03A8   0103               M                 clrw
03A9   0822               M loop_   movf    Table_Counter,W
03AA   2???               M                 call    End_Msg
03AB   3A00               M                 xorlw   B'00000000' ;check WORK reg to see if 0 is returned
03AC   1903               M                 btfsc   STATUS,Z
03AD   2???               M                 goto    end_
03AE   2???               M                 call    WR_DATA
03AF   0AA2               M                 incf    Table_Counter,F
03B0   2???               M                 goto    loop_
03B1                      M end_
03B1   0008           00745     return
                      00746 
                      00747 
                      00748 ;***************************************
                      00749 ; DISPLAY BIG NUMBER SUBROUTINE
                      00750 ; Modified from http://www.piclist.com/techref/microchip/math/radix/b2a-8b3d-ab.htm
                      00751 ; Converts 8-bit binary number op_time to three BCDs representing huns, tens, ones
                      00752 ; Uses "shift and add 3" algorithm
                      00753 ;***************************************
03B2                  00754 big_number
                      00755     movff   op_time, op_time_save         ;save the original op_time
03B2   0832               M         movf    op_time, W
03B3   00AA               M         movwf   op_time_save
                      00756     movlf   8, bignumcount                ;will shift 8 times
03B4   3008               M         movlw   8
03B5   00AE               M         movwf   bignumcount
03B6   01AB           00757     clrf    huns
03B7   01AC           00758     clrf    tens
03B8   01AD           00759     clrf    ones
                      00760 
03B9                  00761 BCDadd3                             ; if any digit > 5, add3
03B9   3005           00762     movlw   0x5
03BA   022B           00763     subwf   huns, W
03BB   1803           00764     btfsc   STATUS, C
03BC   2???           00765     call    add3huns
                      00766 
03BD   3005           00767     movlw   0x5
03BE   022C           00768     subwf   tens, W
03BF   1803           00769     btfsc   STATUS, C
03C0   2???           00770     call    add3tens
                      00771 
03C1   3005           00772     movlw   0x5
03C2   022D           00773     subwf   ones, W
03C3   1803           00774     btfsc   STATUS, C
03C4   2???           00775     call    add3ones
                      00776 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

03C5   03AE           00777     decf    bignumcount, 1
03C6   1003           00778     bcf     STATUS, C
03C7   0DB2           00779     rlf     op_time, 1              ; shift
03C8   0DAD           00780     rlf     ones, 1
03C9   1A2D           00781     btfsc   ones,4 ;
03CA   2???           00782     call    carryones               ; carry if too large
03CB   0DAC           00783     rlf     tens, 1
                      00784 
03CC   1A2C           00785     btfsc   tens,4 ;
03CD   2???           00786     call    carrytens
03CE   0DAB           00787     rlf     huns,1
03CF   1003           00788     bcf     STATUS, C
                      00789 
03D0   082E           00790     movf    bignumcount, W
03D1   1D03           00791     btfss   STATUS, Z
03D2   2???           00792     goto    BCDadd3                 ; repeat until you've shifted it 8 times
                      00793 
                      00794     movff    op_time_save, op_time     ;restore the original op_time
03D3   082A               M         movf    op_time_save, W
03D4   00B2               M         movwf   op_time
03D5   0008           00795     return
                      00796 
03D6                  00797 add3huns
03D6   3003           00798     movlw 0x3
03D7   07AB           00799     addwf huns,F
03D8   0008           00800     return
03D9                  00801 add3tens
03D9   3003           00802     movlw 0x3
03DA   07AC           00803     addwf tens,F
03DB   0008           00804     return
03DC                  00805 add3ones
03DC   3003           00806     movlw 0x3
03DD   07AD           00807     addwf ones,F
03DE   0008           00808     return
03DF                  00809 carryones
03DF   122D           00810     bcf ones, 4
03E0   1403           00811     bsf STATUS, C
03E1   0008           00812     return
03E2                  00813 carrytens
03E2   122C           00814     bcf tens, 4
03E3   1403           00815     bsf STATUS, C
03E4   0008           00816     return
                      00817 
                      00818 
                      00819 ;***************************************
                      00820 ; LCD SUBROUTINES (from sample code)
                      00821 ;***************************************
                      00822 
                      00823 ; Initialize the LCD
03E5                  00824 InitLCD
03E5   1283           00825         bcf STATUS,RP0
03E6   1588           00826         bsf E     ;E default high
                      00827 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00828         ;Wait for LCD POR to finish (~15ms)
03E7   2???           00829         call lcdLongDelay
03E8   2???           00830         call lcdLongDelay
03E9   2???           00831         call lcdLongDelay
                      00832 
                      00833         ;Ensure 8-bit mode first (no way to immediately guarantee 4-bit mode)
                      00834         ; -> Send b'0011' 3 times
03EA   3033           00835         movlw   b'00110011'
03EB   2???           00836         call    WR_INS
03EC   2???           00837         call lcdLongDelay
03ED   2???           00838         call lcdLongDelay
03EE   3032           00839         movlw   b'00110010'
03EF   2???           00840         call    WR_INS
03F0   2???           00841         call lcdLongDelay
03F1   2???           00842         call lcdLongDelay
                      00843 
                      00844         ; 4 bits, 2 lines, 5x7 dots
03F2   3028           00845         movlw   b'00101000'
03F3   2???           00846         call    WR_INS
03F4   2???           00847         call lcdLongDelay
03F5   2???           00848         call lcdLongDelay
                      00849 
                      00850         ; display on/off
03F6   300C           00851         movlw   b'00001100'
03F7   2???           00852         call    WR_INS
03F8   2???           00853         call lcdLongDelay
03F9   2???           00854         call lcdLongDelay
                      00855 
                      00856         ; Entry mode
03FA   3006           00857         movlw   b'00000110'
03FB   2???           00858         call    WR_INS
03FC   2???           00859         call lcdLongDelay
03FD   2???           00860         call lcdLongDelay
                      00861 
                      00862         ; Clear ram
03FE   3001           00863         movlw   b'00000001'
03FF   2???           00864         call    WR_INS
0400   2???           00865         call lcdLongDelay
0401   2???           00866         call lcdLongDelay
0402   0008           00867         return
                      00868 
                      00869 ; Clear the display
0403                  00870 Clear_Display
0403   3001           00871                 movlw   B'00000001'
0404   2???           00872                 call    WR_INS
0405   0008           00873                 return
                      00874 
                      00875 ;Switch lines
0406                  00876 Switch_Lines
0406   30C0           00877                 movlw   B'11000000'
0407   2???           00878                 call    WR_INS
0408   0008           00879                 return
                      00880 
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00881 ; Write an instruction to the LCD (see page 7-104)
                      00882 ; The instruction must be in W
0409                  00883 WR_INS
0409   1108           00884         bcf             RS                              ;clear RS
040A   00A3           00885         movwf   com                             ;W --> com
040B   39F0           00886         andlw   0xF0                    ;mask 4 bits MSB w = X0
040C   0088           00887         movwf   PORTD                   ;Send 4 bits MSB
040D   1588           00888         bsf             E                               ;
040E   2???           00889         call    lcdLongDelay    ;__    __
040F   1188           00890         bcf             E                               ;  |__|
0410   0E23           00891         swapf   com,w
0411   39F0           00892         andlw   0xF0                    ;1111 0010
0412   0088           00893         movwf   PORTD                   ;send 4 bits LSB
0413   1588           00894         bsf             E                               ;
0414   2???           00895         call    lcdLongDelay    ;__    __
0415   1188           00896         bcf             E                               ;  |__|
0416   2???           00897         call    lcdLongDelay
0417   0008           00898         return
                      00899 
                      00900 ; Write data at current cursor location
                      00901 ; Character code (see page 7-104) must be in W
0418                  00902 WR_DATA
0418   1508           00903         bsf             RS
0419   00A4           00904         movwf   dat
041A   0824           00905         movf    dat,w
041B   39F0           00906         andlw   0xF0
041C   3E04           00907         addlw   4
041D   0088           00908         movwf   PORTD
041E   1588           00909         bsf             E                               ;
041F   2???           00910         call    lcdLongDelay    ;__    __
0420   1188           00911         bcf             E                               ;  |__|
0421   0E24           00912         swapf   dat,w
0422   39F0           00913         andlw   0xF0
0423   3E04           00914         addlw   4
0424   0088           00915         movwf   PORTD
0425   1588           00916         bsf             E                               ;
0426   2???           00917         call    lcdLongDelay    ;__    __
0427   1188           00918         bcf             E                               ;  |__|
0428   0008           00919         return
                      00920 
                      00921 ;Delay routine because PIC is way faster than the LCD can handle
0429                  00922 lcdLongDelay
0429   3014           00923     movlw d'20'
042A   00A6           00924     movwf lcd_d2
042B                  00925 LLD_LOOP
                      00926     LCD_DELAY
042B   30FF               M             movlw   0xFF
042C   00A5               M             movwf   lcd_d1
042D   0BA5               M             decfsz  lcd_d1,f
042E   2???               M             goto    $-1
042F   0BA6           00927     decfsz lcd_d2,f
0430   2???           00928     goto LLD_LOOP
0431   0008           00929     return
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00930 
                      00931 
                      00932 ;***************************************
                      00933 ; DELAY 0.5S SUBROUTINE (from sample code)
                      00934 ; Delays exactly 0.5sec
                      00935 ;***************************************
0432                  00936 HalfS
  0000                00937         local   HalfS_0
0432   3088           00938       movlw 0x88
0433   00A7           00939       movwf COUNTH
0434   30BD           00940       movlw 0xBD
0435   00A8           00941       movwf COUNTM
0436   3003           00942       movlw 0x03
0437   00A9           00943       movwf COUNTL
                      00944 
0438                  00945 HalfS_0
0438   0BA7           00946       decfsz COUNTH, f
0439   2???           00947       goto   $+2
043A   0BA8           00948       decfsz COUNTM, f
043B   2???           00949       goto   $+2
043C   0BA9           00950       decfsz COUNTL, f
043D   2???           00951       goto   HalfS_0
                      00952 
043E   2???           00953       goto $+1
043F   0000           00954       nop
0440   0000           00955       nop
0441   0008           00956                 return
                      00957 
                      00958 
                      00959 ;***************************************
                      00960 ; ISR
                      00961 ; Currently only care about TMR0
                      00962 ; TMR0 overflows at 256*256; each time, decrement count38
                      00963 ; count38 thus hits 0 every 256*256*38 cycles = 1sec with 10MHz clock
                      00964 ; When this hapens, op_time increments
                      00965 ;***************************************
0442                  00966 isr
0442   00B0           00967     movwf   w_isr           ;save W and status
0443   0E03           00968     swapf   STATUS, W
0444   1283           00969     bcf     STATUS, RP0
0445   00B1           00970     movwf   status_isr
                      00971 
Message[305]: Using default destination of 1 (file).
0446   0BAF           00972     decfsz    count38     ;if count38 gets to 38 it's been one second
0447   2???           00973     goto end_isr
                      00974     movlf   D'38', count38  ;so reset count38
0448   3026               M         movlw   D'38'
0449   00AF               M         movwf   count38
Message[305]: Using default destination of 1 (file).
044A   0AB2           00975     incf    op_time         ; and increment op_time
                      00976 
044B                  00977 end_isr
044B   0E31           00978     swapf   status_isr, W   ;restore W and status
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

044C   0083           00979     movwf   STATUS
044D   0EB0           00980     swapf   w_isr, F
044E   0E30           00981     swapf   w_isr, W
044F   110B           00982     bcf     INTCON, T0IF    ;clear the interrupt flag
0450   0009           00983     retfie
                      00984 
                      00985 
3F72                  00986     END
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
BCDadd3                           000003B9
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKE                               00000006
CKP                               00000004
COUNTH                            00000027
COUNTL                            00000029
COUNTM                            00000028
CREN                              00000004
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

CSRC                              00000007
Clear_Display                     00000403
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
Defective                         00000089
Display                           
E                                 PORTD,3
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
End_Msg                           00000020
Export_Msg                        000000A2
F                                 00000001
FERR                              00000002
FSR                               00000004
Flick_fail                        00000068
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
HalfS                             00000432
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
InitLCD                           000003E5
LCD_DELAY                         
LED_fail                          0000005C
LLD_LOOP                          0000042B
Logs_Msg1                         000000B3
Logs_Msg2                         000000C3
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
None                              00000096
Not_present                       00000045
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
Pass                              00000054
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RS                                PORTD,2
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Seconds                           0000003B
Standby_Msg                       00000005
Start_Msg                         0000000E
Switch_Lines                      00000406
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
Table_Counter                     00000022
Time_Msg                          0000002A
Total_Msg                         00000078
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WR_DATA                           00000418
WR_INS                            00000409
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

Z                                 00000002
_.org_1_0155                      00000155
_.org_1_019D                      0000019D
_.org_1_01A2                      000001A2
_.org_1_01BB                      000001BB
_.org_1_0214                      00000214
_.org_1_042E                      0000042E
_.org_1_0439                      00000439
_.org_1_043B                      0000043B
_.org_1_043E                      0000043E
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00000FCF
_CP_HALF                          00001FDF
_CP_OFF                           00003FFF
_CP_UPPER_256                     00002FEF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_ENABLE_OFF                   00003DFF
_WRT_ENABLE_ON                    00003FFF
_WRT_OFF                          00003DFF
_WRT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F877                          00000001
add3huns                          000003D6
add3ones                          000003DC
add3tens                          000003D9
badkey                            00000213
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

big_number                        000003B2
bignumcount                       0000002E
carryones                         000003DF
carrytens                         000003E2
check_1                           00000217
check_2                           00000222
check_3                           0000022E
check_4                           0000023A
check_5                           00000246
check_6                           00000252
check_7                           0000025E
check_8                           0000026A
check_9                           00000276
check_LED                         000002CF
check_defective                   00000288
check_done                        00000202
check_export                      00000294
check_flick                       000002DE
check_log1                        000001BF
check_log2                        000001CF
check_log3                        000001E0
check_log4                        000001F1
check_none                        000002B2
check_pass                        000002C0
check_standby                     0000029A
check_start                       000002AB
check_summary                     00000282
check_time                        0000028E
com                               00000023
count38                           0000002F
dat                               00000024
default_key                       000002B0
default_state                     000002ED
defective                         0000030D
display_state                     000002B1
eight                             0000035F
end_defective                     0000036D
end_isr                           0000044B
export                            00000399
five                              00000347
four                              0000033F
huns                              0000002B
i2c_common_setup                  00000000
information                       00000216
init                              000000D4
isr                               00000442
keytemp                           00000020
lcdLongDelay                      00000429
lcd_d1                            00000025
lcd_d2                            00000026
logs                              000001A4
movff                             
movlf                             
MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

nine                              00000367
no_huns                           00000383
no_tens                           0000038A
num_def                           0000003C
num_tot                           0000003D
one                               00000327
ones                              0000002D
op_time                           00000032
op_time_save                      0000002A
poll                              0000019C
polling                           000001BA
read_rtc                          00000000
rtc_convert                       00000000
rtc_read                          
rtc_resetAll                      
rtc_set                           
seven                             00000357
six                               0000034F
spacebar                          
start                             00000157
start_date1                       00000043
start_date10                      00000042
start_hour1                       00000045
start_hour10                      00000044
start_min1                        00000047
start_min10                       00000046
start_month1                      00000041
start_month10                     00000040
start_year1                       0000003F
start_year10                      0000003E
state1                            00000033
state2                            00000034
state3                            00000035
state4                            00000036
state5                            00000037
state6                            00000038
state7                            00000039
state8                            0000003A
state9                            0000003B
statetemp                         00000021
status_isr                        00000031
summary                           000002EE
tens                              0000002C
three                             00000337
time                              0000036E
two                               0000032F
w_isr                             00000030
waiting                           000000EF
write_rtc                         00000000
writenum                          
writenum_reg                      

MPASM 5.54                          MAIN.ASM   2-5-2014  16:19:03         PAGE 42





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    17 reported,     0 suppressed

